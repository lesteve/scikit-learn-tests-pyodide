(node:397064) ExperimentalWarning: Fetch is an experimental feature. This feature could change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
warning: no blob constructor, cannot create blobs with mimetypes
warning: no BlobBuilder
Loading distutils
Loaded distutils
Python initialization complete
(node:397064) ExperimentalWarning: buffer.Blob is an experimental feature. This feature could change at any time
distutils already loaded from default channel
Loading micropip, pyparsing, packaging
Loaded micropip, pyparsing, packaging
distutils already loaded from default channel
Loading scikit-learn, scipy, numpy, joblib, threadpoolctl, clapack
Loaded clapack, joblib, threadpoolctl, numpy, scikit-learn, scipy
distutils already loaded from default channel
pyparsing already loaded from default channel
Loading pytest, atomicwrites, attrs, six, more-itertools, pluggy, py, setuptools, iniconfig
Loaded atomicwrites, attrs, six, pytest, more-itertools, pluggy, py, iniconfig, setuptools
Loading tomli
Loaded tomli
pytest command: pytest.main("--pyargs sklearn.metrics.tests -v".split())
[1m============================= test session starts ==============================[0m
platform emscripten -- Python 3.10.2, pytest-7.1.2, pluggy-1.0.0 -- 
cachedir: .pytest_cache
rootdir: /home/pyodide
[1mcollecting ... [0m[1mcollecting 117 items                                                           [0m[1mcollecting 1889 items                                                          [0m[1mcollecting 2227 items                                                          [0m[1mcollected 2227 items                                                           [0m

test_classification.py::test_classification_report_dictionary_output [32mPASSED[0m[32m [  0%][0m
test_classification.py::test_classification_report_output_dict_empty_input [32mPASSED[0m[32m [  0%][0m
test_classification.py::test_classification_report_zero_division_warning[warn] [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_classification_report_zero_division_warning[0] [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_classification_report_zero_division_warning[1] [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_multilabel_accuracy_score_subset_accuracy [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_precision_recall_f1_score_binary [32mPASSED[0m[33m     [  0%][0m
test_classification.py::test_precision_recall_f_binary_single_class [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_precision_recall_f_extra_labels [32mPASSED[0m[33m      [  0%][0m
test_classification.py::test_precision_recall_f_ignored_labels [32mPASSED[0m[33m    [  0%][0m
test_classification.py::test_average_precision_score_score_non_binary_class [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_average_precision_score_duplicate_values [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_average_precision_score_tied_values [32mPASSED[0m[33m  [  0%][0m
test_classification.py::test_precision_recall_fscore_support_errors [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_precision_recall_f_unused_pos_label [32mPASSED[0m[33m  [  0%][0m
test_classification.py::test_confusion_matrix_binary [32mPASSED[0m[33m              [  0%][0m
test_classification.py::test_multilabel_confusion_matrix_binary [32mPASSED[0m[33m   [  0%][0m
test_classification.py::test_multilabel_confusion_matrix_multiclass [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_multilabel_confusion_matrix_multilabel [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_multilabel_confusion_matrix_errors [32mPASSED[0m[33m   [  0%][0m
test_classification.py::test_confusion_matrix_normalize[true-f-0.333333333] [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_confusion_matrix_normalize[pred-f-0.333333333] [32mPASSED[0m[33m [  0%][0m
test_classification.py::test_confusion_matrix_normalize[all-f-0.1111111111] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_confusion_matrix_normalize[None-i-2] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_confusion_matrix_normalize_wrong_option [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_confusion_matrix_normalize_single_class [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_cohen_kappa [32mPASSED[0m[33m                          [  1%][0m
test_classification.py::test_matthews_corrcoef_nan [32mPASSED[0m[33m                [  1%][0m
test_classification.py::test_matthews_corrcoef_against_numpy_corrcoef [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_matthews_corrcoef_against_jurman [32mPASSED[0m[33m     [  1%][0m
test_classification.py::test_matthews_corrcoef [32mPASSED[0m[33m                    [  1%][0m
test_classification.py::test_matthews_corrcoef_multiclass [32mPASSED[0m[33m         [  1%][0m
test_classification.py::test_matthews_corrcoef_overflow[100] [32mPASSED[0m[33m      [  1%][0m
test_classification.py::test_matthews_corrcoef_overflow[10000] [32mPASSED[0m[33m    [  1%][0m
test_classification.py::test_precision_recall_f1_score_multiclass [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[samples] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[micro] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[macro] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[weighted] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[None] [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_precision_recall_f1_score_binary_averaged [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_zero_precision_recall [32mPASSED[0m[33m                [  1%][0m
test_classification.py::test_confusion_matrix_multiclass_subset_labels [32mPASSED[0m[33m [  1%][0m
test_classification.py::test_confusion_matrix_error[empty list] [32mPASSED[0m[33m   [  1%][0m
test_classification.py::test_confusion_matrix_error[unknown labels] [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_confusion_matrix_on_zero_length_input[None] [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_confusion_matrix_on_zero_length_input[binary] [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_confusion_matrix_on_zero_length_input[multiclass] [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_confusion_matrix_dtype [32mPASSED[0m[33m               [  2%][0m
test_classification.py::test_classification_report_multiclass [32mPASSED[0m[33m     [  2%][0m
test_classification.py::test_classification_report_multiclass_balanced [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_multiclass_with_label_detection [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_multiclass_with_digits [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_multiclass_with_string_label [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_multiclass_with_unicode_label [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_multiclass_with_long_string_label [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_labels_target_names_unequal_length [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_classification_report_no_labels_target_names_unequal_length [32mPASSED[0m[33m [  2%][0m
test_classification.py::test_multilabel_classification_report [32mPASSED[0m[33m     [  2%][0m
test_classification.py::test_multilabel_zero_one_loss_subset [32mPASSED[0m[33m      [  2%][0m
test_classification.py::test_multilabel_hamming_loss [32mPASSED[0m[33m              [  2%][0m
test_classification.py::test_jaccard_score_validation [32mPASSED[0m[33m             [  2%][0m
test_classification.py::test_multilabel_jaccard_score [32mPASSED[0m[33m             [  2%][0m
test_classification.py::test_multiclass_jaccard_score [32mPASSED[0m[33m             [  2%][0m
test_classification.py::test_average_binary_jaccard_score [32mPASSED[0m[33m         [  2%][0m
test_classification.py::test_jaccard_score_zero_division_warning [32mPASSED[0m[33m  [  2%][0m
test_classification.py::test_jaccard_score_zero_division_set_value[0-0] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_jaccard_score_zero_division_set_value[1-0.5] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_score_multilabel_1 [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_score_multilabel_2 [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[warn] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[0] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[0-macro-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[0-micro-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[0-weighted-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[0-samples-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[1-macro-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[1-micro-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[1-weighted-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels[1-samples-1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_check_warnings[macro] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_check_warnings[micro] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_check_warnings[weighted] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_check_warnings[samples] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_average_none[0] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_average_none[1] [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_precision_recall_f1_no_labels_average_none_warn [32mPASSED[0m[33m [  3%][0m
test_classification.py::test_prf_warnings [32mPASSED[0m[33m                         [  3%][0m
test_classification.py::test_prf_no_warnings_if_zero_division_set[0] [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_prf_no_warnings_if_zero_division_set[1] [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_recall_warnings[warn] [32mPASSED[0m[33m                [  4%][0m
test_classification.py::test_recall_warnings[0] [32mPASSED[0m[33m                   [  4%][0m
test_classification.py::test_recall_warnings[1] [32mPASSED[0m[33m                   [  4%][0m
test_classification.py::test_precision_warnings[warn] [32mPASSED[0m[33m             [  4%][0m
test_classification.py::test_precision_warnings[0] [32mPASSED[0m[33m                [  4%][0m
test_classification.py::test_precision_warnings[1] [32mPASSED[0m[33m                [  4%][0m
test_classification.py::test_fscore_warnings[warn] [32mPASSED[0m[33m                [  4%][0m
test_classification.py::test_fscore_warnings[0] [32mPASSED[0m[33m                   [  4%][0m
test_classification.py::test_fscore_warnings[1] [32mPASSED[0m[33m                   [  4%][0m
test_classification.py::test_prf_average_binary_data_non_binary [32mPASSED[0m[33m   [  4%][0m
test_classification.py::test__check_targets [32mPASSED[0m[33m                       [  4%][0m
test_classification.py::test__check_targets_multiclass_with_both_y_true_and_y_pred_binary [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_hinge_loss_binary [32mPASSED[0m[33m                    [  4%][0m
test_classification.py::test_hinge_loss_multiclass [32mPASSED[0m[33m                [  4%][0m
test_classification.py::test_hinge_loss_multiclass_missing_labels_with_labels_none [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_hinge_loss_multiclass_no_consistent_pred_decision_shape [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_hinge_loss_multiclass_with_missing_labels [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_hinge_loss_multiclass_missing_labels_only_two_unq_in_y_true [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_hinge_loss_multiclass_invariance_lists [32mPASSED[0m[33m [  4%][0m
test_classification.py::test_log_loss [32mPASSED[0m[33m                             [  4%][0m
test_classification.py::test_log_loss_pandas_input [32mPASSED[0m[33m                [  5%][0m
test_classification.py::test_brier_score_loss [32mPASSED[0m[33m                     [  5%][0m
test_classification.py::test_balanced_accuracy_score_unseen [32mPASSED[0m[33m       [  5%][0m
test_classification.py::test_balanced_accuracy_score[y_true0-y_pred0] [32mPASSED[0m[33m [  5%][0m
test_classification.py::test_balanced_accuracy_score[y_true1-y_pred1] [32mPASSED[0m[33m [  5%][0m
test_classification.py::test_balanced_accuracy_score[y_true2-y_pred2] [32mPASSED[0m[33m [  5%][0m
test_common.py::test_symmetry_consistency [32mPASSED[0m[33m                         [  5%][0m
test_common.py::test_symmetric_metric[accuracy_score] [32mPASSED[0m[33m             [  5%][0m
test_common.py::test_symmetric_metric[cohen_kappa_score] [32mPASSED[0m[33m          [  5%][0m
test_common.py::test_symmetric_metric[f1_score] [32mPASSED[0m[33m                   [  5%][0m
test_common.py::test_symmetric_metric[hamming_loss] [32mPASSED[0m[33m               [  5%][0m
test_common.py::test_symmetric_metric[jaccard_score] [32mPASSED[0m[33m              [  5%][0m
test_common.py::test_symmetric_metric[macro_f1_score] [32mPASSED[0m[33m             [  5%][0m
test_common.py::test_symmetric_metric[macro_jaccard_score] [32mPASSED[0m[33m        [  5%][0m
test_common.py::test_symmetric_metric[matthews_corrcoef_score] [32mPASSED[0m[33m    [  5%][0m
test_common.py::test_symmetric_metric[max_error] [32mPASSED[0m[33m                  [  5%][0m
test_common.py::test_symmetric_metric[mean_absolute_error] [32mPASSED[0m[33m        [  5%][0m
test_common.py::test_symmetric_metric[mean_normal_deviance] [32mPASSED[0m[33m       [  5%][0m
test_common.py::test_symmetric_metric[mean_pinball_loss] [32mPASSED[0m[33m          [  5%][0m
test_common.py::test_symmetric_metric[mean_squared_error] [32mPASSED[0m[33m         [  5%][0m
test_common.py::test_symmetric_metric[median_absolute_error] [32mPASSED[0m[33m      [  5%][0m
test_common.py::test_symmetric_metric[micro_f0.5_score] [32mPASSED[0m[33m           [  5%][0m
test_common.py::test_symmetric_metric[micro_f1_score] [32mPASSED[0m[33m             [  6%][0m
test_common.py::test_symmetric_metric[micro_f2_score] [32mPASSED[0m[33m             [  6%][0m
test_common.py::test_symmetric_metric[micro_jaccard_score] [32mPASSED[0m[33m        [  6%][0m
test_common.py::test_symmetric_metric[micro_precision_score] [32mPASSED[0m[33m      [  6%][0m
test_common.py::test_symmetric_metric[micro_recall_score] [32mPASSED[0m[33m         [  6%][0m
test_common.py::test_symmetric_metric[samples_jaccard_score] [32mPASSED[0m[33m      [  6%][0m
test_common.py::test_symmetric_metric[unnormalized_accuracy_score] [32mPASSED[0m[33m [  6%][0m
test_common.py::test_symmetric_metric[unnormalized_zero_one_loss] [32mPASSED[0m[33m [  6%][0m
test_common.py::test_symmetric_metric[weighted_recall_score] [32mPASSED[0m[33m      [  6%][0m
test_common.py::test_symmetric_metric[zero_one_loss] [32mPASSED[0m[33m              [  6%][0m
test_common.py::test_not_symmetric_metric[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [  6%][0m
test_common.py::test_not_symmetric_metric[balanced_accuracy_score] [32mPASSED[0m[33m [  6%][0m
test_common.py::test_not_symmetric_metric[d2_absolute_error_score] [32mPASSED[0m[33m [  6%][0m
test_common.py::test_not_symmetric_metric[d2_pinball_score] [32mPASSED[0m[33m       [  6%][0m
test_common.py::test_not_symmetric_metric[d2_tweedie_score] [32mPASSED[0m[33m       [  6%][0m
test_common.py::test_not_symmetric_metric[det_curve] [32mPASSED[0m[33m              [  6%][0m
test_common.py::test_not_symmetric_metric[explained_variance_score] [32mPASSED[0m[33m [  6%][0m
test_common.py::test_not_symmetric_metric[f0.5_score] [32mPASSED[0m[33m             [  6%][0m
test_common.py::test_not_symmetric_metric[f2_score] [32mPASSED[0m[33m               [  6%][0m
test_common.py::test_not_symmetric_metric[hinge_loss] [32mPASSED[0m[33m             [  6%][0m
test_common.py::test_not_symmetric_metric[log_loss] [32mPASSED[0m[33m               [  6%][0m
test_common.py::test_not_symmetric_metric[macro_f0.5_score] [32mPASSED[0m[33m       [  6%][0m
test_common.py::test_not_symmetric_metric[macro_f2_score] [32mPASSED[0m[33m         [  7%][0m
test_common.py::test_not_symmetric_metric[macro_precision_score] [32mPASSED[0m[33m  [  7%][0m
test_common.py::test_not_symmetric_metric[macro_recall_score] [32mPASSED[0m[33m     [  7%][0m
test_common.py::test_not_symmetric_metric[mean_absolute_percentage_error] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[mean_compound_poisson_deviance] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[mean_gamma_deviance] [32mPASSED[0m[33m    [  7%][0m
test_common.py::test_not_symmetric_metric[mean_poisson_deviance] [32mPASSED[0m[33m  [  7%][0m
test_common.py::test_not_symmetric_metric[normalized_confusion_matrix] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[precision_recall_curve] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[precision_score] [32mPASSED[0m[33m        [  7%][0m
test_common.py::test_not_symmetric_metric[r2_score] [32mPASSED[0m[33m               [  7%][0m
test_common.py::test_not_symmetric_metric[recall_score] [32mPASSED[0m[33m           [  7%][0m
test_common.py::test_not_symmetric_metric[roc_curve] [32mPASSED[0m[33m              [  7%][0m
test_common.py::test_not_symmetric_metric[unnormalized_confusion_matrix] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[weighted_f0.5_score] [32mPASSED[0m[33m    [  7%][0m
test_common.py::test_not_symmetric_metric[weighted_f1_score] [32mPASSED[0m[33m      [  7%][0m
test_common.py::test_not_symmetric_metric[weighted_f2_score] [32mPASSED[0m[33m      [  7%][0m
test_common.py::test_not_symmetric_metric[weighted_jaccard_score] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_not_symmetric_metric[weighted_precision_score] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_sample_order_invariance[accuracy_score] [32mPASSED[0m[33m      [  7%][0m
test_common.py::test_sample_order_invariance[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_sample_order_invariance[balanced_accuracy_score] [32mPASSED[0m[33m [  7%][0m
test_common.py::test_sample_order_invariance[cohen_kappa_score] [32mPASSED[0m[33m   [  8%][0m
test_common.py::test_sample_order_invariance[d2_absolute_error_score] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[d2_pinball_score] [32mPASSED[0m[33m    [  8%][0m
test_common.py::test_sample_order_invariance[d2_tweedie_score] [32mPASSED[0m[33m    [  8%][0m
test_common.py::test_sample_order_invariance[explained_variance_score] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[hamming_loss] [32mPASSED[0m[33m        [  8%][0m
test_common.py::test_sample_order_invariance[hinge_loss] [32mPASSED[0m[33m          [  8%][0m
test_common.py::test_sample_order_invariance[log_loss] [32mPASSED[0m[33m            [  8%][0m
test_common.py::test_sample_order_invariance[macro_f0.5_score] [32mPASSED[0m[33m    [  8%][0m
test_common.py::test_sample_order_invariance[macro_f1_score] [32mPASSED[0m[33m      [  8%][0m
test_common.py::test_sample_order_invariance[macro_f2_score] [32mPASSED[0m[33m      [  8%][0m
test_common.py::test_sample_order_invariance[macro_jaccard_score] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[macro_precision_score] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[macro_recall_score] [32mPASSED[0m[33m  [  8%][0m
test_common.py::test_sample_order_invariance[matthews_corrcoef_score] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[max_error] [32mPASSED[0m[33m           [  8%][0m
test_common.py::test_sample_order_invariance[mean_absolute_error] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[mean_absolute_percentage_error] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[mean_compound_poisson_deviance] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[mean_gamma_deviance] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[mean_normal_deviance] [32mPASSED[0m[33m [  8%][0m
test_common.py::test_sample_order_invariance[mean_pinball_loss] [32mPASSED[0m[33m   [  8%][0m
test_common.py::test_sample_order_invariance[mean_poisson_deviance] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[mean_squared_error] [32mPASSED[0m[33m  [  9%][0m
test_common.py::test_sample_order_invariance[median_absolute_error] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[micro_f0.5_score] [32mPASSED[0m[33m    [  9%][0m
test_common.py::test_sample_order_invariance[micro_f1_score] [32mPASSED[0m[33m      [  9%][0m
test_common.py::test_sample_order_invariance[micro_f2_score] [32mPASSED[0m[33m      [  9%][0m
test_common.py::test_sample_order_invariance[micro_jaccard_score] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[micro_precision_score] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[micro_recall_score] [32mPASSED[0m[33m  [  9%][0m
test_common.py::test_sample_order_invariance[normalized_confusion_matrix] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[ovo_roc_auc] [32mPASSED[0m[33m         [  9%][0m
test_common.py::test_sample_order_invariance[ovr_roc_auc] [32mPASSED[0m[33m         [  9%][0m
test_common.py::test_sample_order_invariance[r2_score] [32mPASSED[0m[33m            [  9%][0m
test_common.py::test_sample_order_invariance[top_k_accuracy_score] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[unnormalized_accuracy_score] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[unnormalized_confusion_matrix] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[unnormalized_log_loss] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[unnormalized_zero_one_loss] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[weighted_f0.5_score] [32mPASSED[0m[33m [  9%][0m
test_common.py::test_sample_order_invariance[weighted_f1_score] [32mPASSED[0m[33m   [  9%][0m
test_common.py::test_sample_order_invariance[weighted_f2_score] [32mPASSED[0m[33m   [  9%][0m
test_common.py::test_sample_order_invariance[weighted_jaccard_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_sample_order_invariance[weighted_ovo_roc_auc] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_sample_order_invariance[weighted_ovr_roc_auc] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_sample_order_invariance[weighted_precision_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_sample_order_invariance[weighted_recall_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_sample_order_invariance[zero_one_loss] [32mPASSED[0m[33m       [ 10%][0m
test_common.py::test_sample_order_invariance_multilabel_and_multioutput [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[accuracy_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[balanced_accuracy_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[cohen_kappa_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[d2_absolute_error_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[d2_pinball_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[d2_tweedie_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[explained_variance_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[hamming_loss] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[hinge_loss] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[log_loss] [32mPASSED[0m[33m  [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[macro_f0.5_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[macro_f1_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[macro_f2_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[macro_jaccard_score] [32mPASSED[0m[33m [ 10%][0m
test_common.py::test_format_invariance_with_1d_vectors[macro_precision_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[macro_recall_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[matthews_corrcoef_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[max_error] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_absolute_error] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_compound_poisson_deviance] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_gamma_deviance] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_normal_deviance] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_pinball_loss] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_poisson_deviance] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[mean_squared_error] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[median_absolute_error] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[micro_f0.5_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[micro_f1_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[micro_f2_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[micro_jaccard_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[micro_precision_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[micro_recall_score] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[normalized_confusion_matrix] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[ovo_roc_auc] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[ovr_roc_auc] [32mPASSED[0m[33m [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[r2_score] [32mPASSED[0m[33m  [ 11%][0m
test_common.py::test_format_invariance_with_1d_vectors[top_k_accuracy_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[unnormalized_confusion_matrix] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[unnormalized_log_loss] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_f0.5_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_f1_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_f2_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_jaccard_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_ovo_roc_auc] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_ovr_roc_auc] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_precision_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[weighted_recall_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_format_invariance_with_1d_vectors[zero_one_loss] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[accuracy_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[balanced_accuracy_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[cohen_kappa_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[hamming_loss] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_f0.5_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_f1_score] [32mPASSED[0m[33m [ 12%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_f2_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_jaccard_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_precision_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_recall_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[matthews_corrcoef_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_f0.5_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_f1_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_f2_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_jaccard_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_precision_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_recall_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[normalized_confusion_matrix] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_confusion_matrix] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_f0.5_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_f1_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_f2_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_jaccard_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_precision_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_recall_score] [32mPASSED[0m[33m [ 13%][0m
test_common.py::test_classification_invariance_string_vs_numbers_labels[zero_one_loss] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[coverage_error] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[label_ranking_loss] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[log_loss] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[unnormalized_log_loss] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[hinge_loss] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[brier_score_loss] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[roc_auc_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[samples_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[micro_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[ovr_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_ovr_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[ovo_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_ovo_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[partial_roc_auc] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[average_precision_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_average_precision_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[samples_average_precision_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[micro_average_precision_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[label_ranking_average_precision_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[ndcg_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[dcg_score] [32mPASSED[0m[33m [ 14%][0m
test_common.py::test_thresholded_invariance_string_vs_numbers_labels[top_k_accuracy_score] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-coverage_error] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-label_ranking_loss] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-log_loss] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric3] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-hinge_loss] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-brier_score_loss] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-roc_auc_score] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric7] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric8] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric9] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric10] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric11] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric12] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric13] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric14] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-average_precision_score] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric16] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric17] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric18] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-label_ranking_average_precision_score] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-ndcg_score] [32mPASSED[0m[33m [ 15%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-dcg_score] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-top_k_accuracy_score] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-max_error] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-mean_absolute_error] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-mean_squared_error] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-mean_pinball_loss] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-median_absolute_error] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-mean_absolute_percentage_error] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-explained_variance_score] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric30] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric31] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-mean_poisson_deviance] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-mean_gamma_deviance] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric34] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-metric35] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-d2_pinball_score] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true0-y_score0-d2_absolute_error_score] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-coverage_error] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-label_ranking_loss] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-log_loss] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric3] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-hinge_loss] [32mPASSED[0m[33m [ 16%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-brier_score_loss] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-roc_auc_score] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric7] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric8] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric9] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric10] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric11] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric12] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric13] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric14] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-average_precision_score] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric16] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric17] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric18] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-label_ranking_average_precision_score] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-ndcg_score] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-dcg_score] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-top_k_accuracy_score] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-max_error] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-mean_absolute_error] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-mean_squared_error] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-mean_pinball_loss] [32mPASSED[0m[33m [ 17%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-median_absolute_error] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-mean_absolute_percentage_error] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-explained_variance_score] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric30] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric31] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-mean_poisson_deviance] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-mean_gamma_deviance] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric34] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-metric35] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-d2_pinball_score] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true1-y_score1-d2_absolute_error_score] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-coverage_error] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-label_ranking_loss] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-log_loss] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric3] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-hinge_loss] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-brier_score_loss] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-roc_auc_score] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric7] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric8] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric9] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric10] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric11] [32mPASSED[0m[33m [ 18%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric12] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric13] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric14] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-average_precision_score] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric16] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric17] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric18] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-label_ranking_average_precision_score] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-ndcg_score] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-dcg_score] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-top_k_accuracy_score] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-max_error] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-mean_absolute_error] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-mean_squared_error] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-mean_pinball_loss] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-median_absolute_error] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-mean_absolute_percentage_error] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-explained_variance_score] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric30] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric31] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-mean_poisson_deviance] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-mean_gamma_deviance] [32mPASSED[0m[33m [ 19%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric34] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-metric35] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-d2_pinball_score] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true2-y_score2-d2_absolute_error_score] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-coverage_error] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-label_ranking_loss] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-log_loss] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric3] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-hinge_loss] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-brier_score_loss] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-roc_auc_score] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric7] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric8] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric9] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric10] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric11] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric12] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric13] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric14] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-average_precision_score] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric16] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric17] [32mPASSED[0m[33m [ 20%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric18] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-label_ranking_average_precision_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-ndcg_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-dcg_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-top_k_accuracy_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-max_error] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-mean_absolute_error] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-mean_squared_error] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-mean_pinball_loss] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-median_absolute_error] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-mean_absolute_percentage_error] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-explained_variance_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric30] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric31] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-mean_poisson_deviance] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-mean_gamma_deviance] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric34] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-metric35] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-d2_pinball_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true3-y_score3-d2_absolute_error_score] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-coverage_error] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-label_ranking_loss] [32mPASSED[0m[33m [ 21%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-log_loss] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric3] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-hinge_loss] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-brier_score_loss] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-roc_auc_score] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric7] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric8] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric9] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric10] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric11] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric12] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric13] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric14] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-average_precision_score] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric16] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric17] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric18] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-label_ranking_average_precision_score] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-ndcg_score] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-dcg_score] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-top_k_accuracy_score] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-max_error] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-mean_absolute_error] [32mPASSED[0m[33m [ 22%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-mean_squared_error] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-mean_pinball_loss] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-median_absolute_error] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-mean_absolute_percentage_error] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-explained_variance_score] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric30] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric31] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-mean_poisson_deviance] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-mean_gamma_deviance] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric34] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-metric35] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-d2_pinball_score] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_regression_thresholded_inf_nan_input[y_true4-y_score4-d2_absolute_error_score] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-accuracy_score] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-balanced_accuracy_score] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric2] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric3] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-confusion_matrix] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-<lambda>] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric7] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-hamming_loss] [32mPASSED[0m[33m [ 23%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-zero_one_loss] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric10] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-jaccard_score] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-precision_score] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-recall_score] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-f1_score] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric15] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric16] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-matthews_corrcoef] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric18] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric19] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric20] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric21] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric22] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric23] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric24] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric25] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric26] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric27] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric28] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric29] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric30] [32mPASSED[0m[33m [ 24%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric31] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric32] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric33] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric34] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric35] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric36] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric37] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric38] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric39] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric40] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-metric41] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true0-y_score0-cohen_kappa_score] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-accuracy_score] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-balanced_accuracy_score] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric2] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric3] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-confusion_matrix] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-<lambda>] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric7] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-hamming_loss] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-zero_one_loss] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric10] [32mPASSED[0m[33m [ 25%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-jaccard_score] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-precision_score] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-recall_score] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-f1_score] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric15] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric16] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-matthews_corrcoef] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric18] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric19] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric20] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric21] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric22] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric23] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric24] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric25] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric26] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric27] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric28] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric29] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric30] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric31] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric32] [32mPASSED[0m[33m [ 26%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric33] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric34] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric35] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric36] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric37] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric38] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric39] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric40] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-metric41] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true1-y_score1-cohen_kappa_score] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-accuracy_score] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-balanced_accuracy_score] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric2] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric3] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-confusion_matrix] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-<lambda>] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric7] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-hamming_loss] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-zero_one_loss] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric10] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-jaccard_score] [32mPASSED[0m[33m [ 27%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-precision_score] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-recall_score] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-f1_score] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric15] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric16] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-matthews_corrcoef] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric18] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric19] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric20] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric21] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric22] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric23] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric24] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric25] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric26] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric27] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric28] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric29] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric30] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric31] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric32] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric33] [32mPASSED[0m[33m [ 28%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric34] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric35] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric36] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric37] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric38] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric39] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric40] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-metric41] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true2-y_score2-cohen_kappa_score] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-accuracy_score] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-balanced_accuracy_score] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric2] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric3] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-confusion_matrix] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-<lambda>] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric7] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-hamming_loss] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-zero_one_loss] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric10] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-jaccard_score] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-precision_score] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-recall_score] [32mPASSED[0m[33m [ 29%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-f1_score] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric15] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric16] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-matthews_corrcoef] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric18] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric19] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric20] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric21] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric22] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric23] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric24] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric25] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric26] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric27] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric28] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric29] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric30] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric31] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric32] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric33] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric34] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric35] [32mPASSED[0m[33m [ 30%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric36] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric37] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric38] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric39] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric40] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-metric41] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true3-y_score3-cohen_kappa_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-accuracy_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-balanced_accuracy_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric2] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric3] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-confusion_matrix] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-<lambda>] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric7] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-hamming_loss] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-zero_one_loss] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric10] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-jaccard_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-precision_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-recall_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-f1_score] [32mPASSED[0m[33m [ 31%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric15] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric16] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-matthews_corrcoef] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric18] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric19] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric20] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric21] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric22] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric23] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric24] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric25] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric26] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric27] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric28] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric29] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric30] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric31] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric32] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric33] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric34] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric35] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric36] [32mPASSED[0m[33m [ 32%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric37] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric38] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric39] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric40] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-metric41] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true4-y_score4-cohen_kappa_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-accuracy_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-balanced_accuracy_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric2] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric3] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-confusion_matrix] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-<lambda>] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric7] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-hamming_loss] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-zero_one_loss] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric10] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-jaccard_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-precision_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-recall_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-f1_score] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric15] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric16] [32mPASSED[0m[33m [ 33%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-matthews_corrcoef] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric18] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric19] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric20] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric21] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric22] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric23] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric24] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric25] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric26] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric27] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric28] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric29] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric30] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric31] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric32] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric33] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric34] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric35] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric36] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric37] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric38] [32mPASSED[0m[33m [ 34%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric39] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric40] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-metric41] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true5-y_score5-cohen_kappa_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-accuracy_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-balanced_accuracy_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric2] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric3] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-confusion_matrix] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-<lambda>] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-multilabel_confusion_matrix] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric7] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-hamming_loss] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-zero_one_loss] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric10] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-jaccard_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-precision_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-recall_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-f1_score] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric15] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric16] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-matthews_corrcoef] [32mPASSED[0m[33m [ 35%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric18] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric19] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric20] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric21] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric22] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric23] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric24] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric25] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric26] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric27] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric28] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric29] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric30] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric31] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric32] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric33] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric34] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric35] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric36] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric37] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric38] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric39] [32mPASSED[0m[33m [ 36%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric40] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-metric41] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_inf_nan_input[y_true6-y_score6-cohen_kappa_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[accuracy_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[balanced_accuracy_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric2] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric3] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[confusion_matrix] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[<lambda>] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[multilabel_confusion_matrix] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric7] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[hamming_loss] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[zero_one_loss] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric10] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[jaccard_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[precision_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[recall_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[f1_score] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric15] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric16] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[matthews_corrcoef] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric18] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric19] [32mPASSED[0m[33m [ 37%][0m
test_common.py::test_classification_binary_continuous_input[metric20] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric21] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric22] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric23] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric24] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric25] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric26] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric27] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric28] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric29] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric30] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric31] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric32] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric33] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric34] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric35] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric36] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric37] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric38] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric39] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric40] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[metric41] [32mPASSED[0m[33m [ 38%][0m
test_common.py::test_classification_binary_continuous_input[cohen_kappa_score] [32mPASSED[0m[33m [ 39%][0m
test_common.py::test_single_sample[accuracy_score] [32mPASSED[0m[33m                [ 39%][0m
test_common.py::test_single_sample[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [ 39%][0m
test_common.py::test_single_sample[balanced_accuracy_score] [32mPASSED[0m[33m       [ 39%][0m
test_common.py::test_single_sample[cohen_kappa_score] [32mPASSED[0m[33m             [ 39%][0m
test_common.py::test_single_sample[d2_absolute_error_score] [32mPASSED[0m[33m       [ 39%][0m
test_common.py::test_single_sample[d2_pinball_score] [32mPASSED[0m[33m              [ 39%][0m
test_common.py::test_single_sample[d2_tweedie_score] [32mPASSED[0m[33m              [ 39%][0m
test_common.py::test_single_sample[explained_variance_score] [32mPASSED[0m[33m      [ 39%][0m
test_common.py::test_single_sample[hamming_loss] [32mPASSED[0m[33m                  [ 39%][0m
test_common.py::test_single_sample[macro_f0.5_score] [32mPASSED[0m[33m              [ 39%][0m
test_common.py::test_single_sample[macro_f1_score] [32mPASSED[0m[33m                [ 39%][0m
test_common.py::test_single_sample[macro_f2_score] [32mPASSED[0m[33m                [ 39%][0m
test_common.py::test_single_sample[macro_jaccard_score] [32mPASSED[0m[33m           [ 39%][0m
test_common.py::test_single_sample[macro_precision_score] [32mPASSED[0m[33m         [ 39%][0m
test_common.py::test_single_sample[macro_recall_score] [32mPASSED[0m[33m            [ 39%][0m
test_common.py::test_single_sample[matthews_corrcoef_score] [32mPASSED[0m[33m       [ 39%][0m
test_common.py::test_single_sample[max_error] [32mPASSED[0m[33m                     [ 39%][0m
test_common.py::test_single_sample[mean_absolute_error] [32mPASSED[0m[33m           [ 39%][0m
test_common.py::test_single_sample[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 39%][0m
test_common.py::test_single_sample[mean_compound_poisson_deviance] [32mPASSED[0m[33m [ 39%][0m
test_common.py::test_single_sample[mean_gamma_deviance] [32mPASSED[0m[33m           [ 39%][0m
test_common.py::test_single_sample[mean_normal_deviance] [32mPASSED[0m[33m          [ 40%][0m
test_common.py::test_single_sample[mean_pinball_loss] [32mPASSED[0m[33m             [ 40%][0m
test_common.py::test_single_sample[mean_poisson_deviance] [32mPASSED[0m[33m         [ 40%][0m
test_common.py::test_single_sample[mean_squared_error] [32mPASSED[0m[33m            [ 40%][0m
test_common.py::test_single_sample[median_absolute_error] [32mPASSED[0m[33m         [ 40%][0m
test_common.py::test_single_sample[micro_f0.5_score] [32mPASSED[0m[33m              [ 40%][0m
test_common.py::test_single_sample[micro_f1_score] [32mPASSED[0m[33m                [ 40%][0m
test_common.py::test_single_sample[micro_f2_score] [32mPASSED[0m[33m                [ 40%][0m
test_common.py::test_single_sample[micro_jaccard_score] [32mPASSED[0m[33m           [ 40%][0m
test_common.py::test_single_sample[micro_precision_score] [32mPASSED[0m[33m         [ 40%][0m
test_common.py::test_single_sample[micro_recall_score] [32mPASSED[0m[33m            [ 40%][0m
test_common.py::test_single_sample[normalized_confusion_matrix] [32mPASSED[0m[33m   [ 40%][0m
test_common.py::test_single_sample[r2_score] [32mPASSED[0m[33m                      [ 40%][0m
test_common.py::test_single_sample[unnormalized_accuracy_score] [32mPASSED[0m[33m   [ 40%][0m
test_common.py::test_single_sample[unnormalized_confusion_matrix] [32mPASSED[0m[33m [ 40%][0m
test_common.py::test_single_sample[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 40%][0m
test_common.py::test_single_sample[unnormalized_zero_one_loss] [32mPASSED[0m[33m    [ 40%][0m
test_common.py::test_single_sample[weighted_f0.5_score] [32mPASSED[0m[33m           [ 40%][0m
test_common.py::test_single_sample[weighted_f1_score] [32mPASSED[0m[33m             [ 40%][0m
test_common.py::test_single_sample[weighted_f2_score] [32mPASSED[0m[33m             [ 40%][0m
test_common.py::test_single_sample[weighted_jaccard_score] [32mPASSED[0m[33m        [ 40%][0m
test_common.py::test_single_sample[weighted_precision_score] [32mPASSED[0m[33m      [ 40%][0m
test_common.py::test_single_sample[weighted_recall_score] [32mPASSED[0m[33m         [ 40%][0m
test_common.py::test_single_sample[zero_one_loss] [32mPASSED[0m[33m                 [ 41%][0m
test_common.py::test_single_sample_multioutput[accuracy_score] [32mPASSED[0m[33m    [ 41%][0m
test_common.py::test_single_sample_multioutput[d2_absolute_error_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[d2_pinball_score] [32mPASSED[0m[33m  [ 41%][0m
test_common.py::test_single_sample_multioutput[explained_variance_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[hamming_loss] [32mPASSED[0m[33m      [ 41%][0m
test_common.py::test_single_sample_multioutput[macro_f0.5_score] [32mPASSED[0m[33m  [ 41%][0m
test_common.py::test_single_sample_multioutput[macro_f1_score] [32mPASSED[0m[33m    [ 41%][0m
test_common.py::test_single_sample_multioutput[macro_f2_score] [32mPASSED[0m[33m    [ 41%][0m
test_common.py::test_single_sample_multioutput[macro_jaccard_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[macro_precision_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[macro_recall_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[mean_absolute_error] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[mean_pinball_loss] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[mean_squared_error] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[median_absolute_error] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[micro_f0.5_score] [32mPASSED[0m[33m  [ 41%][0m
test_common.py::test_single_sample_multioutput[micro_f1_score] [32mPASSED[0m[33m    [ 41%][0m
test_common.py::test_single_sample_multioutput[micro_f2_score] [32mPASSED[0m[33m    [ 41%][0m
test_common.py::test_single_sample_multioutput[micro_jaccard_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[micro_precision_score] [32mPASSED[0m[33m [ 41%][0m
test_common.py::test_single_sample_multioutput[micro_recall_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[r2_score] [32mPASSED[0m[33m          [ 42%][0m
test_common.py::test_single_sample_multioutput[samples_f0.5_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[samples_f1_score] [32mPASSED[0m[33m  [ 42%][0m
test_common.py::test_single_sample_multioutput[samples_f2_score] [32mPASSED[0m[33m  [ 42%][0m
test_common.py::test_single_sample_multioutput[samples_jaccard_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[samples_precision_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[samples_recall_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[weighted_f0.5_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[weighted_f1_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[weighted_f2_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[weighted_jaccard_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[weighted_precision_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[weighted_recall_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_single_sample_multioutput[zero_one_loss] [32mPASSED[0m[33m     [ 42%][0m
test_common.py::test_multioutput_number_of_output_differ[d2_absolute_error_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_multioutput_number_of_output_differ[d2_pinball_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_multioutput_number_of_output_differ[explained_variance_score] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_multioutput_number_of_output_differ[mean_absolute_error] [32mPASSED[0m[33m [ 42%][0m
test_common.py::test_multioutput_number_of_output_differ[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_number_of_output_differ[mean_pinball_loss] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_number_of_output_differ[mean_squared_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_number_of_output_differ[median_absolute_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_number_of_output_differ[r2_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[d2_absolute_error_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[d2_pinball_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[explained_variance_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[mean_absolute_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[mean_pinball_loss] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[mean_squared_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[median_absolute_error] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[r2_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_multilabel_representation_invariance [32mPASSED[0m[33m         [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[accuracy_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[hamming_loss] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[macro_f0.5_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[macro_f1_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[macro_f2_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[macro_jaccard_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[macro_precision_score] [32mPASSED[0m[33m [ 43%][0m
test_common.py::test_raise_value_error_multilabel_sequences[macro_recall_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[micro_f0.5_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[micro_f1_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[micro_f2_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[micro_jaccard_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[micro_precision_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[micro_recall_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[samples_f0.5_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[samples_f1_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[samples_f2_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[samples_jaccard_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[samples_precision_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[samples_recall_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[weighted_f0.5_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[weighted_f1_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[weighted_f2_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[weighted_jaccard_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[weighted_precision_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[weighted_recall_score] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_raise_value_error_multilabel_sequences[zero_one_loss] [32mPASSED[0m[33m [ 44%][0m
test_common.py::test_normalize_option_binary_classification[accuracy_score] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_binary_classification[top_k_accuracy_score] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_binary_classification[zero_one_loss] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_multiclass_classification[accuracy_score] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_multiclass_classification[top_k_accuracy_score] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_multiclass_classification[zero_one_loss] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_multilabel_classification[accuracy_score] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_normalize_option_multilabel_classification[zero_one_loss] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_averaging_multiclass[f0.5_score] [32mPASSED[0m[33m             [ 45%][0m
test_common.py::test_averaging_multiclass[f1_score] [32mPASSED[0m[33m               [ 45%][0m
test_common.py::test_averaging_multiclass[f2_score] [32mPASSED[0m[33m               [ 45%][0m
test_common.py::test_averaging_multiclass[jaccard_score] [32mPASSED[0m[33m          [ 45%][0m
test_common.py::test_averaging_multiclass[precision_score] [32mPASSED[0m[33m        [ 45%][0m
test_common.py::test_averaging_multiclass[recall_score] [32mPASSED[0m[33m           [ 45%][0m
test_common.py::test_averaging_multilabel[average_precision_score] [32mPASSED[0m[33m [ 45%][0m
test_common.py::test_averaging_multilabel[f0.5_score] [32mPASSED[0m[33m             [ 45%][0m
test_common.py::test_averaging_multilabel[f1_score] [32mPASSED[0m[33m               [ 45%][0m
test_common.py::test_averaging_multilabel[f2_score] [32mPASSED[0m[33m               [ 45%][0m
test_common.py::test_averaging_multilabel[jaccard_score] [32mPASSED[0m[33m          [ 45%][0m
test_common.py::test_averaging_multilabel[partial_roc_auc] [32mPASSED[0m[33m        [ 45%][0m
test_common.py::test_averaging_multilabel[precision_score] [32mPASSED[0m[33m        [ 45%][0m
test_common.py::test_averaging_multilabel[recall_score] [32mPASSED[0m[33m           [ 45%][0m
test_common.py::test_averaging_multilabel[roc_auc_score] [32mPASSED[0m[33m          [ 46%][0m
test_common.py::test_averaging_multilabel_all_zeroes[f0.5_score] [32mPASSED[0m[33m  [ 46%][0m
test_common.py::test_averaging_multilabel_all_zeroes[f1_score] [32mPASSED[0m[33m    [ 46%][0m
test_common.py::test_averaging_multilabel_all_zeroes[f2_score] [32mPASSED[0m[33m    [ 46%][0m
test_common.py::test_averaging_multilabel_all_zeroes[jaccard_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_averaging_multilabel_all_zeroes[precision_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_averaging_multilabel_all_zeroes[recall_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_averaging_binary_multilabel_all_zeroes [32mPASSED[0m[33m       [ 46%][0m
test_common.py::test_averaging_multilabel_all_ones[f0.5_score] [32mPASSED[0m[33m    [ 46%][0m
test_common.py::test_averaging_multilabel_all_ones[f1_score] [32mPASSED[0m[33m      [ 46%][0m
test_common.py::test_averaging_multilabel_all_ones[f2_score] [32mPASSED[0m[33m      [ 46%][0m
test_common.py::test_averaging_multilabel_all_ones[jaccard_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_averaging_multilabel_all_ones[precision_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_averaging_multilabel_all_ones[recall_score] [32mPASSED[0m[33m  [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[d2_absolute_error_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[d2_pinball_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[d2_tweedie_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[explained_variance_score] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[mean_absolute_error] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[mean_compound_poisson_deviance] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[mean_gamma_deviance] [32mPASSED[0m[33m [ 46%][0m
test_common.py::test_regression_sample_weight_invariance[mean_normal_deviance] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_regression_sample_weight_invariance[mean_pinball_loss] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_regression_sample_weight_invariance[mean_poisson_deviance] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_regression_sample_weight_invariance[mean_squared_error] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_regression_sample_weight_invariance[r2_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[accuracy_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[average_precision_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[balanced_accuracy_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[brier_score_loss] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[cohen_kappa_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[det_curve] [32mPASSED[0m[33m   [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[f0.5_score] [32mPASSED[0m[33m  [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[f1_score] [32mPASSED[0m[33m    [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[f2_score] [32mPASSED[0m[33m    [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[hamming_loss] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[hinge_loss] [32mPASSED[0m[33m  [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[jaccard_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[log_loss] [32mPASSED[0m[33m    [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[macro_f0.5_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[macro_f1_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[macro_f2_score] [32mPASSED[0m[33m [ 47%][0m
test_common.py::test_binary_sample_weight_invariance[macro_jaccard_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[macro_precision_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[macro_recall_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[matthews_corrcoef_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_average_precision_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_f0.5_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_f1_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_f2_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_jaccard_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_precision_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_recall_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[micro_roc_auc] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[normalized_confusion_matrix] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[ovr_roc_auc] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[partial_roc_auc] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[precision_recall_curve] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[precision_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[recall_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[roc_auc_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[roc_curve] [32mPASSED[0m[33m   [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[samples_average_precision_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[samples_roc_auc] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[top_k_accuracy_score] [32mPASSED[0m[33m [ 48%][0m
test_common.py::test_binary_sample_weight_invariance[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[unnormalized_confusion_matrix] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[unnormalized_log_loss] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_average_precision_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_f0.5_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_f1_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_f2_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_jaccard_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_ovr_roc_auc] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_precision_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_recall_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[weighted_roc_auc] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_binary_sample_weight_invariance[zero_one_loss] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[accuracy_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[balanced_accuracy_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[cohen_kappa_score] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[hamming_loss] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[hinge_loss] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[log_loss] [32mPASSED[0m[33m [ 49%][0m
test_common.py::test_multiclass_sample_weight_invariance[macro_f0.5_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[macro_f1_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[macro_f2_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[macro_jaccard_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[macro_precision_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[macro_recall_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[matthews_corrcoef_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[micro_f0.5_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[micro_f1_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[micro_f2_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[micro_jaccard_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[micro_precision_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[micro_recall_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[normalized_confusion_matrix] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[ovr_roc_auc] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[top_k_accuracy_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[unnormalized_confusion_matrix] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[unnormalized_log_loss] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_f0.5_score] [32mPASSED[0m[33m [ 50%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_f1_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_f2_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_jaccard_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_ovr_roc_auc] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_precision_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multiclass_sample_weight_invariance[weighted_recall_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multiclass_sample_weight_invariance[zero_one_loss] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[accuracy_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[average_precision_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[coverage_error] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[d2_absolute_error_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[d2_pinball_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[dcg_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[explained_variance_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[hamming_loss] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[label_ranking_average_precision_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[label_ranking_loss] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[log_loss] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[macro_f0.5_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[macro_f1_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[macro_f2_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[macro_jaccard_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[macro_precision_score] [32mPASSED[0m[33m [ 51%][0m
test_common.py::test_multilabel_sample_weight_invariance[macro_recall_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[mean_absolute_error] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[mean_pinball_loss] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[mean_squared_error] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_average_precision_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_f0.5_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_f1_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_f2_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_jaccard_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_precision_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_recall_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[micro_roc_auc] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[ndcg_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[partial_roc_auc] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[r2_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[roc_auc_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_average_precision_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_f0.5_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_f1_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_f2_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_jaccard_score] [32mPASSED[0m[33m [ 52%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_precision_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_recall_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[samples_roc_auc] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[unnormalized_log_loss] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_average_precision_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_f0.5_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_f1_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_f2_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_jaccard_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_precision_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_recall_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[weighted_roc_auc] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_sample_weight_invariance[zero_one_loss] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_no_averaging_labels [32mPASSED[0m[33m                          [ 53%][0m
test_common.py::test_multilabel_label_permutations_invariance[accuracy_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_label_permutations_invariance[hamming_loss] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_label_permutations_invariance[macro_f0.5_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_label_permutations_invariance[macro_f1_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_label_permutations_invariance[macro_f2_score] [32mPASSED[0m[33m [ 53%][0m
test_common.py::test_multilabel_label_permutations_invariance[macro_jaccard_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[macro_precision_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[macro_recall_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[micro_f0.5_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[micro_f1_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[micro_f2_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[micro_jaccard_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[micro_precision_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[micro_recall_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[samples_f0.5_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[samples_f1_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[samples_f2_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[samples_jaccard_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[samples_precision_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[samples_recall_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[weighted_f0.5_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[weighted_f1_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[weighted_f2_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[weighted_jaccard_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[weighted_precision_score] [32mPASSED[0m[33m [ 54%][0m
test_common.py::test_multilabel_label_permutations_invariance[weighted_recall_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_multilabel_label_permutations_invariance[zero_one_loss] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[average_precision_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[coverage_error] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[d2_absolute_error_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[d2_pinball_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[dcg_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[explained_variance_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[label_ranking_average_precision_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[label_ranking_loss] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[log_loss] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[mean_absolute_error] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[mean_absolute_percentage_error] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[mean_pinball_loss] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[mean_squared_error] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[median_absolute_error] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[micro_average_precision_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[micro_roc_auc] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[ndcg_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[partial_roc_auc] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[r2_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[roc_auc_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[samples_average_precision_score] [32mPASSED[0m[33m [ 55%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[samples_roc_auc] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[unnormalized_log_loss] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[weighted_average_precision_score] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[weighted_roc_auc] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[hinge_loss] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[log_loss] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[ovo_roc_auc] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[ovr_roc_auc] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[top_k_accuracy_score] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[unnormalized_log_loss] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[weighted_ovo_roc_auc] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_thresholded_metric_permutation_invariance[weighted_ovr_roc_auc] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[accuracy_score] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[balanced_accuracy_score] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[adjusted_balanced_accuracy_score] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[unnormalized_accuracy_score] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[unnormalized_confusion_matrix] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[normalized_confusion_matrix] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[unnormalized_multilabel_confusion_matrix] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[unnormalized_multilabel_confusion_matrix_sample] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[hamming_loss] [32mPASSED[0m[33m  [ 56%][0m
test_common.py::test_metrics_consistent_type_error[zero_one_loss] [32mPASSED[0m[33m [ 56%][0m
test_common.py::test_metrics_consistent_type_error[unnormalized_zero_one_loss] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[jaccard_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[precision_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[recall_score] [32mPASSED[0m[33m  [ 57%][0m
test_common.py::test_metrics_consistent_type_error[f1_score] [32mPASSED[0m[33m      [ 57%][0m
test_common.py::test_metrics_consistent_type_error[f2_score] [32mPASSED[0m[33m      [ 57%][0m
test_common.py::test_metrics_consistent_type_error[f0.5_score] [32mPASSED[0m[33m    [ 57%][0m
test_common.py::test_metrics_consistent_type_error[matthews_corrcoef_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[weighted_f0.5_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[weighted_f1_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[weighted_f2_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[weighted_precision_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[weighted_recall_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[weighted_jaccard_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[micro_f0.5_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[micro_f1_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[micro_f2_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[micro_precision_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[micro_recall_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[micro_jaccard_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[macro_f0.5_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[macro_f1_score] [32mPASSED[0m[33m [ 57%][0m
test_common.py::test_metrics_consistent_type_error[macro_f2_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[macro_precision_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[macro_recall_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[macro_jaccard_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[samples_f0.5_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[samples_f1_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[samples_f2_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[samples_precision_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[samples_recall_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[samples_jaccard_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_consistent_type_error[cohen_kappa_score] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-average_precision_score-True] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-brier_score_loss-True] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-f1_score-False] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-metric3-False] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-jaccard_score-False] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-precision_recall_curve-True] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-precision_score-False] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-recall_score-False] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[str-roc_curve-True] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[object-average_precision_score-True] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[object-brier_score_loss-True] [32mPASSED[0m[33m [ 58%][0m
test_common.py::test_metrics_pos_label_error_str[object-f1_score-False] [32mPASSED[0m[33m [ 59%][0m
test_common.py::test_metrics_pos_label_error_str[object-metric3-False] [32mPASSED[0m[33m [ 59%][0m
test_common.py::test_metrics_pos_label_error_str[object-jaccard_score-False] [32mPASSED[0m[33m [ 59%][0m
test_common.py::test_metrics_pos_label_error_str[object-precision_recall_curve-True] [32mPASSED[0m[33m [ 59%][0m
test_common.py::test_metrics_pos_label_error_str[object-precision_score-False] [32mPASSED[0m[33m [ 59%][0m
test_common.py::test_metrics_pos_label_error_str[object-recall_score-False] [32mPASSED[0m[33m [ 59%][0m
test_common.py::test_metrics_pos_label_error_str[object-roc_curve-True] [32mPASSED[0m[33m [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid0] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid1] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid2] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid3] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid4] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid5] [33mXFAIL[0m (...)[33m [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid6] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid7] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid8] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X10-X20-metric_param_grid9] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid0] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid1] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid2] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid3] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid4] [32mPASSED[0m[33m      [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid5] [33mXFAIL[0m (...)[33m [ 59%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid6] [32mPASSED[0m[33m      [ 60%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid7] [32mPASSED[0m[33m      [ 60%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid8] [32mPASSED[0m[33m      [ 60%][0m
test_dist_metrics.py::test_cdist[X11-X21-metric_param_grid9] [32mPASSED[0m[33m      [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-hamming] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-matching] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-jaccard] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-dice] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-kulsinski] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-rogerstanimoto] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-russellrao] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-sokalmichener] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool0-X2_bool0-sokalsneath] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-hamming] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-matching] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-jaccard] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-dice] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-kulsinski] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-rogerstanimoto] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-russellrao] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-sokalmichener] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_cdist_bool_metric[X1_bool1-X2_bool1-sokalsneath] [32mPASSED[0m[33m [ 60%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid0] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid1] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid2] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid3] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid4] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid5] [33mXFAIL[0m (...)[33m [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid6] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid7] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid8] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X10-X20-metric_param_grid9] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid0] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid1] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid2] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid3] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid4] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid5] [33mXFAIL[0m (...)[33m [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid6] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid7] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid8] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist[X11-X21-metric_param_grid9] [32mPASSED[0m[33m      [ 61%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-hamming] [32mPASSED[0m[33m   [ 61%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-matching] [32mPASSED[0m[33m  [ 61%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-jaccard] [32mPASSED[0m[33m   [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-dice] [32mPASSED[0m[33m      [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-kulsinski] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-rogerstanimoto] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-russellrao] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-sokalmichener] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool0-sokalsneath] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-hamming] [32mPASSED[0m[33m   [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-matching] [32mPASSED[0m[33m  [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-jaccard] [32mPASSED[0m[33m   [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-dice] [32mPASSED[0m[33m      [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-kulsinski] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-rogerstanimoto] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-russellrao] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-sokalmichener] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pdist_bool_metrics[X1_bool1-sokalsneath] [32mPASSED[0m[33m [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid0-True] [32mPASSED[0m[33m        [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid0-False] [32mPASSED[0m[33m       [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid1-True] [32mPASSED[0m[33m        [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid1-False] [32mPASSED[0m[33m       [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid2-True] [32mPASSED[0m[33m        [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid2-False] [32mPASSED[0m[33m       [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid3-True] [32mPASSED[0m[33m        [ 62%][0m
test_dist_metrics.py::test_pickle[metric_param_grid3-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid4-True] [32mPASSED[0m[33m        [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid4-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid5-True] [32mPASSED[0m[33m        [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid5-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid6-True] [32mPASSED[0m[33m        [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid6-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid7-True] [32mPASSED[0m[33m        [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid7-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid8-True] [32mPASSED[0m[33m        [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid8-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid9-True] [32mPASSED[0m[33m        [ 63%][0m
test_dist_metrics.py::test_pickle[metric_param_grid9-False] [32mPASSED[0m[33m       [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-hamming] [32mPASSED[0m[33m  [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-matching] [32mPASSED[0m[33m [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-jaccard] [32mPASSED[0m[33m  [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-dice] [32mPASSED[0m[33m     [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-kulsinski] [32mPASSED[0m[33m [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-rogerstanimoto] [32mPASSED[0m[33m [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-russellrao] [32mPASSED[0m[33m [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-sokalmichener] [32mPASSED[0m[33m [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool0-sokalsneath] [32mPASSED[0m[33m [ 63%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-hamming] [32mPASSED[0m[33m  [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-matching] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-jaccard] [32mPASSED[0m[33m  [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-dice] [32mPASSED[0m[33m     [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-kulsinski] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-rogerstanimoto] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-russellrao] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-sokalmichener] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_pickle_bool_metrics[X1_bool1-sokalsneath] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_haversine_metric [32mPASSED[0m[33m                       [ 64%][0m
test_dist_metrics.py::test_pyfunc_metric [32mPASSED[0m[33m                          [ 64%][0m
test_dist_metrics.py::test_input_data_size [32mPASSED[0m[33m                        [ 64%][0m
test_dist_metrics.py::test_readonly_kwargs [32mPASSED[0m[33m                        [ 64%][0m
test_dist_metrics.py::test_minkowski_metric_validate_weights_values[w0-ValueError-w cannot contain negative weights] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_minkowski_metric_validate_weights_values[w1-ValueError-w contains NaN] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_minkowski_metric_validate_weights_values[w2-TypeError-A sparse matrix was passed, but dense data is required] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_minkowski_metric_validate_weights_values[w3-ValueError-could not convert string to float] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_minkowski_metric_validate_weights_values[w4-ValueError-a minimum of 1 is required] [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_minkowski_metric_validate_weights_size [32mPASSED[0m[33m [ 64%][0m
test_dist_metrics.py::test_wminkowski_deprecated [32mPASSED[0m[33m                  [ 64%][0m
test_dist_metrics.py::test_wminkowski_minkowski_equivalence[1] [32mPASSED[0m[33m    [ 64%][0m
test_dist_metrics.py::test_wminkowski_minkowski_equivalence[1.5] [32mPASSED[0m[33m  [ 64%][0m
test_dist_metrics.py::test_wminkowski_minkowski_equivalence[3] [32mPASSED[0m[33m    [ 65%][0m
test_pairwise.py::test_pairwise_distances [32mPASSED[0m[33m                         [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[dice] [32mPASSED[0m[33m            [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[jaccard] [32mPASSED[0m[33m         [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[kulsinski] [32mPASSED[0m[33m       [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[matching] [32mPASSED[0m[33m        [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[rogerstanimoto] [32mPASSED[0m[33m  [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[russellrao] [32mPASSED[0m[33m      [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[sokalmichener] [32mPASSED[0m[33m   [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[sokalsneath] [32mPASSED[0m[33m     [ 65%][0m
test_pairwise.py::test_pairwise_boolean_distance[yule] [32mPASSED[0m[33m            [ 65%][0m
test_pairwise.py::test_no_data_conversion_warning [32mPASSED[0m[33m                 [ 65%][0m
test_pairwise.py::test_pairwise_precomputed[pairwise_distances] [32mPASSED[0m[33m   [ 65%][0m
test_pairwise.py::test_pairwise_precomputed[pairwise_kernels] [32mPASSED[0m[33m     [ 65%][0m
test_pairwise.py::test_pairwise_precomputed_non_negative [32mPASSED[0m[33m          [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_distances-euclidean-kwds0] [32mPASSED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_distances-minkowski-kwds1] [32mPASSED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_distances-minkowski-kwds2] [32mPASSED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_distances-minkowski-kwds3] [33mSKIPPED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_distances-wminkowski-kwds4] [33mSKIPPED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_kernels-polynomial-kwds5] [32mPASSED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[float64-pairwise_kernels-callable_rbf_kernel-kwds6] [32mPASSED[0m[33m [ 65%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_distances-euclidean-kwds0] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_distances-minkowski-kwds1] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_distances-minkowski-kwds2] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_distances-minkowski-kwds3] [33mSKIPPED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_distances-wminkowski-kwds4] [33mSKIPPED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_kernels-polynomial-kwds5] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_parallel[int-pairwise_kernels-callable_rbf_kernel-kwds6] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_pairwise_callable_nonstrict_metric [32mPASSED[0m[33m         [ 66%][0m
test_pairwise.py::test_pairwise_kernels[rbf] [32mPASSED[0m[33m                      [ 66%][0m
test_pairwise.py::test_pairwise_kernels[laplacian] [32mPASSED[0m[33m                [ 66%][0m
test_pairwise.py::test_pairwise_kernels[sigmoid] [32mPASSED[0m[33m                  [ 66%][0m
test_pairwise.py::test_pairwise_kernels[polynomial] [32mPASSED[0m[33m               [ 66%][0m
test_pairwise.py::test_pairwise_kernels[linear] [32mPASSED[0m[33m                   [ 66%][0m
test_pairwise.py::test_pairwise_kernels[chi2] [32mPASSED[0m[33m                     [ 66%][0m
test_pairwise.py::test_pairwise_kernels[additive_chi2] [32mPASSED[0m[33m            [ 66%][0m
test_pairwise.py::test_pairwise_kernels_callable [32mPASSED[0m[33m                  [ 66%][0m
test_pairwise.py::test_pairwise_kernels_filter_param [32mPASSED[0m[33m              [ 66%][0m
test_pairwise.py::test_paired_distances[cosine-paired_cosine_distances] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_paired_distances[euclidean-paired_euclidean_distances] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_paired_distances[l2-paired_euclidean_distances] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_paired_distances[l1-paired_manhattan_distances] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_paired_distances[manhattan-paired_manhattan_distances] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_paired_distances[cityblock-paired_manhattan_distances] [32mPASSED[0m[33m [ 66%][0m
test_pairwise.py::test_paired_distances_callable [32mPASSED[0m[33m                  [ 67%][0m
test_pairwise.py::test_pairwise_distances_argmin_min[float32] [32mPASSED[0m[33m     [ 67%][0m
test_pairwise.py::test_pairwise_distances_argmin_min[float64] [32mPASSED[0m[33m     [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce [32mPASSED[0m[33m          [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_none [32mPASSED[0m[33m     [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_valid[<lambda>0] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_valid[<lambda>1] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_valid[<lambda>2] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_valid[<lambda>3] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_valid[<lambda>4] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_invalid[<lambda>-ValueError-length 11\\..* input: 10\\.] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_invalid[<lambda>-ValueError-length \\(10, 11\\)\\..* input: 10\\.] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_invalid[<lambda>-ValueError-length \\(9, 10\\)\\..* input: 10\\.] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_invalid[<lambda>-TypeError-returned 7\\. Expected sequence\\(s\\) of length 10\\.] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_invalid[<lambda>-TypeError-returned \\(7, 8\\)\\. Expected sequence\\(s\\) of length 10\\.] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_reduce_invalid[<lambda>-TypeError-, 9\\)\\. Expected sequence\\(s\\) of length 10\\.] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_diagonal[euclidean] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_diagonal[l2] [32mPASSED[0m[33m    [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked_diagonal[sqeuclidean] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_parallel_pairwise_distances_diagonal[euclidean] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_parallel_pairwise_distances_diagonal[l2] [32mPASSED[0m[33m   [ 67%][0m
test_pairwise.py::test_parallel_pairwise_distances_diagonal[sqeuclidean] [32mPASSED[0m[33m [ 67%][0m
test_pairwise.py::test_pairwise_distances_chunked [32mPASSED[0m[33m                 [ 68%][0m
test_pairwise.py::test_euclidean_distances_known_result[dense-dense] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_known_result[dense-sparse] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_known_result[sparse-dense] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_known_result[sparse-sparse] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_with_norms[dense-float32] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_with_norms[dense-float64] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_with_norms[sparse-float32] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_with_norms[sparse-float64] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_norm_shapes [32mPASSED[0m[33m            [ 68%][0m
test_pairwise.py::test_euclidean_distances[dense-dense-float32] [32mPASSED[0m[33m   [ 68%][0m
test_pairwise.py::test_euclidean_distances[dense-dense-float64] [32mPASSED[0m[33m   [ 68%][0m
test_pairwise.py::test_euclidean_distances[dense-sparse-float32] [32mPASSED[0m[33m  [ 68%][0m
test_pairwise.py::test_euclidean_distances[dense-sparse-float64] [32mPASSED[0m[33m  [ 68%][0m
test_pairwise.py::test_euclidean_distances[sparse-dense-float32] [32mPASSED[0m[33m  [ 68%][0m
test_pairwise.py::test_euclidean_distances[sparse-dense-float64] [32mPASSED[0m[33m  [ 68%][0m
test_pairwise.py::test_euclidean_distances[sparse-sparse-float32] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances[sparse-sparse-float64] [32mPASSED[0m[33m [ 68%][0m
test_pairwise.py::test_euclidean_distances_sym[dense-float32] [32mPASSED[0m[33m     [ 68%][0m
test_pairwise.py::test_euclidean_distances_sym[dense-float64] [32mPASSED[0m[33m     [ 68%][0m
test_pairwise.py::test_euclidean_distances_sym[sparse-float32] [32mPASSED[0m[33m    [ 68%][0m
test_pairwise.py::test_euclidean_distances_sym[sparse-float64] [32mPASSED[0m[33m    [ 68%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-dense-None] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-dense-5] [32mPASSED[0m[33m  [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-dense-7] [32mPASSED[0m[33m  [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-dense-101] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-sparse-None] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-sparse-5] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-sparse-7] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[dense-sparse-101] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-dense-None] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-dense-5] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-dense-7] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-dense-101] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-sparse-None] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-sparse-5] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-sparse-7] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast[sparse-sparse-101] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[dense-None] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[dense-5] [32mPASSED[0m[33m    [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[dense-7] [32mPASSED[0m[33m    [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[dense-101] [32mPASSED[0m[33m  [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[sparse-None] [32mPASSED[0m[33m [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[sparse-5] [32mPASSED[0m[33m   [ 69%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[sparse-7] [32mPASSED[0m[33m   [ 70%][0m
test_pairwise.py::test_euclidean_distances_upcast_sym[sparse-101] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_euclidean_distances_extreme_values[1-float32-0.0001-1e-05] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_euclidean_distances_extreme_values[1-float64-1e-08-0.99] [33mXFAIL[0m[33m [ 70%][0m
test_pairwise.py::test_euclidean_distances_extreme_values[1000000-float32-0.0001-1e-05] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_euclidean_distances_extreme_values[1000000-float64-1e-08-0.99] [33mXFAIL[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_equal_to_euclidean_distance[True] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_equal_to_euclidean_distance[False] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_infinite_values[Y0-X0] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_infinite_values[Y0-X1] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_infinite_values[Y1-X0] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_infinite_values[Y1-X1] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_infinite_values[None-X0] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_infinite_values[None-X1] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X0-1.4142135623730951-nan] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X1-1.4142135623730951-nan] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X2-nan-nan] [32mPASSED[0m[33m    [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X3-1.4142135623730951-nan] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X4-1.4142135623730951-nan] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X5-1.4142135623730951--1] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X6-1.4142135623730951--1] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X7-nan--1] [32mPASSED[0m[33m     [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X8-1.4142135623730951--1] [32mPASSED[0m[33m [ 70%][0m
test_pairwise.py::test_nan_euclidean_distances_2x2[X9-1.4142135623730951--1] [32mPASSED[0m[33m [ 71%][0m
test_pairwise.py::test_nan_euclidean_distances_complete_nan[nan] [32mPASSED[0m[33m  [ 71%][0m
test_pairwise.py::test_nan_euclidean_distances_complete_nan[-1] [32mPASSED[0m[33m   [ 71%][0m
test_pairwise.py::test_nan_euclidean_distances_not_trival[nan] [32mPASSED[0m[33m    [ 71%][0m
test_pairwise.py::test_nan_euclidean_distances_not_trival[-1] [32mPASSED[0m[33m     [ 71%][0m
test_pairwise.py::test_nan_euclidean_distances_one_feature_match_positive[nan] [32mPASSED[0m[33m [ 71%][0m
test_pairwise.py::test_nan_euclidean_distances_one_feature_match_positive[-1] [32mPASSED[0m[33m [ 71%][0m
test_pairwise.py::test_cosine_distances [32mPASSED[0m[33m                           [ 71%][0m
test_pairwise.py::test_haversine_distances [32mPASSED[0m[33m                        [ 71%][0m
test_pairwise.py::test_paired_euclidean_distances [32mPASSED[0m[33m                 [ 71%][0m
test_pairwise.py::test_paired_manhattan_distances [32mPASSED[0m[33m                 [ 71%][0m
test_pairwise.py::test_chi_square_kernel [32mPASSED[0m[33m                          [ 71%][0m
test_pairwise.py::test_kernel_symmetry[linear_kernel] [32mPASSED[0m[33m             [ 71%][0m
test_pairwise.py::test_kernel_symmetry[polynomial_kernel] [32mPASSED[0m[33m         [ 71%][0m
test_pairwise.py::test_kernel_symmetry[rbf_kernel] [32mPASSED[0m[33m                [ 71%][0m
test_pairwise.py::test_kernel_symmetry[laplacian_kernel] [32mPASSED[0m[33m          [ 71%][0m
test_pairwise.py::test_kernel_symmetry[sigmoid_kernel] [32mPASSED[0m[33m            [ 71%][0m
test_pairwise.py::test_kernel_symmetry[cosine_similarity] [32mPASSED[0m[33m         [ 71%][0m
test_pairwise.py::test_kernel_sparse[linear_kernel] [32mPASSED[0m[33m               [ 71%][0m
test_pairwise.py::test_kernel_sparse[polynomial_kernel] [32mPASSED[0m[33m           [ 71%][0m
test_pairwise.py::test_kernel_sparse[rbf_kernel] [32mPASSED[0m[33m                  [ 71%][0m
test_pairwise.py::test_kernel_sparse[laplacian_kernel] [32mPASSED[0m[33m            [ 71%][0m
test_pairwise.py::test_kernel_sparse[sigmoid_kernel] [32mPASSED[0m[33m              [ 72%][0m
test_pairwise.py::test_kernel_sparse[cosine_similarity] [32mPASSED[0m[33m           [ 72%][0m
test_pairwise.py::test_linear_kernel [32mPASSED[0m[33m                              [ 72%][0m
test_pairwise.py::test_rbf_kernel [32mPASSED[0m[33m                                 [ 72%][0m
test_pairwise.py::test_laplacian_kernel [32mPASSED[0m[33m                           [ 72%][0m
test_pairwise.py::test_pairwise_similarity_sparse_output[linear-linear_kernel] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_similarity_sparse_output[cosine-cosine_similarity] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_cosine_similarity [32mPASSED[0m[33m                          [ 72%][0m
test_pairwise.py::test_check_dense_matrices [32mPASSED[0m[33m                       [ 72%][0m
test_pairwise.py::test_check_XB_returned [32mPASSED[0m[33m                          [ 72%][0m
test_pairwise.py::test_check_different_dimensions [32mPASSED[0m[33m                 [ 72%][0m
test_pairwise.py::test_check_invalid_dimensions [32mPASSED[0m[33m                   [ 72%][0m
test_pairwise.py::test_check_sparse_arrays [32mPASSED[0m[33m                        [ 72%][0m
test_pairwise.py::test_check_tuple_input [32mPASSED[0m[33m                          [ 72%][0m
test_pairwise.py::test_check_preserve_type [32mPASSED[0m[33m                        [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances-seuclidean-1] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances-seuclidean-2] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances-mahalanobis-1] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances-mahalanobis-2] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances_chunked-seuclidean-1] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances_chunked-seuclidean-2] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances_chunked-mahalanobis-1] [32mPASSED[0m[33m [ 72%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params[pairwise_distances_chunked-mahalanobis-2] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params_error[seuclidean] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_pairwise_distances_data_derived_params_error[mahalanobis] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-braycurtis] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-canberra] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-chebyshev] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-correlation] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-hamming] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-mahalanobis] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-minkowski] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-seuclidean] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-sqeuclidean] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-cityblock] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-cosine] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float32-euclidean] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-braycurtis] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-canberra] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-chebyshev] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-correlation] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-hamming] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-mahalanobis] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-minkowski] [32mPASSED[0m[33m [ 73%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-seuclidean] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-sqeuclidean] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-cityblock] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-cosine] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is X-float64-euclidean] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-braycurtis] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-canberra] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-chebyshev] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-correlation] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-hamming] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-mahalanobis] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-minkowski] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-seuclidean] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-sqeuclidean] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-cityblock] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-cosine] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float32-euclidean] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-braycurtis] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-canberra] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-chebyshev] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-correlation] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-hamming] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-mahalanobis] [32mPASSED[0m[33m [ 74%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-minkowski] [32mPASSED[0m[33m [ 75%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-seuclidean] [32mPASSED[0m[33m [ 75%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-sqeuclidean] [32mPASSED[0m[33m [ 75%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-cityblock] [32mPASSED[0m[33m [ 75%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-cosine] [32mPASSED[0m[33m [ 75%][0m
test_pairwise.py::test_numeric_pairwise_distances_datatypes[Y is not X-float64-euclidean] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_reduction_is_usable_for [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_argkmin_factory_method_wrong_usages [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_radius_neighborhood_factory_method_wrong_usages [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesArgKmin-50-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesArgKmin-50-1000] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesArgKmin-512-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesArgKmin-512-1000] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesArgKmin-1024-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesArgKmin-1024-1000] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesRadiusNeighborhood-50-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesRadiusNeighborhood-50-1000] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesRadiusNeighborhood-512-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesRadiusNeighborhood-512-1000] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesRadiusNeighborhood-1024-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_chunk_size_agnosticism[42-PairwiseDistancesRadiusNeighborhood-1024-1000] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesArgKmin-50-100] [32mPASSED[0m[33m [ 75%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesArgKmin-50-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesArgKmin-512-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesArgKmin-512-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesArgKmin-1024-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesArgKmin-1024-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesRadiusNeighborhood-50-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesRadiusNeighborhood-50-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesRadiusNeighborhood-512-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesRadiusNeighborhood-512-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesRadiusNeighborhood-1024-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_n_threads_agnosticism[42-PairwiseDistancesRadiusNeighborhood-1024-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-braycurtis-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-braycurtis-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-canberra-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-canberra-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-chebyshev-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-chebyshev-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-cityblock-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-cityblock-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-euclidean-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-euclidean-1000] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-haversine-100] [32mPASSED[0m[33m [ 76%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-haversine-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-infinity-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-infinity-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-l1-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-l1-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-l2-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-l2-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-manhattan-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-manhattan-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-minkowski-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-minkowski-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-p-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-p-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-seuclidean-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-seuclidean-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-wminkowski-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesArgKmin-wminkowski-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-braycurtis-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-braycurtis-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-canberra-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-canberra-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-chebyshev-100] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-chebyshev-1000] [32mPASSED[0m[33m [ 77%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-cityblock-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-cityblock-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-euclidean-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-euclidean-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-haversine-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-haversine-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-infinity-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-infinity-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-l1-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-l1-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-l2-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-l2-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-manhattan-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-manhattan-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-minkowski-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-minkowski-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-p-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-p-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-seuclidean-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-seuclidean-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-wminkowski-100] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_strategies_consistency[42-PairwiseDistancesRadiusNeighborhood-wminkowski-1000] [32mPASSED[0m[33m [ 78%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-braycurtis-0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-braycurtis-0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-braycurtis-1000000.0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-braycurtis-1000000.0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-canberra-0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-canberra-0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-canberra-1000000.0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-canberra-1000000.0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-chebyshev-0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-chebyshev-0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-chebyshev-1000000.0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-chebyshev-1000000.0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-cityblock-0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-cityblock-0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-cityblock-1000000.0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-cityblock-1000000.0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-euclidean-0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-euclidean-0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-euclidean-1000000.0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-euclidean-1000000.0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-minkowski-0-50] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-minkowski-0-500] [32mPASSED[0m[33m [ 79%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-minkowski-1000000.0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-minkowski-1000000.0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-seuclidean-0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-seuclidean-0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-seuclidean-1000000.0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_X-seuclidean-1000000.0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-braycurtis-0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-braycurtis-0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-braycurtis-1000000.0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-braycurtis-1000000.0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-canberra-0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-canberra-0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-canberra-1000000.0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-canberra-1000000.0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-chebyshev-0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-chebyshev-0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-chebyshev-1000000.0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-chebyshev-1000000.0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-cityblock-0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-cityblock-0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-cityblock-1000000.0-50] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-cityblock-1000000.0-500] [32mPASSED[0m[33m [ 80%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-euclidean-0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-euclidean-0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-euclidean-1000000.0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-euclidean-1000000.0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-minkowski-0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-minkowski-0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-minkowski-1000000.0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-minkowski-1000000.0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-seuclidean-0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-seuclidean-0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-seuclidean-1000000.0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_argkmin[42-parallel_on_Y-seuclidean-1000000.0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-braycurtis-0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-braycurtis-0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-braycurtis-1000000.0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-braycurtis-1000000.0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-canberra-0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-canberra-0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-canberra-1000000.0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-canberra-1000000.0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-chebyshev-0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-chebyshev-0-500] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-chebyshev-1000000.0-50] [32mPASSED[0m[33m [ 81%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-chebyshev-1000000.0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-cityblock-0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-cityblock-0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-cityblock-1000000.0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-cityblock-1000000.0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-euclidean-0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-euclidean-0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-euclidean-1000000.0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-euclidean-1000000.0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-1000000.0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-1000000.0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-1000000.0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-1000000.0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-braycurtis-0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-braycurtis-0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-braycurtis-1000000.0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-braycurtis-1000000.0-500] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-canberra-0-50] [32mPASSED[0m[33m [ 82%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-canberra-0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-canberra-1000000.0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-canberra-1000000.0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-chebyshev-0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-chebyshev-0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-chebyshev-1000000.0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-chebyshev-1000000.0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-cityblock-0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-cityblock-0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-cityblock-1000000.0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-cityblock-1000000.0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-euclidean-0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-euclidean-0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-euclidean-1000000.0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-euclidean-1000000.0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-1000000.0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-1000000.0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-0-500] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-1000000.0-50] [32mPASSED[0m[33m [ 83%][0m
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-1000000.0-500] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-1-5-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-1-5-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-1-10-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-1-10-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-1-100-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-1-100-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-2-5-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-2-5-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-2-10-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-2-10-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-2-100-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-2-100-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-8-5-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-8-5-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-8-10-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-8-10-1000] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-8-100-100] [32mPASSED[0m[33m [ 84%][0m
test_pairwise_distances_reduction.py::test_sqeuclidean_row_norms[42-8-100-1000] [32mPASSED[0m[33m [ 84%][0m
test_ranking.py::test_roc_curve[True] [32mPASSED[0m[33m                             [ 84%][0m
test_ranking.py::test_roc_curve[False] [32mPASSED[0m[33m                            [ 84%][0m
test_ranking.py::test_roc_curve_end_points [32mPASSED[0m[33m                        [ 84%][0m
test_ranking.py::test_roc_returns_consistency [32mPASSED[0m[33m                     [ 85%][0m
test_ranking.py::test_roc_curve_multi [32mPASSED[0m[33m                             [ 85%][0m
test_ranking.py::test_roc_curve_confidence [32mPASSED[0m[33m                        [ 85%][0m
test_ranking.py::test_roc_curve_hard [32mPASSED[0m[33m                              [ 85%][0m
test_ranking.py::test_roc_curve_one_label [32mPASSED[0m[33m                         [ 85%][0m
test_ranking.py::test_roc_curve_toydata [32mPASSED[0m[33m                           [ 85%][0m
test_ranking.py::test_roc_curve_drop_intermediate [32mPASSED[0m[33m                 [ 85%][0m
test_ranking.py::test_roc_curve_fpr_tpr_increasing [32mPASSED[0m[33m                [ 85%][0m
test_ranking.py::test_auc [32mPASSED[0m[33m                                         [ 85%][0m
test_ranking.py::test_auc_errors [32mPASSED[0m[33m                                  [ 85%][0m
test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true0-labels0] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true1-None] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true2-labels2] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true3-None] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true0-labels0] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true1-labels1] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true0-None] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true1-None] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true2-labels2] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true3-labels3] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true0-labels0] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true1-labels1] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] [32mPASSED[0m[33m [ 85%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be ordered-y_true3-labels3] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true0-labels0] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true1-labels1] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be ordered-y_true3-labels3] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('macro', 'weighted', None\\) for multiclass problems-kwargs0] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('macro', 'weighted', None\\) for multiclass problems-kwargs1] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_error[sample_weight is not supported for multiclass one-vs-one ROC AUC, 'sample_weight' must be None in this case-kwargs2] [32mPASSED[0m[33m [ 86%][0m
test_ranking.py::test_roc_auc_score_multiclass_error[Partial AUC computation not available in multiclass setting, 'max_fpr' must be set to `None`, received `max_fpr=0.5` instead-kwargs3] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_roc_auc_score_multiclass_error[multi_class='ovp' is not supported for multiclass ROC AUC, multi_class must be in \\('ovo', 'ovr'\\)-kwargs4] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_roc_auc_score_multiclass_error[multi_class must be in \\('ovo', 'ovr'\\)-kwargs5] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_auc_score_non_binary_class [32mPASSED[0m[33m                  [ 87%][0m
test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_multiclass_error[precision_recall_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_multiclass_error[roc_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_implicit_pos_label[precision_recall_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_implicit_pos_label[roc_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_zero_sample_weight[precision_recall_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_binary_clf_curve_zero_sample_weight[roc_curve] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_precision_recall_curve [32mPASSED[0m[33m                      [ 87%][0m
test_ranking.py::test_precision_recall_curve_toydata [32mPASSED[0m[33m              [ 87%][0m
test_ranking.py::test_average_precision_constant_values [32mPASSED[0m[33m           [ 87%][0m
test_ranking.py::test_average_precision_score_pos_label_errors [32mPASSED[0m[33m    [ 87%][0m
test_ranking.py::test_score_scale_invariance [32mPASSED[0m[33m                      [ 87%][0m
test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3] [32mPASSED[0m[33m [ 87%][0m
test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6] [32mPASSED[0m[33m [ 88%][0m
test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_det_curve_sanity_check [32mPASSED[0m[33m                      [ 89%][0m
test_ranking.py::test_det_curve_constant_scores[0] [32mPASSED[0m[33m                [ 89%][0m
test_ranking.py::test_det_curve_constant_scores[0.25] [32mPASSED[0m[33m             [ 89%][0m
test_ranking.py::test_det_curve_constant_scores[0.5] [32mPASSED[0m[33m              [ 89%][0m
test_ranking.py::test_det_curve_constant_scores[0.75] [32mPASSED[0m[33m             [ 89%][0m
test_ranking.py::test_det_curve_constant_scores[1] [32mPASSED[0m[33m                [ 89%][0m
test_ranking.py::test_det_curve_perfect_scores[y_true0] [32mPASSED[0m[33m           [ 89%][0m
test_ranking.py::test_det_curve_perfect_scores[y_true1] [32mPASSED[0m[33m           [ 89%][0m
test_ranking.py::test_det_curve_perfect_scores[y_true2] [32mPASSED[0m[33m           [ 89%][0m
test_ranking.py::test_det_curve_perfect_scores[y_true3] [32mPASSED[0m[33m           [ 89%][0m
test_ranking.py::test_det_curve_perfect_scores[y_true4] [32mPASSED[0m[33m           [ 89%][0m
test_ranking.py::test_det_curve_bad_input[y_true0-y_pred0-inconsistent numbers of samples] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_det_curve_bad_input[y_true1-y_pred1-inconsistent numbers of samples] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class present in y_true] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class present in y_true] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_det_curve_pos_label [32mPASSED[0m[33m                         [ 89%][0m
test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_toy] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_without_tie_and_increasing_score] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_only_ties] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_zero_or_all_relevant_labels] [32mPASSED[0m[33m [ 89%][0m
test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_toy] [32mPASSED[0m[33m  [ 90%][0m
test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_without_tie_and_increasing_score] [32mPASSED[0m[33m [ 90%][0m
test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_only_ties] [32mPASSED[0m[33m [ 90%][0m
test_ranking.py::test_label_ranking_avp[_my_lrap-check_zero_or_all_relevant_labels] [32mPASSED[0m[33m [ 90%][0m
test_ranking.py::test_lrap_error_raised [32mPASSED[0m[33m                           [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-2-1] [32mPASSED[0m[33m      [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-2-2] [32mPASSED[0m[33m      [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-2-8] [32mPASSED[0m[33m      [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-2-20] [32mPASSED[0m[33m     [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-5-1] [32mPASSED[0m[33m      [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-5-2] [32mPASSED[0m[33m      [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-5-8] [32mPASSED[0m[33m      [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-5-20] [32mPASSED[0m[33m     [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-10-1] [32mPASSED[0m[33m     [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-10-2] [32mPASSED[0m[33m     [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-10-8] [32mPASSED[0m[33m     [ 90%][0m
test_ranking.py::test_alternative_lrap_implementation[0-10-20] [32mPASSED[0m[33m    [ 90%][0m
test_ranking.py::test_lrap_sample_weighting_zero_labels [32mPASSED[0m[33m           [ 90%][0m
test_ranking.py::test_coverage_error [32mPASSED[0m[33m                              [ 90%][0m
test_ranking.py::test_coverage_tie_handling [32mPASSED[0m[33m                       [ 90%][0m
test_ranking.py::test_label_ranking_loss [32mPASSED[0m[33m                          [ 90%][0m
test_ranking.py::test_ranking_appropriate_input_shape [32mPASSED[0m[33m             [ 90%][0m
test_ranking.py::test_ranking_loss_ties_handling [32mPASSED[0m[33m                  [ 91%][0m
test_ranking.py::test_dcg_score [32mPASSED[0m[33m                                   [ 91%][0m
test_ranking.py::test_dcg_ties [32mPASSED[0m[33m                                    [ 91%][0m
test_ranking.py::test_ndcg_ignore_ties_with_k [32mPASSED[0m[33m                     [ 91%][0m
test_ranking.py::test_ndcg_invariant [32mPASSED[0m[33m                              [ 91%][0m
test_ranking.py::test_ndcg_toy_examples[True] [32mPASSED[0m[33m                     [ 91%][0m
test_ranking.py::test_ndcg_toy_examples[False] [32mPASSED[0m[33m                    [ 91%][0m
test_ranking.py::test_ndcg_score [32mPASSED[0m[33m                                  [ 91%][0m
test_ranking.py::test_partial_roc_auc_score [32mPASSED[0m[33m                       [ 91%][0m
test_ranking.py::test_top_k_accuracy_score[y_true0-1-0.25] [32mPASSED[0m[33m        [ 91%][0m
test_ranking.py::test_top_k_accuracy_score[y_true1-2-0.5] [32mPASSED[0m[33m         [ 91%][0m
test_ranking.py::test_top_k_accuracy_score[y_true2-3-0.75] [32mPASSED[0m[33m        [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_binary[y_score0-1-1] [32mPASSED[0m[33m   [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_binary[y_score1-1-0.5] [32mPASSED[0m[33m [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_binary[y_score2-2-1] [32mPASSED[0m[33m   [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_binary[y_score3-1-1] [32mPASSED[0m[33m   [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_binary[y_score4-1-0.5] [32mPASSED[0m[33m [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_binary[y_score5-2-1] [32mPASSED[0m[33m   [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true0-0.75-labels0] [32mPASSED[0m[33m [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true1-0.5-labels1] [32mPASSED[0m[33m [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true2-0.5-labels2] [32mPASSED[0m[33m [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true3-0.75-labels3] [32mPASSED[0m[33m [ 91%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true0-0.75-labels0] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true1-0.5-labels1] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true2-0.5-labels2] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true3-0.75-labels3] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_increasing [32mPASSED[0m[33m             [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_ties[y_true0-1-0.25] [32mPASSED[0m[33m   [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_ties[y_true1-2-0.5] [32mPASSED[0m[33m    [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_ties[y_true2-3-1] [32mPASSED[0m[33m      [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_warning[y_true0-4] [32mPASSED[0m[33m     [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_warning[y_true1-5] [32mPASSED[0m[33m     [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true0-y_score0-None-y type must be 'binary' or 'multiclass', got 'continuous'] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true1-y_score1-None-Number of classes in 'y_true' \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true2-y_score2-labels2-Parameter 'labels' must be unique.] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true3-y_score3-labels3-Parameter 'labels' must be ordered.] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true4-y_score4-labels4-Number of given labels \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true5-y_score5-labels5-'y_true' contains labels not in parameter 'labels'.] [32mPASSED[0m[33m [ 92%][0m
test_ranking.py::test_top_k_accuracy_score_error[y_true6-y_score6-None-`y_true` is binary while y_score is 2d with 3 classes. If `y_true` does not contain all the labels, `labels` must be provided] [32mPASSED[0m[33m [ 92%][0m
test_regression.py::test_regression_metrics [32mPASSED[0m[33m                       [ 92%][0m
test_regression.py::test_mean_squared_error_multioutput_raw_value_squared [32mPASSED[0m[33m [ 92%][0m
test_regression.py::test_multioutput_regression [32mPASSED[0m[33m                   [ 92%][0m
test_regression.py::test_regression_metrics_at_limits [32mPASSED[0m[33m             [ 92%][0m
test_regression.py::test__check_reg_targets [32mPASSED[0m[33m                       [ 92%][0m
test_regression.py::test__check_reg_targets_exception [32mPASSED[0m[33m             [ 92%][0m
test_regression.py::test_regression_multioutput_array [32mPASSED[0m[33m             [ 93%][0m
test_regression.py::test_regression_custom_weights [32mPASSED[0m[33m                [ 93%][0m
test_regression.py::test_regression_single_sample[r2_score] [32mPASSED[0m[33m       [ 93%][0m
test_regression.py::test_regression_single_sample[d2_tweedie_score] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_regression_single_sample[d2_pinball_score] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_tweedie_deviance_continuity [32mPASSED[0m[33m              [ 93%][0m
test_regression.py::test_mean_absolute_percentage_error [32mPASSED[0m[33m           [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.05-normal] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.05-lognormal] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.05-exponential] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.05-uniform] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.5-normal] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.5-lognormal] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.5-exponential] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.5-uniform] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.75-normal] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.75-lognormal] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.75-exponential] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_mean_pinball_loss_on_constant_predictions[0.75-uniform] [32mPASSED[0m[33m [ 93%][0m
test_regression.py::test_dummy_quantile_parameter_tuning [32mPASSED[0m[33m          [ 93%][0m
test_score_objects.py::test_all_scorers_repr [32mPASSED[0m[33m                      [ 93%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring[single_tuple] [32mPASSED[0m[33m [ 93%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring[single_list] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring[dict_str] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring[multi_tuple] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring[multi_list] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring[dict_callable] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[tuple of callables] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[list of int] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[tuple of one callable] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[empty tuple] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[non-unique str] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[non-string key dict] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_and_check_multimetric_scoring_errors[empty dict] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_check_scoring_gridsearchcv [32mPASSED[0m[33m            [ 94%][0m
test_score_objects.py::test_make_scorer [32mPASSED[0m[33m                           [ 94%][0m
test_score_objects.py::test_classification_binary_scores[f1-f1_score] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[f1_weighted-metric1] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[f1_macro-metric2] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[f1_micro-metric3] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[precision-precision_score] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[precision_weighted-metric5] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[precision_macro-metric6] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[precision_micro-metric7] [32mPASSED[0m[33m [ 94%][0m
test_score_objects.py::test_classification_binary_scores[recall-recall_score] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[recall_weighted-metric9] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[recall_macro-metric10] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[recall_micro-metric11] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[jaccard-jaccard_score] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[jaccard_weighted-metric13] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[jaccard_macro-metric14] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[jaccard_micro-metric15] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[top_k_accuracy-top_k_accuracy_score] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_binary_scores[matthews_corrcoef-matthews_corrcoef] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[accuracy-accuracy_score] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[balanced_accuracy-balanced_accuracy_score] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[f1_weighted-metric2] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[f1_macro-metric3] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[f1_micro-metric4] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[precision_weighted-metric5] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[precision_macro-metric6] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[precision_micro-metric7] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[recall_weighted-metric8] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[recall_macro-metric9] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[recall_micro-metric10] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[jaccard_weighted-metric11] [32mPASSED[0m[33m [ 95%][0m
test_score_objects.py::test_classification_multiclass_scores[jaccard_macro-metric12] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_classification_multiclass_scores[jaccard_micro-metric13] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_custom_scorer_pickling [32mPASSED[0m[33m                [ 96%][0m
test_score_objects.py::test_regression_scorers [32mPASSED[0m[33m                    [ 96%][0m
test_score_objects.py::test_thresholded_scorers [32mPASSED[0m[33m                   [ 96%][0m
test_score_objects.py::test_thresholded_scorers_multilabel_indicator_data [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_supervised_cluster_scorers [32mPASSED[0m[33m            [ 96%][0m
test_score_objects.py::test_raises_on_score_list [32mPASSED[0m[33m                  [ 96%][0m
test_score_objects.py::test_classification_scorer_sample_weight [32mPASSED[0m[33m   [ 96%][0m
test_score_objects.py::test_regression_scorer_sample_weight [32mPASSED[0m[33m       [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[accuracy] [32mPASSED[0m[33m         [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[adjusted_mutual_info_score] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[adjusted_rand_score] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[average_precision] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[balanced_accuracy] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[completeness_score] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[explained_variance] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[f1] [32mPASSED[0m[33m               [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[f1_macro] [32mPASSED[0m[33m         [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[f1_micro] [32mPASSED[0m[33m         [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[f1_samples] [32mPASSED[0m[33m       [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[f1_weighted] [32mPASSED[0m[33m      [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[fowlkes_mallows_score] [32mPASSED[0m[33m [ 96%][0m
test_score_objects.py::test_scorer_memmap_input[homogeneity_score] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[jaccard] [32mPASSED[0m[33m          [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[jaccard_macro] [32mPASSED[0m[33m    [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[jaccard_micro] [32mPASSED[0m[33m    [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[jaccard_samples] [32mPASSED[0m[33m  [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[jaccard_weighted] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[matthews_corrcoef] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[max_error] [32mPASSED[0m[33m        [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[mutual_info_score] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_brier_score] [32mPASSED[0m[33m  [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_log_loss] [32mPASSED[0m[33m     [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_mean_absolute_error] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_mean_absolute_percentage_error] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_mean_gamma_deviance] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_mean_poisson_deviance] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_mean_squared_error] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_mean_squared_log_error] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_median_absolute_error] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[neg_root_mean_squared_error] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[normalized_mutual_info_score] [32mPASSED[0m[33m [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[precision] [32mPASSED[0m[33m        [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[precision_macro] [32mPASSED[0m[33m  [ 97%][0m
test_score_objects.py::test_scorer_memmap_input[precision_micro] [32mPASSED[0m[33m  [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[precision_samples] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[precision_weighted] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[r2] [32mPASSED[0m[33m               [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[rand_score] [32mPASSED[0m[33m       [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[recall] [32mPASSED[0m[33m           [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[recall_macro] [32mPASSED[0m[33m     [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[recall_micro] [32mPASSED[0m[33m     [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[recall_samples] [32mPASSED[0m[33m   [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[recall_weighted] [32mPASSED[0m[33m  [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[roc_auc] [32mPASSED[0m[33m          [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[roc_auc_ovo] [32mPASSED[0m[33m      [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[roc_auc_ovo_weighted] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[roc_auc_ovr] [32mPASSED[0m[33m      [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[roc_auc_ovr_weighted] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[top_k_accuracy] [32mPASSED[0m[33m   [ 98%][0m
test_score_objects.py::test_scorer_memmap_input[v_measure_score] [32mPASSED[0m[33m  [ 98%][0m
test_score_objects.py::test_scoring_is_not_metric [32mPASSED[0m[33m                 [ 98%][0m
test_score_objects.py::test_multimetric_scorer_calls_method_once[scorers0-1-1-1] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_multimetric_scorer_calls_method_once[scorers1-1-0-1] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_multimetric_scorer_calls_method_once[scorers2-1-1-0] [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_multimetric_scorer_calls_method_once_classifier_no_decision [32mPASSED[0m[33m [ 98%][0m
test_score_objects.py::test_multimetric_scorer_calls_method_once_regressor_threshold [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multimetric_scorer_sanity_check [32mPASSED[0m[33m       [ 99%][0m
test_score_objects.py::test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_proba_scorer_label [32mPASSED[0m[33m     [ 99%][0m
test_score_objects.py::test_multiclass_roc_no_proba_scorer_errors[roc_auc_ovr] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_no_proba_scorer_errors[roc_auc_ovo] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_no_proba_scorer_errors[roc_auc_ovr_weighted] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_multiclass_roc_no_proba_scorer_errors[roc_auc_ovo_weighted] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_average_precision_pos_label [32mPASSED[0m[33m           [ 99%][0m
test_score_objects.py::test_brier_score_loss_pos_label [32mPASSED[0m[33m            [ 99%][0m
test_score_objects.py::test_non_symmetric_metric_pos_label[f1_score] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_non_symmetric_metric_pos_label[precision_score] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_non_symmetric_metric_pos_label[recall_score] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_non_symmetric_metric_pos_label[jaccard_score] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_scorer_select_proba_error[ThresholdScorer] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_scorer_select_proba_error[ProbaScorer] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_scorer_select_proba_error[PredictScorer] [32mPASSED[0m[33m [ 99%][0m
test_score_objects.py::test_get_scorer_return_copy [32mPASSED[0m[33m                [ 99%][0m
test_score_objects.py::test_SCORERS_deprecated [32mPASSED[0m[33m                    [ 99%][0m
test_score_objects.py::test_scorer_no_op_multiclass_select_proba [32mPASSED[0m[33m  [100%][0m

[33m=============================== warnings summary ===============================[0m
test_classification.py::test_classification_report_output_dict_empty_input
  /lib/python3.10/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
    _warn_prf(average, modifier, msg_start, len(result))

test_classification.py::test_classification_report_output_dict_empty_input
  /lib/python3.10/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.
    _warn_prf(average, modifier, msg_start, len(result))

test_classification.py::test_classification_report_output_dict_empty_input
  /lib/python3.10/site-packages/numpy/lib/function_base.py:495: RuntimeWarning: Mean of empty slice.
    avg = a.mean(axis)

test_classification.py::test_balanced_accuracy_score[y_true2-y_pred2]
  /lib/python3.10/site-packages/sklearn/metrics/_classification.py:1999: UserWarning: y_pred contains classes not in y_true
    warnings.warn("y_pred contains classes not in y_true")

test_common.py::test_normalize_option_binary_classification[top_k_accuracy_score]
test_common.py::test_normalize_option_binary_classification[top_k_accuracy_score]
test_ranking.py::test_top_k_accuracy_score_binary[y_score2-2-1]
test_ranking.py::test_top_k_accuracy_score_binary[y_score5-2-1]
test_score_objects.py::test_classification_binary_scores[top_k_accuracy-top_k_accuracy_score]
test_score_objects.py::test_classification_binary_scores[top_k_accuracy-top_k_accuracy_score]
  /lib/python3.10/site-packages/sklearn/metrics/_ranking.py:1775: UndefinedMetricWarning: 'k' (2) greater than or equal to 'n_classes' (2) will result in a perfect score and is therefore meaningless.
    warnings.warn(

test_common.py: 25 warnings
  /lib/python3.10/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in samples with no predicted labels. Use `zero_division` parameter to control this behavior.
    _warn_prf(average, modifier, msg_start, len(result))

test_pairwise.py::test_pairwise_distances_chunked_reduce
test_pairwise.py::test_pairwise_distances_chunked_reduce_none
  /lib/python3.10/site-packages/sklearn/utils/__init__.py:972: UserWarning: Could not adhere to working_memory config. Currently 0MiB, 1MiB required.
    warnings.warn(

test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-1000000.0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-1000000.0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-1000000.0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-1000000.0-50]
  /lib/python3.10/site-packages/sklearn/metrics/tests/test_pairwise_distances_reduction.py:513: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
    neigh_indices_ref = np.array(neigh_indices_ref)

test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-minkowski-1000000.0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_X-seuclidean-1000000.0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-minkowski-1000000.0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-0-50]
test_pairwise_distances_reduction.py::test_pairwise_distances_radius_neighbors[42-parallel_on_Y-seuclidean-1000000.0-50]
  /lib/python3.10/site-packages/sklearn/metrics/tests/test_pairwise_distances_reduction.py:514: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
    neigh_distances_ref = np.array(neigh_distances_ref)

test_score_objects.py::test_thresholded_scorers_multilabel_indicator_data
test_score_objects.py::test_thresholded_scorers_multilabel_indicator_data
test_score_objects.py::test_thresholded_scorers_multilabel_indicator_data
test_score_objects.py::test_thresholded_scorers_multilabel_indicator_data
test_score_objects.py::test_thresholded_scorers_multilabel_indicator_data
  /lib/python3.10/site-packages/sklearn/svm/_base.py:1225: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
[33m====== [32m2217 passed[0m, [33m[1m4 skipped[0m, [33m[1m6 xfailed[0m, [33m[1m58 warnings[0m[33m in 64.92s (0:01:04)[0m[33m ======[0m
