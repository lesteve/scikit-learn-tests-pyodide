(node:472036) ExperimentalWarning: Fetch is an experimental feature. This feature could change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
warning: no blob constructor, cannot create blobs with mimetypes
warning: no BlobBuilder
Loading distutils
Loaded distutils
Python initialization complete
(node:472036) ExperimentalWarning: buffer.Blob is an experimental feature. This feature could change at any time
distutils already loaded from default channel
Loading micropip, pyparsing, packaging
Loaded micropip, pyparsing, packaging
distutils already loaded from default channel
Loading scikit-learn, scipy, numpy, joblib, threadpoolctl, clapack
Loaded clapack, joblib, threadpoolctl, numpy, scikit-learn, scipy
distutils already loaded from default channel
pyparsing already loaded from default channel
Loading pytest, atomicwrites, attrs, six, more-itertools, pluggy, py, setuptools, iniconfig
Loaded pytest, atomicwrites, attrs, six, more-itertools, pluggy, py, iniconfig, setuptools
Loading tomli
Loaded tomli
pytest command: pytest.main("--pyargs sklearn.preprocessing.tests -v".split())
[1m============================= test session starts ==============================[0m
platform emscripten -- Python 3.10.2, pytest-7.1.2, pluggy-1.0.0 -- 
cachedir: .pytest_cache
rootdir: /home/pyodide
[1mcollecting ... [0m[1mcollecting 333 items                                                           [0m[1mcollecting 1027 items                                                          [0m[1mcollected 1027 items                                                           [0m

test_common.py::test_missing_value_handling[est0-maxabs_scale-True-False-omit_kwargs0] [32mPASSED[0m[32m [  0%][0m
test_common.py::test_missing_value_handling[est1-minmax_scale-False-False-omit_kwargs1] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est2-scale-False-False-omit_kwargs2] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est3-scale-True-False-omit_kwargs3] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est4-power_transform-False-False-omit_kwargs4] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est5-power_transform-False-True-omit_kwargs5] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est6-quantile_transform-True-False-omit_kwargs6] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est7-robust_scale-False-False-omit_kwargs7] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_handling[est8-robust_scale-True-False-omit_kwargs8] [32mPASSED[0m[33m [  0%][0m
test_common.py::test_missing_value_pandas_na_support[est0-maxabs_scale] [33mSKIPPED[0m[33m [  0%][0m
test_common.py::test_missing_value_pandas_na_support[est1-minmax_scale] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est2-scale] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est3-scale] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est4-power_transform] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est5-power_transform] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est6-quantile_transform] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est7-robust_scale] [33mSKIPPED[0m[33m [  1%][0m
test_common.py::test_missing_value_pandas_na_support[est8-robust_scale] [33mSKIPPED[0m[33m [  1%][0m
test_data.py::test_raises_value_error_if_sample_weights_greater_than_1d [32mPASSED[0m[33m [  1%][0m
test_data.py::test_standard_scaler_sample_weight[array-Xw0-X0-sample_weight0] [32mPASSED[0m[33m [  1%][0m
test_data.py::test_standard_scaler_sample_weight[array-Xw1-X1-sample_weight1] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[array-Xw2-X2-sample_weight2] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[sparse_csr-Xw0-X0-sample_weight0] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[sparse_csr-Xw1-X1-sample_weight1] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[sparse_csr-Xw2-X2-sample_weight2] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[sparse_csc-Xw0-X0-sample_weight0] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[sparse_csc-Xw1-X1-sample_weight1] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_sample_weight[sparse_csc-Xw2-X2-sample_weight2] [32mPASSED[0m[33m [  2%][0m
test_data.py::test_standard_scaler_1d [32mPASSED[0m[33m                             [  2%][0m
test_data.py::test_standard_scaler_dtype[False-None] [32mPASSED[0m[33m              [  2%][0m
test_data.py::test_standard_scaler_dtype[False-csc_matrix] [32mPASSED[0m[33m        [  3%][0m
test_data.py::test_standard_scaler_dtype[False-csr_matrix] [32mPASSED[0m[33m        [  3%][0m
test_data.py::test_standard_scaler_dtype[True-None] [32mPASSED[0m[33m               [  3%][0m
test_data.py::test_standard_scaler_dtype[True-csc_matrix] [32mPASSED[0m[33m         [  3%][0m
test_data.py::test_standard_scaler_dtype[True-csr_matrix] [32mPASSED[0m[33m         [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-False-asarray-scaler0] [32mPASSED[0m[33m [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-False-asarray-scaler1] [32mPASSED[0m[33m [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-False-csc_matrix-scaler0] [32mPASSED[0m[33m [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-False-csc_matrix-scaler1] [32mPASSED[0m[33m [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-False-csr_matrix-scaler0] [32mPASSED[0m[33m [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-False-csr_matrix-scaler1] [32mPASSED[0m[33m [  3%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-True-asarray-scaler0] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-True-asarray-scaler1] [33mSKIPPED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-True-csc_matrix-scaler0] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-True-csc_matrix-scaler1] [33mSKIPPED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-True-csr_matrix-scaler0] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float32-True-csr_matrix-scaler1] [33mSKIPPED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-False-asarray-scaler0] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-False-asarray-scaler1] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-False-csc_matrix-scaler0] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-False-csc_matrix-scaler1] [32mPASSED[0m[33m [  4%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-False-csr_matrix-scaler0] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-False-csr_matrix-scaler1] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-True-asarray-scaler0] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-True-asarray-scaler1] [33mSKIPPED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-True-csc_matrix-scaler0] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-True-csc_matrix-scaler1] [33mSKIPPED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-True-csr_matrix-scaler0] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[0-float64-True-csr_matrix-scaler1] [33mSKIPPED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-False-asarray-scaler0] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-False-asarray-scaler1] [32mPASSED[0m[33m [  5%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csc_matrix-scaler0] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csc_matrix-scaler1] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csr_matrix-scaler0] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csr_matrix-scaler1] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-True-asarray-scaler0] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-True-asarray-scaler1] [33mSKIPPED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-True-csc_matrix-scaler0] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-True-csc_matrix-scaler1] [33mSKIPPED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-True-csr_matrix-scaler0] [32mPASSED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float32-True-csr_matrix-scaler1] [33mSKIPPED[0m[33m [  6%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-False-asarray-scaler0] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-False-asarray-scaler1] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csc_matrix-scaler0] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csc_matrix-scaler1] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csr_matrix-scaler0] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csr_matrix-scaler1] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-True-asarray-scaler0] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-True-asarray-scaler1] [33mSKIPPED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-True-csc_matrix-scaler0] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-True-csc_matrix-scaler1] [33mSKIPPED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-True-csr_matrix-scaler0] [32mPASSED[0m[33m [  7%][0m
test_data.py::test_standard_scaler_constant_features[1.0-float64-True-csr_matrix-scaler1] [33mSKIPPED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-False-asarray-scaler0] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-False-asarray-scaler1] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csc_matrix-scaler0] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csc_matrix-scaler1] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csr_matrix-scaler0] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csr_matrix-scaler1] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-True-asarray-scaler0] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-True-asarray-scaler1] [33mSKIPPED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-True-csc_matrix-scaler0] [32mPASSED[0m[33m [  8%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-True-csc_matrix-scaler1] [33mSKIPPED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-True-csr_matrix-scaler0] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float32-True-csr_matrix-scaler1] [33mSKIPPED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-False-asarray-scaler0] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-False-asarray-scaler1] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csc_matrix-scaler0] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csc_matrix-scaler1] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csr_matrix-scaler0] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csr_matrix-scaler1] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-True-asarray-scaler0] [32mPASSED[0m[33m [  9%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-True-asarray-scaler1] [33mSKIPPED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-True-csc_matrix-scaler0] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-True-csc_matrix-scaler1] [33mSKIPPED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-True-csr_matrix-scaler0] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_constant_features[100.0-float64-True-csr_matrix-scaler1] [33mSKIPPED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1e-10-10] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1e-10-100] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1e-10-10000] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1-10] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1-100] [32mPASSED[0m[33m [ 10%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1-10000] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-10000000000.0-10] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-10000000000.0-100] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float32-10000000000.0-10000] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1e-10-10] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1e-10-100] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1e-10-10000] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1-10] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1-100] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1-10000] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-10000000000.0-10] [32mPASSED[0m[33m [ 11%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-10000000000.0-100] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[asarray-float64-10000000000.0-10000] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1e-10-10] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1e-10-100] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1e-10-10000] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1-10] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1-100] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1-10000] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-10000000000.0-10] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-10000000000.0-100] [32mPASSED[0m[33m [ 12%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-10000000000.0-10000] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1e-10-10] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1e-10-100] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1e-10-10000] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1-10] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1-100] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1-10000] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-10000000000.0-10] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-10000000000.0-100] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-10000000000.0-10000] [32mPASSED[0m[33m [ 13%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1e-10-10] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1e-10-100] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1e-10-10000] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1-10] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1-100] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1-10000] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-10000000000.0-10] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-10000000000.0-100] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-10000000000.0-10000] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1e-10-10] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1e-10-100] [32mPASSED[0m[33m [ 14%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1e-10-10000] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1-10] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1-100] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1-10000] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-10000000000.0-10] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-10000000000.0-100] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-10000000000.0-10000] [32mPASSED[0m[33m [ 15%][0m
test_data.py::test_scale_1d [32mPASSED[0m[33m                                       [ 15%][0m
test_data.py::test_standard_scaler_numerical_stability [33mSKIPPED[0m (skip...)[33m [ 15%][0m
test_data.py::test_scaler_2d_arrays [32mPASSED[0m[33m                               [ 15%][0m
test_data.py::test_scaler_float16_overflow [32mPASSED[0m[33m                        [ 16%][0m
test_data.py::test_handle_zeros_in_scale [32mPASSED[0m[33m                          [ 16%][0m
test_data.py::test_minmax_scaler_partial_fit [32mPASSED[0m[33m                      [ 16%][0m
test_data.py::test_standard_scaler_partial_fit [32mPASSED[0m[33m                    [ 16%][0m
test_data.py::test_standard_scaler_partial_fit_numerical_stability [32mPASSED[0m[33m [ 16%][0m
test_data.py::test_partial_fit_sparse_input[True] [32mPASSED[0m[33m                 [ 16%][0m
test_data.py::test_partial_fit_sparse_input[None] [32mPASSED[0m[33m                 [ 16%][0m
test_data.py::test_standard_scaler_trasform_with_partial_fit[True] [32mPASSED[0m[33m [ 16%][0m
test_data.py::test_standard_scaler_trasform_with_partial_fit[None] [32mPASSED[0m[33m [ 16%][0m
test_data.py::test_standard_check_array_of_inverse_transform [32mPASSED[0m[33m      [ 16%][0m
test_data.py::test_min_max_scaler_iris [32mPASSED[0m[33m                            [ 17%][0m
test_data.py::test_min_max_scaler_zero_variance_features [32mPASSED[0m[33m          [ 17%][0m
test_data.py::test_minmax_scale_axis1 [32mPASSED[0m[33m                             [ 17%][0m
test_data.py::test_min_max_scaler_1d [32mPASSED[0m[33m                              [ 17%][0m
test_data.py::test_scaler_without_centering[True] [32mPASSED[0m[33m                 [ 17%][0m
test_data.py::test_scaler_without_centering[None] [32mPASSED[0m[33m                 [ 17%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[asarray-True-True] [32mPASSED[0m[33m [ 17%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[asarray-True-False] [32mPASSED[0m[33m [ 17%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[asarray-False-True] [32mPASSED[0m[33m [ 17%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[asarray-False-False] [32mPASSED[0m[33m [ 17%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csc_matrix-True-True] [33mSKIPPED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csc_matrix-True-False] [32mPASSED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csc_matrix-False-True] [33mSKIPPED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csc_matrix-False-False] [32mPASSED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csr_matrix-True-True] [33mSKIPPED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csr_matrix-True-False] [32mPASSED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csr_matrix-False-True] [33mSKIPPED[0m[33m [ 18%][0m
test_data.py::test_scaler_n_samples_seen_with_nan[csr_matrix-False-False] [32mPASSED[0m[33m [ 18%][0m
test_data.py::test_scaler_return_identity [32mPASSED[0m[33m                         [ 18%][0m
test_data.py::test_scaler_int [32mPASSED[0m[33m                                     [ 18%][0m
test_data.py::test_scaler_without_copy [32mPASSED[0m[33m                            [ 18%][0m
test_data.py::test_scale_sparse_with_mean_raise_exception [32mPASSED[0m[33m         [ 19%][0m
test_data.py::test_scale_input_finiteness_validation [32mPASSED[0m[33m              [ 19%][0m
test_data.py::test_robust_scaler_error_sparse [32mPASSED[0m[33m                     [ 19%][0m
test_data.py::test_robust_scaler_attributes[X0-True-True] [32mPASSED[0m[33m         [ 19%][0m
test_data.py::test_robust_scaler_attributes[X0-True-False] [32mPASSED[0m[33m        [ 19%][0m
test_data.py::test_robust_scaler_attributes[X0-False-True] [32mPASSED[0m[33m        [ 19%][0m
test_data.py::test_robust_scaler_attributes[X0-False-False] [32mPASSED[0m[33m       [ 19%][0m
test_data.py::test_robust_scaler_attributes[X1-True-True] [33mSKIPPED[0m (R...)[33m [ 19%][0m
test_data.py::test_robust_scaler_attributes[X1-True-False] [32mPASSED[0m[33m        [ 19%][0m
test_data.py::test_robust_scaler_attributes[X1-False-True] [33mSKIPPED[0m (...)[33m [ 19%][0m
test_data.py::test_robust_scaler_attributes[X1-False-False] [32mPASSED[0m[33m       [ 20%][0m
test_data.py::test_robust_scaler_col_zero_sparse [32mPASSED[0m[33m                  [ 20%][0m
test_data.py::test_robust_scaler_2d_arrays [32mPASSED[0m[33m                        [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0.05] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0.1] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0.5] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-1] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0.05] [32mPASSED[0m[33m [ 20%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0.1] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0.5] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-1] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0.05] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0.1] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0.5] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-1] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0.05] [32mPASSED[0m[33m [ 21%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0.1] [32mPASSED[0m[33m [ 22%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0.5] [32mPASSED[0m[33m [ 22%][0m
test_data.py::test_robust_scaler_equivalence_dense_sparse[None-1] [32mPASSED[0m[33m [ 22%][0m
test_data.py::test_robust_scaler_transform_one_row_csr [32mPASSED[0m[33m            [ 22%][0m
test_data.py::test_robust_scaler_iris [32mPASSED[0m[33m                             [ 22%][0m
test_data.py::test_robust_scaler_iris_quantiles [32mPASSED[0m[33m                   [ 22%][0m
test_data.py::test_quantile_transform_iris [32mPASSED[0m[33m                        [ 22%][0m
test_data.py::test_quantile_transform_check_error [32mPASSED[0m[33m                 [ 22%][0m
test_data.py::test_quantile_transform_sparse_ignore_zeros [32mPASSED[0m[33m         [ 22%][0m
test_data.py::test_quantile_transform_dense_toy [32mPASSED[0m[33m                   [ 22%][0m
test_data.py::test_quantile_transform_subsampling [32mPASSED[0m[33m                 [ 22%][0m
test_data.py::test_quantile_transform_sparse_toy [32mPASSED[0m[33m                  [ 23%][0m
test_data.py::test_quantile_transform_axis1 [32mPASSED[0m[33m                       [ 23%][0m
test_data.py::test_quantile_transform_bounds [32mPASSED[0m[33m                      [ 23%][0m
test_data.py::test_quantile_transform_and_inverse [32mPASSED[0m[33m                 [ 23%][0m
test_data.py::test_quantile_transform_nan [32mPASSED[0m[33m                         [ 23%][0m
test_data.py::test_quantile_transformer_sorted_quantiles[array] [32mPASSED[0m[33m   [ 23%][0m
test_data.py::test_quantile_transformer_sorted_quantiles[sparse] [32mPASSED[0m[33m  [ 23%][0m
test_data.py::test_robust_scaler_invalid_range [32mPASSED[0m[33m                    [ 23%][0m
test_data.py::test_scale_function_without_centering [32mPASSED[0m[33m               [ 23%][0m
test_data.py::test_robust_scale_axis1 [32mPASSED[0m[33m                             [ 23%][0m
test_data.py::test_robust_scale_1d_array [32mPASSED[0m[33m                          [ 24%][0m
test_data.py::test_robust_scaler_zero_variance_features [32mPASSED[0m[33m           [ 24%][0m
test_data.py::test_robust_scaler_unit_variance [32mPASSED[0m[33m                    [ 24%][0m
test_data.py::test_maxabs_scaler_zero_variance_features [32mPASSED[0m[33m           [ 24%][0m
test_data.py::test_maxabs_scaler_large_negative_value [32mPASSED[0m[33m             [ 24%][0m
test_data.py::test_maxabs_scaler_transform_one_row_csr [32mPASSED[0m[33m            [ 24%][0m
test_data.py::test_maxabs_scaler_1d [32mPASSED[0m[33m                               [ 24%][0m
test_data.py::test_maxabs_scaler_partial_fit [32mPASSED[0m[33m                      [ 24%][0m
test_data.py::test_normalizer_l1 [32mPASSED[0m[33m                                  [ 24%][0m
test_data.py::test_normalizer_l2 [32mPASSED[0m[33m                                  [ 24%][0m
test_data.py::test_normalizer_max [32mPASSED[0m[33m                                 [ 25%][0m
test_data.py::test_normalizer_max_sign [32mPASSED[0m[33m                            [ 25%][0m
test_data.py::test_normalize [32mPASSED[0m[33m                                      [ 25%][0m
test_data.py::test_binarizer [32mPASSED[0m[33m                                      [ 25%][0m
test_data.py::test_center_kernel [32mPASSED[0m[33m                                  [ 25%][0m
test_data.py::test_kernelcenterer_non_linear_kernel [32mPASSED[0m[33m               [ 25%][0m
test_data.py::test_cv_pipeline_precomputed [32mPASSED[0m[33m                        [ 25%][0m
test_data.py::test_fit_transform [32mPASSED[0m[33m                                  [ 25%][0m
test_data.py::test_add_dummy_feature [32mPASSED[0m[33m                              [ 25%][0m
test_data.py::test_add_dummy_feature_coo [32mPASSED[0m[33m                          [ 25%][0m
test_data.py::test_add_dummy_feature_csc [32mPASSED[0m[33m                          [ 25%][0m
test_data.py::test_add_dummy_feature_csr [32mPASSED[0m[33m                          [ 26%][0m
test_data.py::test_fit_cold_start [32mPASSED[0m[33m                                 [ 26%][0m
test_data.py::test_quantile_transform_valid_axis [32mPASSED[0m[33m                  [ 26%][0m
test_data.py::test_power_transformer_notfitted[box-cox] [32mPASSED[0m[33m           [ 26%][0m
test_data.py::test_power_transformer_notfitted[yeo-johnson] [32mPASSED[0m[33m       [ 26%][0m
test_data.py::test_power_transformer_inverse[X0-True-box-cox] [32mPASSED[0m[33m     [ 26%][0m
test_data.py::test_power_transformer_inverse[X0-True-yeo-johnson] [32mPASSED[0m[33m [ 26%][0m
test_data.py::test_power_transformer_inverse[X0-False-box-cox] [32mPASSED[0m[33m    [ 26%][0m
test_data.py::test_power_transformer_inverse[X0-False-yeo-johnson] [32mPASSED[0m[33m [ 26%][0m
test_data.py::test_power_transformer_inverse[X1-True-box-cox] [32mPASSED[0m[33m     [ 26%][0m
test_data.py::test_power_transformer_inverse[X1-True-yeo-johnson] [32mPASSED[0m[33m [ 27%][0m
test_data.py::test_power_transformer_inverse[X1-False-box-cox] [32mPASSED[0m[33m    [ 27%][0m
test_data.py::test_power_transformer_inverse[X1-False-yeo-johnson] [32mPASSED[0m[33m [ 27%][0m
test_data.py::test_power_transformer_1d [32mPASSED[0m[33m                           [ 27%][0m
test_data.py::test_power_transformer_2d [32mPASSED[0m[33m                           [ 27%][0m
test_data.py::test_power_transformer_boxcox_strictly_positive_exception [32mPASSED[0m[33m [ 27%][0m
test_data.py::test_power_transformer_yeojohnson_any_input[X0] [32mPASSED[0m[33m     [ 27%][0m
test_data.py::test_power_transformer_yeojohnson_any_input[X1] [32mPASSED[0m[33m     [ 27%][0m
test_data.py::test_power_transformer_yeojohnson_any_input[X2] [32mPASSED[0m[33m     [ 27%][0m
test_data.py::test_power_transformer_yeojohnson_any_input[X3] [32mPASSED[0m[33m     [ 27%][0m
test_data.py::test_power_transformer_shape_exception[box-cox] [32mPASSED[0m[33m     [ 28%][0m
test_data.py::test_power_transformer_shape_exception[yeo-johnson] [32mPASSED[0m[33m [ 28%][0m
test_data.py::test_power_transformer_method_exception [32mPASSED[0m[33m             [ 28%][0m
test_data.py::test_power_transformer_lambda_zero [32mPASSED[0m[33m                  [ 28%][0m
test_data.py::test_power_transformer_lambda_one [32mPASSED[0m[33m                   [ 28%][0m
test_data.py::test_optimization_power_transformer[box-cox-0.1] [32mPASSED[0m[33m    [ 28%][0m
test_data.py::test_optimization_power_transformer[box-cox-0.5] [32mPASSED[0m[33m    [ 28%][0m
test_data.py::test_optimization_power_transformer[yeo-johnson-0.1] [32mPASSED[0m[33m [ 28%][0m
test_data.py::test_optimization_power_transformer[yeo-johnson-0.5] [32mPASSED[0m[33m [ 28%][0m
test_data.py::test_optimization_power_transformer[yeo-johnson-1.0] [32mPASSED[0m[33m [ 28%][0m
test_data.py::test_yeo_johnson_darwin_example [32mPASSED[0m[33m                     [ 29%][0m
test_data.py::test_power_transformer_nans[box-cox] [32mPASSED[0m[33m                [ 29%][0m
test_data.py::test_power_transformer_nans[yeo-johnson] [32mPASSED[0m[33m            [ 29%][0m
test_data.py::test_power_transformer_fit_transform[True-box-cox] [32mPASSED[0m[33m  [ 29%][0m
test_data.py::test_power_transformer_fit_transform[True-yeo-johnson] [32mPASSED[0m[33m [ 29%][0m
test_data.py::test_power_transformer_fit_transform[False-box-cox] [32mPASSED[0m[33m [ 29%][0m
test_data.py::test_power_transformer_fit_transform[False-yeo-johnson] [32mPASSED[0m[33m [ 29%][0m
test_data.py::test_power_transformer_copy_True[True-box-cox] [32mPASSED[0m[33m      [ 29%][0m
test_data.py::test_power_transformer_copy_True[True-yeo-johnson] [32mPASSED[0m[33m  [ 29%][0m
test_data.py::test_power_transformer_copy_True[False-box-cox] [32mPASSED[0m[33m     [ 29%][0m
test_data.py::test_power_transformer_copy_True[False-yeo-johnson] [32mPASSED[0m[33m [ 29%][0m
test_data.py::test_power_transformer_copy_False[True-box-cox] [32mPASSED[0m[33m     [ 30%][0m
test_data.py::test_power_transformer_copy_False[True-yeo-johnson] [32mPASSED[0m[33m [ 30%][0m
test_data.py::test_power_transformer_copy_False[False-box-cox] [32mPASSED[0m[33m    [ 30%][0m
test_data.py::test_power_transformer_copy_False[False-yeo-johnson] [32mPASSED[0m[33m [ 30%][0m
test_data.py::test_standard_scaler_sparse_partial_fit_finite_variance[X_20] [32mPASSED[0m[33m [ 30%][0m
test_data.py::test_standard_scaler_sparse_partial_fit_finite_variance[X_21] [32mPASSED[0m[33m [ 30%][0m
test_data.py::test_minmax_scaler_clip[feature_range0] [32mPASSED[0m[33m             [ 30%][0m
test_data.py::test_minmax_scaler_clip[feature_range1] [32mPASSED[0m[33m             [ 30%][0m
test_data.py::test_standard_scaler_raise_error_for_1d_input [32mPASSED[0m[33m       [ 30%][0m
test_data.py::test_power_transformer_significantly_non_gaussian [32mPASSED[0m[33m   [ 30%][0m
test_data.py::test_one_to_one_features[MinMaxScaler] [32mPASSED[0m[33m              [ 31%][0m
test_data.py::test_one_to_one_features[MaxAbsScaler] [32mPASSED[0m[33m              [ 31%][0m
test_data.py::test_one_to_one_features[RobustScaler] [32mPASSED[0m[33m              [ 31%][0m
test_data.py::test_one_to_one_features[StandardScaler] [32mPASSED[0m[33m            [ 31%][0m
test_data.py::test_one_to_one_features[QuantileTransformer] [32mPASSED[0m[33m       [ 31%][0m
test_data.py::test_one_to_one_features[PowerTransformer] [32mPASSED[0m[33m          [ 31%][0m
test_data.py::test_one_to_one_features_pandas[MinMaxScaler] [33mSKIPPED[0m[33m      [ 31%][0m
test_data.py::test_one_to_one_features_pandas[MaxAbsScaler] [33mSKIPPED[0m[33m      [ 31%][0m
test_data.py::test_one_to_one_features_pandas[RobustScaler] [33mSKIPPED[0m[33m      [ 31%][0m
test_data.py::test_one_to_one_features_pandas[StandardScaler] [33mSKIPPED[0m[33m    [ 31%][0m
test_data.py::test_one_to_one_features_pandas[QuantileTransformer] [33mSKIPPED[0m[33m [ 32%][0m
test_data.py::test_one_to_one_features_pandas[PowerTransformer] [33mSKIPPED[0m[33m  [ 32%][0m
test_data.py::test_one_to_one_features_pandas[Normalizer] [33mSKIPPED[0m (c...)[33m [ 32%][0m
test_data.py::test_one_to_one_features_pandas[Binarizer] [33mSKIPPED[0m (co...)[33m [ 32%][0m
test_data.py::test_kernel_centerer_feature_names_out [32mPASSED[0m[33m              [ 32%][0m
test_discretization.py::test_fit_transform[uniform-expected0] [32mPASSED[0m[33m     [ 32%][0m
test_discretization.py::test_fit_transform[kmeans-expected1] [32mPASSED[0m[33m      [ 32%][0m
test_discretization.py::test_fit_transform[quantile-expected2] [32mPASSED[0m[33m    [ 32%][0m
test_discretization.py::test_valid_n_bins [32mPASSED[0m[33m                         [ 32%][0m
test_discretization.py::test_invalid_n_bins [32mPASSED[0m[33m                       [ 32%][0m
test_discretization.py::test_invalid_n_bins_array [32mPASSED[0m[33m                 [ 33%][0m
test_discretization.py::test_fit_transform_n_bins_array[uniform-expected0] [32mPASSED[0m[33m [ 33%][0m
test_discretization.py::test_fit_transform_n_bins_array[kmeans-expected1] [32mPASSED[0m[33m [ 33%][0m
test_discretization.py::test_fit_transform_n_bins_array[quantile-expected2] [32mPASSED[0m[33m [ 33%][0m
test_discretization.py::test_same_min_max[uniform] [32mPASSED[0m[33m                [ 33%][0m
test_discretization.py::test_same_min_max[kmeans] [32mPASSED[0m[33m                 [ 33%][0m
test_discretization.py::test_same_min_max[quantile] [32mPASSED[0m[33m               [ 33%][0m
test_discretization.py::test_transform_1d_behavior [32mPASSED[0m[33m                [ 33%][0m
test_discretization.py::test_numeric_stability[1] [32mPASSED[0m[33m                 [ 33%][0m
test_discretization.py::test_numeric_stability[2] [32mPASSED[0m[33m                 [ 33%][0m
test_discretization.py::test_numeric_stability[3] [32mPASSED[0m[33m                 [ 33%][0m
test_discretization.py::test_numeric_stability[4] [32mPASSED[0m[33m                 [ 34%][0m
test_discretization.py::test_numeric_stability[5] [32mPASSED[0m[33m                 [ 34%][0m
test_discretization.py::test_numeric_stability[6] [32mPASSED[0m[33m                 [ 34%][0m
test_discretization.py::test_numeric_stability[7] [32mPASSED[0m[33m                 [ 34%][0m
test_discretization.py::test_numeric_stability[8] [32mPASSED[0m[33m                 [ 34%][0m
test_discretization.py::test_invalid_encode_option [32mPASSED[0m[33m                [ 34%][0m
test_discretization.py::test_encode_options [32mPASSED[0m[33m                       [ 34%][0m
test_discretization.py::test_invalid_strategy_option [32mPASSED[0m[33m              [ 34%][0m
test_discretization.py::test_nonuniform_strategies[uniform-expected_2bins0-expected_3bins0-expected_5bins0] [32mPASSED[0m[33m [ 34%][0m
test_discretization.py::test_nonuniform_strategies[kmeans-expected_2bins1-expected_3bins1-expected_5bins1] [32mPASSED[0m[33m [ 34%][0m
test_discretization.py::test_nonuniform_strategies[quantile-expected_2bins2-expected_3bins2-expected_5bins2] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[ordinal-uniform-expected_inv0] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[ordinal-kmeans-expected_inv1] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[ordinal-quantile-expected_inv2] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[onehot-uniform-expected_inv0] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[onehot-kmeans-expected_inv1] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[onehot-quantile-expected_inv2] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[onehot-dense-uniform-expected_inv0] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[onehot-dense-kmeans-expected_inv1] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_inverse_transform[onehot-dense-quantile-expected_inv2] [32mPASSED[0m[33m [ 35%][0m
test_discretization.py::test_transform_outside_fit_range[uniform] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_transform_outside_fit_range[kmeans] [32mPASSED[0m[33m  [ 36%][0m
test_discretization.py::test_transform_outside_fit_range[quantile] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_overwrite [32mPASSED[0m[33m                            [ 36%][0m
test_discretization.py::test_redundant_bins[quantile-expected_bin_edges0] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_redundant_bins[kmeans-expected_bin_edges1] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_percentile_numeric_stability [32mPASSED[0m[33m         [ 36%][0m
test_discretization.py::test_consistent_dtype[ordinal-None-float16] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_consistent_dtype[ordinal-None-float32] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_consistent_dtype[ordinal-None-float64] [32mPASSED[0m[33m [ 36%][0m
test_discretization.py::test_consistent_dtype[ordinal-float16-float16] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float16-float32] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float16-float64] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float32-float16] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float32-float32] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float32-float64] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float64-float16] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float64-float32] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[ordinal-float64-float64] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[onehot-None-float16] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[onehot-None-float32] [32mPASSED[0m[33m [ 37%][0m
test_discretization.py::test_consistent_dtype[onehot-None-float64] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float16-float16] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float16-float32] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float16-float64] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float32-float16] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float32-float32] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float32-float64] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float64-float16] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float64-float32] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-float64-float64] [32mPASSED[0m[33m [ 38%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-None-float16] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-None-float32] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-None-float64] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float16-float16] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float16-float32] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float16-float64] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float32-float16] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float32-float32] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float32-float64] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float64-float16] [32mPASSED[0m[33m [ 39%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float64-float32] [32mPASSED[0m[33m [ 40%][0m
test_discretization.py::test_consistent_dtype[onehot-dense-float64-float64] [32mPASSED[0m[33m [ 40%][0m
test_discretization.py::test_32_equal_64[ordinal-float16] [32mPASSED[0m[33m         [ 40%][0m
test_discretization.py::test_32_equal_64[ordinal-float32] [32mPASSED[0m[33m         [ 40%][0m
test_discretization.py::test_32_equal_64[ordinal-float64] [32mPASSED[0m[33m         [ 40%][0m
test_discretization.py::test_32_equal_64[onehot-float16] [32mPASSED[0m[33m          [ 40%][0m
test_discretization.py::test_32_equal_64[onehot-float32] [32mPASSED[0m[33m          [ 40%][0m
test_discretization.py::test_32_equal_64[onehot-float64] [32mPASSED[0m[33m          [ 40%][0m
test_discretization.py::test_32_equal_64[onehot-dense-float16] [32mPASSED[0m[33m    [ 40%][0m
test_discretization.py::test_32_equal_64[onehot-dense-float32] [32mPASSED[0m[33m    [ 40%][0m
test_discretization.py::test_32_equal_64[onehot-dense-float64] [32mPASSED[0m[33m    [ 40%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_default[None] [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_default[warn] [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_invalid_strategy [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_invalid_type [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_warn [32mPASSED[0m[33m      [ 41%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_values[0] [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscretizer_subsample_values[200000] [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscrtizer_get_feature_names_out[onehot-expected_names0] [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscrtizer_get_feature_names_out[onehot-dense-expected_names1] [32mPASSED[0m[33m [ 41%][0m
test_discretization.py::test_kbinsdiscrtizer_get_feature_names_out[ordinal-expected_names2] [32mPASSED[0m[33m [ 41%][0m
test_encoders.py::test_one_hot_encoder_sparse_dense [32mPASSED[0m[33m               [ 42%][0m
test_encoders.py::test_one_hot_encoder_handle_unknown[ignore] [32mPASSED[0m[33m     [ 42%][0m
test_encoders.py::test_one_hot_encoder_handle_unknown[infrequent_if_exist] [32mPASSED[0m[33m [ 42%][0m
test_encoders.py::test_one_hot_encoder_not_fitted [32mPASSED[0m[33m                 [ 42%][0m
test_encoders.py::test_one_hot_encoder_handle_unknown_strings[ignore] [32mPASSED[0m[33m [ 42%][0m
test_encoders.py::test_one_hot_encoder_handle_unknown_strings[infrequent_if_exist] [32mPASSED[0m[33m [ 42%][0m
test_encoders.py::test_one_hot_encoder_dtype[int32-int32] [32mPASSED[0m[33m         [ 42%][0m
test_encoders.py::test_one_hot_encoder_dtype[int32-float32] [32mPASSED[0m[33m       [ 42%][0m
test_encoders.py::test_one_hot_encoder_dtype[int32-float64] [32mPASSED[0m[33m       [ 42%][0m
test_encoders.py::test_one_hot_encoder_dtype[float32-int32] [32mPASSED[0m[33m       [ 42%][0m
test_encoders.py::test_one_hot_encoder_dtype[float32-float32] [32mPASSED[0m[33m     [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype[float32-float64] [32mPASSED[0m[33m     [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype[float64-int32] [32mPASSED[0m[33m       [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype[float64-float32] [32mPASSED[0m[33m     [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype[float64-float64] [32mPASSED[0m[33m     [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype_pandas[int32] [33mSKIPPED[0m (...)[33m [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype_pandas[float32] [33mSKIPPED[0m[33m     [ 43%][0m
test_encoders.py::test_one_hot_encoder_dtype_pandas[float64] [33mSKIPPED[0m[33m     [ 43%][0m
test_encoders.py::test_one_hot_encoder_feature_names[get_feature_names] [32mPASSED[0m[33m [ 43%][0m
test_encoders.py::test_one_hot_encoder_feature_names[get_feature_names_out] [32mPASSED[0m[33m [ 43%][0m
test_encoders.py::test_one_hot_encoder_feature_names_unicode[get_feature_names] [32mPASSED[0m[33m [ 44%][0m
test_encoders.py::test_one_hot_encoder_feature_names_unicode[get_feature_names_out] [32mPASSED[0m[33m [ 44%][0m
test_encoders.py::test_one_hot_encoder_set_params [32mPASSED[0m[33m                 [ 44%][0m
test_encoders.py::test_one_hot_encoder[mixed] [32mPASSED[0m[33m                     [ 44%][0m
test_encoders.py::test_one_hot_encoder[numeric] [32mPASSED[0m[33m                   [ 44%][0m
test_encoders.py::test_one_hot_encoder[object] [32mPASSED[0m[33m                    [ 44%][0m
test_encoders.py::test_one_hot_encoder[mixed-nan] [32mPASSED[0m[33m                 [ 44%][0m
test_encoders.py::test_one_hot_encoder[mixed-float-nan] [32mPASSED[0m[33m           [ 44%][0m
test_encoders.py::test_one_hot_encoder[mixed-None] [32mPASSED[0m[33m                [ 44%][0m
test_encoders.py::test_one_hot_encoder[mixed-None-nan] [32mPASSED[0m[33m            [ 44%][0m
test_encoders.py::test_one_hot_encoder[mixed-None-float-nan] [32mPASSED[0m[33m      [ 44%][0m
test_encoders.py::test_one_hot_encoder_inverse[None-False-ignore] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[None-False-infrequent_if_exist] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[None-True-ignore] [32mPASSED[0m[33m  [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[None-True-infrequent_if_exist] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[first-False-ignore] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[first-False-infrequent_if_exist] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[first-True-ignore] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse[first-True-infrequent_if_exist] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X0-X_trans0-False] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X0-X_trans0-True] [32mPASSED[0m[33m [ 45%][0m
test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X1-X_trans1-False] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X1-X_trans1-True] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_inverse_if_binary [32mPASSED[0m[33m          [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-if_binary-get_feature_names] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-if_binary-get_feature_names_out] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-first-get_feature_names] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-first-get_feature_names_out] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-None-get_feature_names] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-None-get_feature_names_out] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[first-if_binary-get_feature_names] [32mPASSED[0m[33m [ 46%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[first-if_binary-get_feature_names_out] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[first-first-get_feature_names] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[first-first-get_feature_names_out] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[first-None-get_feature_names] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[first-None-get_feature_names_out] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[None-if_binary-get_feature_names] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[None-if_binary-get_feature_names_out] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[None-first-get_feature_names] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[None-first-get_feature_names_out] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[None-None-get_feature_names] [32mPASSED[0m[33m [ 47%][0m
test_encoders.py::test_one_hot_encoder_drop_reset[None-None-get_feature_names_out] [32mPASSED[0m[33m [ 48%][0m
test_encoders.py::test_X_is_not_1D[X0-fit] [32mPASSED[0m[33m                        [ 48%][0m
test_encoders.py::test_X_is_not_1D[X0-fit_transform] [32mPASSED[0m[33m              [ 48%][0m
test_encoders.py::test_X_is_not_1D[X1-fit] [32mPASSED[0m[33m                        [ 48%][0m
test_encoders.py::test_X_is_not_1D[X1-fit_transform] [32mPASSED[0m[33m              [ 48%][0m
test_encoders.py::test_X_is_not_1D_pandas[fit] [33mSKIPPED[0m (could not im...)[33m [ 48%][0m
test_encoders.py::test_X_is_not_1D_pandas[fit_transform] [33mSKIPPED[0m (co...)[33m [ 48%][0m
test_encoders.py::test_one_hot_encoder_categories[mixed] [32mPASSED[0m[33m          [ 48%][0m
test_encoders.py::test_one_hot_encoder_categories[numeric] [32mPASSED[0m[33m        [ 48%][0m
test_encoders.py::test_one_hot_encoder_categories[object] [32mPASSED[0m[33m         [ 48%][0m
test_encoders.py::test_one_hot_encoder_categories[string] [32mPASSED[0m[33m         [ 48%][0m
test_encoders.py::test_one_hot_encoder_categories[missing-float] [32mPASSED[0m[33m  [ 49%][0m
test_encoders.py::test_one_hot_encoder_categories[missing-np.nan-object] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_categories[missing-float-nan-object] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-ignore] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-infrequent_if_exist] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[numeric-ignore] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[numeric-infrequent_if_exist] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-string-ignore] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-string-infrequent_if_exist] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-string-none-ignore] [32mPASSED[0m[33m [ 49%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-string-none-infrequent_if_exist] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-string-nan-ignore] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-string-nan-infrequent_if_exist] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-None-and-nan-ignore] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-None-and-nan-infrequent_if_exist] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-nan-and-None-ignore] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories[object-nan-and-None-infrequent_if_exist] [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_unsorted_categories [32mPASSED[0m[33m        [ 50%][0m
test_encoders.py::test_one_hot_encoder_specified_categories_mixed_columns [32mPASSED[0m[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_pandas [33mSKIPPED[0m (could not imp...)[33m [ 50%][0m
test_encoders.py::test_one_hot_encoder_feature_names_drop[first-get_feature_names] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_one_hot_encoder_feature_names_drop[first-get_feature_names_out] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_one_hot_encoder_feature_names_drop[binary-get_feature_names] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_one_hot_encoder_feature_names_drop[binary-get_feature_names_out] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_one_hot_encoder_feature_names_drop[manual-get_feature_names] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_one_hot_encoder_feature_names_drop[manual-get_feature_names_out] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_one_hot_encoder_drop_equals_if_binary [32mPASSED[0m[33m      [ 51%][0m
test_encoders.py::test_ordinal_encoder[mixed] [32mPASSED[0m[33m                     [ 51%][0m
test_encoders.py::test_ordinal_encoder[numeric] [32mPASSED[0m[33m                   [ 51%][0m
test_encoders.py::test_ordinal_encoder[object] [32mPASSED[0m[33m                    [ 51%][0m
test_encoders.py::test_ordinal_encoder_specified_categories[object] [32mPASSED[0m[33m [ 51%][0m
test_encoders.py::test_ordinal_encoder_specified_categories[numeric] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_specified_categories[object-string-cat] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_inverse [32mPASSED[0m[33m                    [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_string [32mPASSED[0m[33m     [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_numeric[float] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_numeric[int] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_raise[params0-TypeError-unknown_value should be an integer or np.nan when handle_unknown is 'use_encoded_value', got None.] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_raise[params1-TypeError-unknown_value should only be set when handle_unknown is 'use_encoded_value', got -2.] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_raise[params2-TypeError-unknown_value should be an integer or np.nan when handle_unknown is 'use_encoded_value', got bla.] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_raise[params3-ValueError-The used value for unknown_value (1) is one of the values already used for encoding the seen categories.] [32mPASSED[0m[33m [ 52%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_raise[params4-ValueError-handle_unknown should be either 'error' or 'use_encoded_value', got ignore.] [32mPASSED[0m[33m [ 53%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_nan [32mPASSED[0m[33m        [ 53%][0m
test_encoders.py::test_ordinal_encoder_handle_unknowns_nan_non_float_dtype [32mPASSED[0m[33m [ 53%][0m
test_encoders.py::test_ordinal_encoder_raise_categories_shape [32mPASSED[0m[33m     [ 53%][0m
test_encoders.py::test_encoder_dtypes [32mPASSED[0m[33m                             [ 53%][0m
test_encoders.py::test_encoder_dtypes_pandas [33mSKIPPED[0m (could not impo...)[33m [ 53%][0m
test_encoders.py::test_one_hot_encoder_warning [32mPASSED[0m[33m                    [ 53%][0m
test_encoders.py::test_one_hot_encoder_drop_manual[nan0] [32mPASSED[0m[33m          [ 53%][0m
test_encoders.py::test_one_hot_encoder_drop_manual[None] [32mPASSED[0m[33m          [ 53%][0m
test_encoders.py::test_one_hot_encoder_drop_manual[nan1] [32mPASSED[0m[33m          [ 53%][0m
test_encoders.py::test_one_hot_encoder_invalid_params[X_fit0-params0-Wrong input for parameter `drop`] [32mPASSED[0m[33m [ 54%][0m
test_encoders.py::test_one_hot_encoder_invalid_params[X_fit1-params1-Wrong input for parameter `drop`] [32mPASSED[0m[33m [ 54%][0m
test_encoders.py::test_one_hot_encoder_invalid_params[X_fit2-params2-The following categories were supposed] [32mPASSED[0m[33m [ 54%][0m
test_encoders.py::test_invalid_drop_length[drop0] [32mPASSED[0m[33m                 [ 54%][0m
test_encoders.py::test_invalid_drop_length[drop1] [32mPASSED[0m[33m                 [ 54%][0m
test_encoders.py::test_categories[first-sparse] [32mPASSED[0m[33m                   [ 54%][0m
test_encoders.py::test_categories[first-dense] [32mPASSED[0m[33m                    [ 54%][0m
test_encoders.py::test_categories[manual-sparse] [32mPASSED[0m[33m                  [ 54%][0m
test_encoders.py::test_categories[manual-dense] [32mPASSED[0m[33m                   [ 54%][0m
test_encoders.py::test_encoders_has_categorical_tags[OneHotEncoder] [32mPASSED[0m[33m [ 54%][0m
test_encoders.py::test_encoders_has_categorical_tags[OrdinalEncoder] [32mPASSED[0m[33m [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs0] [32mPASSED[0m[33m    [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs1] [32mPASSED[0m[33m    [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs2] [32mPASSED[0m[33m    [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs3] [32mPASSED[0m[33m    [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs4] [32mPASSED[0m[33m    [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs0] [32mPASSED[0m[33m [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs1] [32mPASSED[0m[33m [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs2] [32mPASSED[0m[33m [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs3] [32mPASSED[0m[33m [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs4] [32mPASSED[0m[33m [ 55%][0m
test_encoders.py::test_ohe_infrequent_two_levels_drop_frequent[if_binary] [32mPASSED[0m[33m [ 56%][0m
test_encoders.py::test_ohe_infrequent_two_levels_drop_frequent[first] [32mPASSED[0m[33m [ 56%][0m
test_encoders.py::test_ohe_infrequent_two_levels_drop_frequent[drop2] [32mPASSED[0m[33m [ 56%][0m
test_encoders.py::test_ohe_infrequent_two_levels_drop_infrequent_errors[drop0] [32mPASSED[0m[33m [ 56%][0m
test_encoders.py::test_ohe_infrequent_two_levels_drop_infrequent_errors[drop1] [32mPASSED[0m[33m [ 56%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs0] [32mPASSED[0m[33m       [ 56%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs1] [32mPASSED[0m[33m       [ 56%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs2] [32mPASSED[0m[33m       [ 56%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs3] [32mPASSED[0m[33m       [ 56%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs4] [32mPASSED[0m[33m       [ 56%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs5] [32mPASSED[0m[33m       [ 57%][0m
test_encoders.py::test_ohe_infrequent_three_levels[kwargs6] [32mPASSED[0m[33m       [ 57%][0m
test_encoders.py::test_ohe_infrequent_three_levels_drop_frequent[first] [32mPASSED[0m[33m [ 57%][0m
test_encoders.py::test_ohe_infrequent_three_levels_drop_frequent[drop1] [32mPASSED[0m[33m [ 57%][0m
test_encoders.py::test_ohe_infrequent_three_levels_drop_infrequent_errors[drop0] [32mPASSED[0m[33m [ 57%][0m
test_encoders.py::test_ohe_infrequent_three_levels_drop_infrequent_errors[drop1] [32mPASSED[0m[33m [ 57%][0m
test_encoders.py::test_ohe_infrequent_handle_unknown_error [32mPASSED[0m[33m        [ 57%][0m
test_encoders.py::test_ohe_infrequent_two_levels_user_cats_one_frequent[kwargs0] [32mPASSED[0m[33m [ 57%][0m
test_encoders.py::test_ohe_infrequent_two_levels_user_cats_one_frequent[kwargs1] [32mPASSED[0m[33m [ 57%][0m
test_encoders.py::test_ohe_infrequent_two_levels_user_cats [32mPASSED[0m[33m        [ 57%][0m
test_encoders.py::test_ohe_infrequent_three_levels_user_cats [32mPASSED[0m[33m      [ 58%][0m
test_encoders.py::test_ohe_infrequent_mixed [32mPASSED[0m[33m                       [ 58%][0m
test_encoders.py::test_ohe_infrequent_multiple_categories [32mPASSED[0m[33m         [ 58%][0m
test_encoders.py::test_ohe_infrequent_multiple_categories_dtypes [33mSKIPPED[0m[33m [ 58%][0m
test_encoders.py::test_ohe_infrequent_one_level_errors[kwargs0] [32mPASSED[0m[33m   [ 58%][0m
test_encoders.py::test_ohe_infrequent_user_cats_unknown_training_errors[kwargs0] [32mPASSED[0m[33m [ 58%][0m
test_encoders.py::test_ohe_infrequent_invalid_parameters_error[kwargs0-max_categories must be greater than 1] [32mPASSED[0m[33m [ 58%][0m
test_encoders.py::test_ohe_infrequent_invalid_parameters_error[kwargs1-min_frequency must be an integer at least] [32mPASSED[0m[33m [ 58%][0m
test_encoders.py::test_ohe_infrequent_invalid_parameters_error[kwargs2-min_frequency must be an integer at least] [32mPASSED[0m[33m [ 58%][0m
test_encoders.py::test_one_hot_encoder_get_feature_names_deprecated [32mPASSED[0m[33m [ 58%][0m
test_encoders.py::test_encoders_string_categories[list-O-O] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-O-U] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-U-O] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-U-U] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-U-S] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-S-O] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-S-U] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[list-S-S] [32mPASSED[0m[33m       [ 59%][0m
test_encoders.py::test_encoders_string_categories[array-O-O] [32mPASSED[0m[33m      [ 59%][0m
test_encoders.py::test_encoders_string_categories[array-O-U] [32mPASSED[0m[33m      [ 59%][0m
test_encoders.py::test_encoders_string_categories[array-U-O] [32mPASSED[0m[33m      [ 59%][0m
test_encoders.py::test_encoders_string_categories[array-U-U] [32mPASSED[0m[33m      [ 60%][0m
test_encoders.py::test_encoders_string_categories[array-U-S] [32mPASSED[0m[33m      [ 60%][0m
test_encoders.py::test_encoders_string_categories[array-S-O] [32mPASSED[0m[33m      [ 60%][0m
test_encoders.py::test_encoders_string_categories[array-S-U] [32mPASSED[0m[33m      [ 60%][0m
test_encoders.py::test_encoders_string_categories[array-S-S] [32mPASSED[0m[33m      [ 60%][0m
test_encoders.py::test_encoders_string_categories[dataframe-O-O] [33mSKIPPED[0m[33m [ 60%][0m
test_encoders.py::test_encoders_string_categories[dataframe-O-U] [33mSKIPPED[0m[33m [ 60%][0m
test_encoders.py::test_encoders_string_categories[dataframe-U-O] [33mSKIPPED[0m[33m [ 60%][0m
test_encoders.py::test_encoders_string_categories[dataframe-U-U] [33mSKIPPED[0m[33m [ 60%][0m
test_encoders.py::test_encoders_string_categories[dataframe-U-S] [33mSKIPPED[0m[33m [ 60%][0m
test_encoders.py::test_encoders_string_categories[dataframe-S-O] [33mSKIPPED[0m[33m [ 61%][0m
test_encoders.py::test_encoders_string_categories[dataframe-S-U] [33mSKIPPED[0m[33m [ 61%][0m
test_encoders.py::test_encoders_string_categories[dataframe-S-S] [33mSKIPPED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_values_get_feature_names[nan-get_feature_names] [32mPASSED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_values_get_feature_names[nan-get_feature_names_out] [32mPASSED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_values_get_feature_names[None-get_feature_names] [32mPASSED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_values_get_feature_names[None-get_feature_names_out] [32mPASSED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_value_support_pandas [33mSKIPPED[0m (cou...)[33m [ 61%][0m
test_encoders.py::test_ohe_missing_value_support_pandas_categorical[pd.NA-infrequent_if_exist] [33mSKIPPED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_value_support_pandas_categorical[pd.NA-ignore] [33mSKIPPED[0m[33m [ 61%][0m
test_encoders.py::test_ohe_missing_value_support_pandas_categorical[np.nan-infrequent_if_exist] [33mSKIPPED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_missing_value_support_pandas_categorical[np.nan-ignore] [33mSKIPPED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_drop_first_handle_unknown_ignore_warns[ignore] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_drop_first_handle_unknown_ignore_warns[infrequent_if_exist] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_drop_if_binary_handle_unknown_ignore_warns[ignore] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_drop_if_binary_handle_unknown_ignore_warns[infrequent_if_exist] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_drop_first_explicit_categories[ignore] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ohe_drop_first_explicit_categories[infrequent_if_exist] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ordinal_encoder_passthrough_missing_values_float_errors_dtype [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ordinal_encoder_passthrough_missing_values_float[nan] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ordinal_encoder_passthrough_missing_values_float[-2] [32mPASSED[0m[33m [ 62%][0m
test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[nan-pd.NA] [33mSKIPPED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[nan-np.nan] [33mSKIPPED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[-2-pd.NA] [33mSKIPPED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[-2-np.nan] [33mSKIPPED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_specified_categories_missing_passthrough[object-None-missing-value] [32mPASSED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_specified_categories_missing_passthrough[object-nan-missing_value] [32mPASSED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_specified_categories_missing_passthrough[numeric-missing-value] [32mPASSED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X0-expected_X_trans0-X_test0] [32mPASSED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X1-expected_X_trans1-X_test1] [32mPASSED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X2-expected_X_trans2-X_test2] [32mPASSED[0m[33m [ 63%][0m
test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X3-expected_X_trans3-X_test3] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_sparse [32mPASSED[0m[33m                     [ 64%][0m
test_encoders.py::test_ordinal_encoder_fit_with_unseen_category [32mPASSED[0m[33m   [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test0-X_train0] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test0-X_train1] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test0-X_train2] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test1-X_train0] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test1-X_train1] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test1-X_train2] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test2-X_train0] [32mPASSED[0m[33m [ 64%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test2-X_train1] [32mPASSED[0m[33m [ 65%][0m
test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test2-X_train2] [32mPASSED[0m[33m [ 65%][0m
test_encoders.py::test_ordinal_encoder_python_integer [32mPASSED[0m[33m             [ 65%][0m
test_encoders.py::test_ordinal_encoder_features_names_out_pandas [33mSKIPPED[0m[33m [ 65%][0m
test_encoders.py::test_ordinal_encoder_unknown_missing_interaction [32mPASSED[0m[33m [ 65%][0m
test_encoders.py::test_ordinal_encoder_encoded_missing_value_error[True] [33mSKIPPED[0m[33m [ 65%][0m
test_encoders.py::test_ordinal_encoder_encoded_missing_value_error[False] [32mPASSED[0m[33m [ 65%][0m
test_function_transformer.py::test_delegate_to_func [32mPASSED[0m[33m               [ 65%][0m
test_function_transformer.py::test_np_log [32mPASSED[0m[33m                         [ 65%][0m
test_function_transformer.py::test_kw_arg [32mPASSED[0m[33m                         [ 65%][0m
test_function_transformer.py::test_kw_arg_update [32mPASSED[0m[33m                  [ 66%][0m
test_function_transformer.py::test_kw_arg_reset [32mPASSED[0m[33m                   [ 66%][0m
test_function_transformer.py::test_inverse_transform [32mPASSED[0m[33m              [ 66%][0m
test_function_transformer.py::test_check_inverse [32mPASSED[0m[33m                  [ 66%][0m
test_function_transformer.py::test_function_transformer_frame [33mSKIPPED[0m[33m    [ 66%][0m
test_function_transformer.py::test_function_transformer_raise_error_with_mixed_dtype[array] [32mPASSED[0m[33m [ 66%][0m
test_function_transformer.py::test_function_transformer_raise_error_with_mixed_dtype[series] [33mSKIPPED[0m[33m [ 66%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X0-one-to-one-None-expected0] [32mPASSED[0m[33m [ 66%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X1-one-to-one-None-expected1] [33mSKIPPED[0m[33m [ 66%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X2-<lambda>-None-expected2] [32mPASSED[0m[33m [ 66%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X3-<lambda>-None-expected3] [33mSKIPPED[0m[33m [ 66%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X4-<lambda>-None-expected4] [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X5-<lambda>-None-expected5] [33mSKIPPED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X6-one-to-one-input_features6-expected6] [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X7-one-to-one-input_features7-expected7] [33mSKIPPED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X8-<lambda>-input_features8-expected8] [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out[X9-<lambda>-input_features9-expected9] [33mSKIPPED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_get_feature_names_out_without_validation [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_feature_names_out_string[x0] [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_feature_names_out_string[feature_names_out1] [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_feature_names_out_string[feature_names_out2] [32mPASSED[0m[33m [ 67%][0m
test_function_transformer.py::test_function_transformer_feature_names_out_is_None [32mPASSED[0m[33m [ 68%][0m
test_function_transformer.py::test_function_transformer_feature_names_out_uses_estimator [33mSKIPPED[0m[33m [ 68%][0m
test_function_transformer.py::test_function_transformer_validate_inverse [32mPASSED[0m[33m [ 68%][0m
test_label.py::test_label_binarizer [32mPASSED[0m[33m                               [ 68%][0m
test_label.py::test_label_binarizer_unseen_labels [32mPASSED[0m[33m                 [ 68%][0m
test_label.py::test_label_binarizer_set_label_encoding [32mPASSED[0m[33m            [ 68%][0m
test_label.py::test_label_binarizer_errors [32mPASSED[0m[33m                        [ 68%][0m
test_label.py::test_label_encoder[int64] [32mPASSED[0m[33m                          [ 68%][0m
test_label.py::test_label_encoder[object] [32mPASSED[0m[33m                         [ 68%][0m
test_label.py::test_label_encoder[str] [32mPASSED[0m[33m                            [ 68%][0m
test_label.py::test_label_encoder_negative_ints [32mPASSED[0m[33m                   [ 69%][0m
test_label.py::test_label_encoder_str_bad_shape[str] [32mPASSED[0m[33m              [ 69%][0m
test_label.py::test_label_encoder_str_bad_shape[object] [32mPASSED[0m[33m           [ 69%][0m
test_label.py::test_label_encoder_errors [32mPASSED[0m[33m                          [ 69%][0m
test_label.py::test_label_encoder_empty_array[int64] [32mPASSED[0m[33m              [ 69%][0m
test_label.py::test_label_encoder_empty_array[object] [32mPASSED[0m[33m             [ 69%][0m
test_label.py::test_label_encoder_empty_array[str] [32mPASSED[0m[33m                [ 69%][0m
test_label.py::test_sparse_output_multilabel_binarizer [32mPASSED[0m[33m            [ 69%][0m
test_label.py::test_multilabel_binarizer [32mPASSED[0m[33m                          [ 69%][0m
test_label.py::test_multilabel_binarizer_empty_sample [32mPASSED[0m[33m             [ 69%][0m
test_label.py::test_multilabel_binarizer_unknown_class [32mPASSED[0m[33m            [ 70%][0m
test_label.py::test_multilabel_binarizer_given_classes [32mPASSED[0m[33m            [ 70%][0m
test_label.py::test_multilabel_binarizer_multiple_calls [32mPASSED[0m[33m           [ 70%][0m
test_label.py::test_multilabel_binarizer_same_length_sequence [32mPASSED[0m[33m     [ 70%][0m
test_label.py::test_multilabel_binarizer_non_integer_labels [32mPASSED[0m[33m       [ 70%][0m
test_label.py::test_multilabel_binarizer_non_unique [32mPASSED[0m[33m               [ 70%][0m
test_label.py::test_multilabel_binarizer_inverse_validation [32mPASSED[0m[33m       [ 70%][0m
test_label.py::test_label_binarize_with_class_order [32mPASSED[0m[33m               [ 70%][0m
test_label.py::test_label_binarize_binary [32mPASSED[0m[33m                         [ 70%][0m
test_label.py::test_label_binarize_multiclass [32mPASSED[0m[33m                     [ 70%][0m
test_label.py::test_label_binarize_multilabel [32mPASSED[0m[33m                     [ 70%][0m
test_label.py::test_invalid_input_label_binarize [32mPASSED[0m[33m                  [ 71%][0m
test_label.py::test_inverse_binarize_multiclass [32mPASSED[0m[33m                   [ 71%][0m
test_polynomial.py::test_polynomial_and_spline_array_order[PolynomialFeatures] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_polynomial_and_spline_array_order[SplineTransformer] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params0-degree must be a non-negative integer] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params1-degree must be a non-negative integer] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params2-degree must be a non-negative integer] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params3-n_knots must be a positive integer >= 2.] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params4-n_knots must be a positive integer >= 2.] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params5-n_knots must be a positive integer >= 2.] [32mPASSED[0m[33m [ 71%][0m
test_polynomial.py::test_spline_transformer_input_validation[params6-n_knots must be a positive integer >= 2.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params7-Expected 2D array, got scalar array instead:] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params8-Expected 2D array, got 1D array instead:] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params9-Number of knots, knots.shape\\[0\\], must be >= 2.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params10-knots.shape\\[1\\] == n_features is violated.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params11-knots must be sorted without duplicates.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params12-knots must be sorted without duplicates.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params13-extrapolation must be one of 'error', 'constant', 'linear', 'continue' or 'periodic'.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params14-extrapolation must be one of 'error', 'constant', 'linear', 'continue' or 'periodic'.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params15-extrapolation must be one of 'error', 'constant', 'linear', 'continue' or 'periodic'.] [32mPASSED[0m[33m [ 72%][0m
test_polynomial.py::test_spline_transformer_input_validation[params16-include_bias must be bool.] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_input_validation[params17-include_bias must be bool.] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_input_validation[params18-include_bias must be bool.] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_input_validation[params19-Periodic splines require degree < n_knots. Got n_knots=3 and degree=3.] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_input_validation[params20-Periodic splines require degree < n_knots. Got n_knots=2 and degree=2.] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_manual_knot_input [32mPASSED[0m[33m     [ 73%][0m
test_polynomial.py::test_spline_transformer_integer_knots[continue] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_integer_knots[periodic] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_feature_names[get_feature_names] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_feature_names[get_feature_names_out] [32mPASSED[0m[33m [ 73%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-3-1] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-3-2] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-3-3] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-3-4] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-4-1] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-4-2] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-4-3] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-uniform-4-4] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-3-1] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-3-2] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-3-3] [32mPASSED[0m[33m [ 74%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-3-4] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-4-1] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-4-2] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-4-3] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[constant-quantile-4-4] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-3-1] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-3-2] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-3-3] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-3-4] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-4-1] [32mPASSED[0m[33m [ 75%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-4-2] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-4-3] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-uniform-4-4] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-3-1] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-3-2] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-3-3] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-3-4] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-4-1] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-4-2] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-4-3] [32mPASSED[0m[33m [ 76%][0m
test_polynomial.py::test_spline_transformer_unity_decomposition[periodic-quantile-4-4] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_linear_regression[True-False] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_linear_regression[False-True] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_get_base_knot_positions[uniform-3-None-expected_knots0] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_get_base_knot_positions[uniform-3-sample_weight1-expected_knots1] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_get_base_knot_positions[uniform-4-None-expected_knots2] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_get_base_knot_positions[quantile-3-None-expected_knots3] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_get_base_knot_positions[quantile-3-sample_weight4-expected_knots4] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_periodicity_of_extrapolation[uniform-5-3] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_periodicity_of_extrapolation[uniform-12-8] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_periodicity_of_extrapolation[knots2-None-3] [32mPASSED[0m[33m [ 77%][0m
test_polynomial.py::test_spline_transformer_periodic_linear_regression[True-False] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_periodic_linear_regression[False-True] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_periodic_spline_backport [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_periodic_splines_periodicity [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_periodic_splines_smoothness[3] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_periodic_splines_smoothness[5] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_extrapolation[1-True-False] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_extrapolation[1-False-True] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_extrapolation[2-True-False] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_extrapolation[2-False-True] [32mPASSED[0m[33m [ 78%][0m
test_polynomial.py::test_spline_transformer_extrapolation[3-True-False] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_extrapolation[3-False-True] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_extrapolation[4-True-False] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_extrapolation[4-False-True] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_extrapolation[5-True-False] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_extrapolation[5-False-True] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_kbindiscretizer [32mPASSED[0m[33m       [ 79%][0m
test_polynomial.py::test_spline_transformer_n_features_out[3-True-5] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_n_features_out[3-True-10] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_n_features_out[3-False-5] [32mPASSED[0m[33m [ 79%][0m
test_polynomial.py::test_spline_transformer_n_features_out[3-False-10] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_spline_transformer_n_features_out[5-True-5] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_spline_transformer_n_features_out[5-True-10] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_spline_transformer_n_features_out[5-False-5] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_spline_transformer_n_features_out[5-False-10] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_polynomial_features_input_validation[params0-degree must be a non-negative integer] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_polynomial_features_input_validation[params1-degree must be a non-negative int or tuple] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_polynomial_features_input_validation[params2-degree=\\(min_degree, max_degree\\) must] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_polynomial_features_input_validation[params3-degree must be a non-negative int or tuple] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_polynomial_features_input_validation[params4-degree=\\(min_degree, max_degree\\) must] [32mPASSED[0m[33m [ 80%][0m
test_polynomial.py::test_polynomial_features_input_validation[params5-degree=\\(min_degree, max_degree\\) must] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_input_validation[params6-degree=\\(min_degree, max_degree\\) must] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-3-True-False-indices0] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-3-False-False-indices1] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-3-True-True-indices2] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-3-False-True-indices3] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-degree4-True-False-indices4] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-degree5-False-False-indices5] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-degree6-True-True-indices6] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[False-degree7-False-True-indices7] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-3-True-False-indices0] [32mPASSED[0m[33m [ 81%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-3-False-False-indices1] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-3-True-True-indices2] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-3-False-True-indices3] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-degree4-True-False-indices4] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-degree5-False-False-indices5] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-degree6-True-True-indices6] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csr_matrix-degree7-False-True-indices7] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-3-True-False-indices0] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-3-False-False-indices1] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-3-True-True-indices2] [32mPASSED[0m[33m [ 82%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-3-False-True-indices3] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-degree4-True-False-indices4] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-degree5-False-False-indices5] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-degree6-True-True-indices6] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_one_feature[csc_matrix-degree7-False-True-indices7] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_two_features[False-2-True-False-indices0] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_two_features[False-2-False-False-indices1] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_two_features[False-2-True-True-indices2] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_two_features[False-2-False-True-indices3] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree4-True-False-indices4] [32mPASSED[0m[33m [ 83%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree5-False-False-indices5] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree6-True-True-indices6] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree7-False-True-indices7] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-3-True-False-indices8] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-3-False-False-indices9] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-3-True-True-indices10] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-3-False-True-indices11] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree12-True-False-indices12] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree13-False-False-indices13] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree14-True-True-indices14] [32mPASSED[0m[33m [ 84%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree15-False-True-indices15] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree16-True-False-indices16] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree17-False-False-indices17] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree18-True-True-indices18] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[False-degree19-False-True-indices19] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-2-True-False-indices0] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-2-False-False-indices1] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-2-True-True-indices2] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-2-False-True-indices3] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree4-True-False-indices4] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree5-False-False-indices5] [32mPASSED[0m[33m [ 85%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree6-True-True-indices6] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree7-False-True-indices7] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-3-True-False-indices8] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-3-False-False-indices9] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-3-True-True-indices10] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-3-False-True-indices11] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree12-True-False-indices12] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree13-False-False-indices13] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree14-True-True-indices14] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree15-False-True-indices15] [32mPASSED[0m[33m [ 86%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree16-True-False-indices16] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree17-False-False-indices17] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree18-True-True-indices18] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csr_matrix-degree19-False-True-indices19] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-2-True-False-indices0] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-2-False-False-indices1] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-2-True-True-indices2] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-2-False-True-indices3] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree4-True-False-indices4] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree5-False-False-indices5] [32mPASSED[0m[33m [ 87%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree6-True-True-indices6] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree7-False-True-indices7] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-3-True-False-indices8] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-3-False-False-indices9] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-3-True-True-indices10] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-3-False-True-indices11] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree12-True-False-indices12] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree13-False-False-indices13] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree14-True-True-indices14] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree15-False-True-indices15] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree16-True-False-indices16] [32mPASSED[0m[33m [ 88%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree17-False-False-indices17] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree18-True-True-indices18] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_two_features[csc_matrix-degree19-False-True-indices19] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_feature_names[get_feature_names] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_feature_names[get_feature_names_out] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_csc_X[1-True-False-int] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_csc_X[2-True-False-int] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_csc_X[2-True-False-float32] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_csc_X[2-True-False-float64] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_csc_X[3-False-False-float64] [32mPASSED[0m[33m [ 89%][0m
test_polynomial.py::test_polynomial_features_csc_X[3-False-True-float64] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csc_X[4-False-False-float64] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csc_X[4-False-True-float64] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csr_X[1-True-False-int] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csr_X[2-True-False-int] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csr_X[2-True-False-float32] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csr_X[2-True-False-float64] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csr_X[3-False-False-float64] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_polynomial_features_csr_X[3-False-True-float64] [32mPASSED[0m[33m [ 90%][0m
test_polynomial.py::test_num_combinations[True-True-0-1-1] [32mPASSED[0m[33m        [ 90%][0m
test_polynomial.py::test_num_combinations[True-True-0-1-4] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-1-5] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-2-1] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-2-4] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-2-5] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-1-3-1] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-1-3-4] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-1-3-5] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-4-1] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-4-4] [32mPASSED[0m[33m        [ 91%][0m
test_polynomial.py::test_num_combinations[True-True-0-4-5] [32mPASSED[0m[33m        [ 92%][0m
test_polynomial.py::test_num_combinations[True-True-3-4-1] [32mPASSED[0m[33m        [ 92%][0m
test_polynomial.py::test_num_combinations[True-True-3-4-4] [32mPASSED[0m[33m        [ 92%][0m
test_polynomial.py::test_num_combinations[True-True-3-4-5] [32mPASSED[0m[33m        [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-0-1-1] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-0-1-4] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-0-1-5] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-0-2-1] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-0-2-4] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-0-2-5] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-1-3-1] [32mPASSED[0m[33m       [ 92%][0m
test_polynomial.py::test_num_combinations[True-False-1-3-4] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-1-3-5] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-0-4-1] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-0-4-4] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-0-4-5] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-3-4-1] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-3-4-4] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[True-False-3-4-5] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[False-True-0-1-1] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[False-True-0-1-4] [32mPASSED[0m[33m       [ 93%][0m
test_polynomial.py::test_num_combinations[False-True-0-1-5] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-0-2-1] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-0-2-4] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-0-2-5] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-1-3-1] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-1-3-4] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-1-3-5] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-0-4-1] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-0-4-4] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-0-4-5] [32mPASSED[0m[33m       [ 94%][0m
test_polynomial.py::test_num_combinations[False-True-3-4-1] [32mPASSED[0m[33m       [ 95%][0m
test_polynomial.py::test_num_combinations[False-True-3-4-4] [32mPASSED[0m[33m       [ 95%][0m
test_polynomial.py::test_num_combinations[False-True-3-4-5] [32mPASSED[0m[33m       [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-0-1-1] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-0-1-4] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-0-1-5] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-0-2-1] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-0-2-4] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-0-2-5] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-1-3-1] [32mPASSED[0m[33m      [ 95%][0m
test_polynomial.py::test_num_combinations[False-False-1-3-4] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-1-3-5] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-0-4-1] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-0-4-4] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-0-4-5] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-3-4-1] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-3-4-4] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_num_combinations[False-False-3-4-5] [32mPASSED[0m[33m      [ 96%][0m
test_polynomial.py::test_polynomial_features_csr_X_floats[2-True-False-float32] [32mPASSED[0m[33m [ 96%][0m
test_polynomial.py::test_polynomial_features_csr_X_floats[2-True-False-float64] [32mPASSED[0m[33m [ 96%][0m
test_polynomial.py::test_polynomial_features_csr_X_floats[3-False-False-float64] [32mPASSED[0m[33m [ 96%][0m
test_polynomial.py::test_polynomial_features_csr_X_floats[3-False-True-float64] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[0-2-True] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[1-2-True] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[2-2-True] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[0-3-True] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[1-3-True] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[2-3-True] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[0-2-False] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[1-2-False] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[2-2-False] [32mPASSED[0m[33m [ 97%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[0-3-False] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[1-3-False] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_zero_row[2-3-False] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_degree_4[True-True] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_degree_4[True-False] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_degree_4[False-True] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_degree_4[False-False] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[2-1-True] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[2-2-True] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[3-1-True] [32mPASSED[0m[33m [ 98%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[3-2-True] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[3-3-True] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[2-1-False] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[2-2-False] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[3-1-False] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[3-2-False] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_csr_X_dim_edges[3-3-False] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_deprecated_n_input_features [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_get_feature_names_deprecated[SplineTransformer] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_get_feature_names_deprecated[PolynomialFeatures] [32mPASSED[0m[33m [ 99%][0m
test_polynomial.py::test_polynomial_features_behaviour_on_zero_degree [32mPASSED[0m[33m [100%][0m

[33m=============================== warnings summary ===============================[0m
test_common.py::test_missing_value_handling[est0-maxabs_scale-True-False-omit_kwargs0]
test_common.py::test_missing_value_handling[est3-scale-True-False-omit_kwargs3]
test_common.py::test_missing_value_handling[est6-quantile_transform-True-False-omit_kwargs6]
test_common.py::test_missing_value_handling[est8-robust_scale-True-False-omit_kwargs8]
  /lib/python3.10/site-packages/scipy/sparse/_coo.py:427: SparseEfficiencyWarning: Constructing a DIA matrix with 115 diagonals is inefficient
    warn("Constructing a DIA matrix with %d diagonals "

test_data.py::test_quantile_transform_and_inverse
test_data.py::test_one_to_one_features[QuantileTransformer]
  /lib/python3.10/site-packages/sklearn/preprocessing/_data.py:2583: UserWarning: n_quantiles (1000) is greater than the total number of samples (150). n_quantiles is set to n_samples.
    warnings.warn(

test_data.py::test_quantile_transform_and_inverse
  /lib/python3.10/site-packages/sklearn/preprocessing/_data.py:2583: UserWarning: n_quantiles (1000) is greater than the total number of samples (7). n_quantiles is set to n_samples.
    warnings.warn(

test_data.py::test_quantile_transform_nan
  /lib/python3.10/site-packages/sklearn/preprocessing/_data.py:2583: UserWarning: n_quantiles (10) is greater than the total number of samples (3). n_quantiles is set to n_samples.
    warnings.warn(

test_data.py::test_quantile_transform_nan
  /lib/python3.10/site-packages/numpy/lib/nanfunctions.py:1560: RuntimeWarning: All-NaN slice encountered
    r, k = function_base._ureduce(a,

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
[33m================= [32m950 passed[0m, [33m[1m77 skipped[0m, [33m[1m9 warnings[0m[33m in 17.94s[0m[33m =================[0m
