(node:390877) ExperimentalWarning: Fetch is an experimental feature. This feature could change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
warning: no blob constructor, cannot create blobs with mimetypes
warning: no BlobBuilder
Loading distutils
Loaded distutils
Python initialization complete
(node:390877) ExperimentalWarning: buffer.Blob is an experimental feature. This feature could change at any time
distutils already loaded from default channel
Loading micropip, pyparsing, packaging
Loaded micropip, packaging, pyparsing
distutils already loaded from default channel
Loading scikit-learn, scipy, numpy, joblib, threadpoolctl, clapack
Loaded clapack, joblib, threadpoolctl, numpy, scikit-learn, scipy
distutils already loaded from default channel
pyparsing already loaded from default channel
Loading pytest, atomicwrites, attrs, six, more-itertools, pluggy, py, setuptools, iniconfig
Loaded pytest, atomicwrites, attrs, six, more-itertools, pluggy, py, iniconfig, setuptools
Loading tomli
Loaded tomli
pytest command: pytest.main("--pyargs sklearn.linear_model._glm.tests -v".split())
[1m============================= test session starts ==============================[0m
platform emscripten -- Python 3.10.2, pytest-7.1.2, pluggy-1.0.0 -- 
cachedir: .pytest_cache
rootdir: /home/pyodide
[1mcollecting ... [0m[1mcollecting 0 items                                                             [0m[1mcollected 139 items                                                            [0m

test_glm.py::test_sample_weights_validation [32mPASSED[0m[32m                       [  0%][0m
test_glm.py::test_glm_fit_intercept_argument[not bool] [32mPASSED[0m[32m            [  1%][0m
test_glm.py::test_glm_fit_intercept_argument[1] [32mPASSED[0m[32m                   [  2%][0m
test_glm.py::test_glm_fit_intercept_argument[0] [32mPASSED[0m[32m                   [  2%][0m
test_glm.py::test_glm_fit_intercept_argument[fit_intercept3] [32mPASSED[0m[32m      [  3%][0m
test_glm.py::test_glm_solver_argument[not a solver] [32mPASSED[0m[32m               [  4%][0m
test_glm.py::test_glm_solver_argument[1] [32mPASSED[0m[32m                          [  5%][0m
test_glm.py::test_glm_solver_argument[solver2] [32mPASSED[0m[32m                    [  5%][0m
test_glm.py::test_glm_scalar_argument[params0-ValueError-max_iter == 0, must be >= 1-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [  6%][0m
test_glm.py::test_glm_scalar_argument[params0-ValueError-max_iter == 0, must be >= 1-PoissonRegressor] [32mPASSED[0m[32m [  7%][0m
test_glm.py::test_glm_scalar_argument[params0-ValueError-max_iter == 0, must be >= 1-GammaRegressor] [32mPASSED[0m[32m [  7%][0m
test_glm.py::test_glm_scalar_argument[params0-ValueError-max_iter == 0, must be >= 1-TweedieRegressor] [32mPASSED[0m[32m [  8%][0m
test_glm.py::test_glm_scalar_argument[params1-ValueError-max_iter == -1, must be >= 1-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [  9%][0m
test_glm.py::test_glm_scalar_argument[params1-ValueError-max_iter == -1, must be >= 1-PoissonRegressor] [32mPASSED[0m[32m [ 10%][0m
test_glm.py::test_glm_scalar_argument[params1-ValueError-max_iter == -1, must be >= 1-GammaRegressor] [32mPASSED[0m[32m [ 10%][0m
test_glm.py::test_glm_scalar_argument[params1-ValueError-max_iter == -1, must be >= 1-TweedieRegressor] [32mPASSED[0m[32m [ 11%][0m
test_glm.py::test_glm_scalar_argument[params2-TypeError-max_iter must be an instance of int, not str-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 12%][0m
test_glm.py::test_glm_scalar_argument[params2-TypeError-max_iter must be an instance of int, not str-PoissonRegressor] [32mPASSED[0m[32m [ 12%][0m
test_glm.py::test_glm_scalar_argument[params2-TypeError-max_iter must be an instance of int, not str-GammaRegressor] [32mPASSED[0m[32m [ 13%][0m
test_glm.py::test_glm_scalar_argument[params2-TypeError-max_iter must be an instance of int, not str-TweedieRegressor] [32mPASSED[0m[32m [ 14%][0m
test_glm.py::test_glm_scalar_argument[params3-TypeError-max_iter must be an instance of int, not list-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 15%][0m
test_glm.py::test_glm_scalar_argument[params3-TypeError-max_iter must be an instance of int, not list-PoissonRegressor] [32mPASSED[0m[32m [ 15%][0m
test_glm.py::test_glm_scalar_argument[params3-TypeError-max_iter must be an instance of int, not list-GammaRegressor] [32mPASSED[0m[32m [ 16%][0m
test_glm.py::test_glm_scalar_argument[params3-TypeError-max_iter must be an instance of int, not list-TweedieRegressor] [32mPASSED[0m[32m [ 17%][0m
test_glm.py::test_glm_scalar_argument[params4-TypeError-max_iter must be an instance of int, not float-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 17%][0m
test_glm.py::test_glm_scalar_argument[params4-TypeError-max_iter must be an instance of int, not float-PoissonRegressor] [32mPASSED[0m[32m [ 18%][0m
test_glm.py::test_glm_scalar_argument[params4-TypeError-max_iter must be an instance of int, not float-GammaRegressor] [32mPASSED[0m[32m [ 19%][0m
test_glm.py::test_glm_scalar_argument[params4-TypeError-max_iter must be an instance of int, not float-TweedieRegressor] [32mPASSED[0m[32m [ 20%][0m
test_glm.py::test_glm_scalar_argument[params5-ValueError-alpha == -1, must be >= 0.0-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 20%][0m
test_glm.py::test_glm_scalar_argument[params5-ValueError-alpha == -1, must be >= 0.0-PoissonRegressor] [32mPASSED[0m[32m [ 21%][0m
test_glm.py::test_glm_scalar_argument[params5-ValueError-alpha == -1, must be >= 0.0-GammaRegressor] [32mPASSED[0m[32m [ 22%][0m
test_glm.py::test_glm_scalar_argument[params5-ValueError-alpha == -1, must be >= 0.0-TweedieRegressor] [32mPASSED[0m[32m [ 23%][0m
test_glm.py::test_glm_scalar_argument[params6-TypeError-alpha must be an instance of float, not str-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 23%][0m
test_glm.py::test_glm_scalar_argument[params6-TypeError-alpha must be an instance of float, not str-PoissonRegressor] [32mPASSED[0m[32m [ 24%][0m
test_glm.py::test_glm_scalar_argument[params6-TypeError-alpha must be an instance of float, not str-GammaRegressor] [32mPASSED[0m[32m [ 25%][0m
test_glm.py::test_glm_scalar_argument[params6-TypeError-alpha must be an instance of float, not str-TweedieRegressor] [32mPASSED[0m[32m [ 25%][0m
test_glm.py::test_glm_scalar_argument[params7-ValueError-tol == -1.0, must be > 0.-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 26%][0m
test_glm.py::test_glm_scalar_argument[params7-ValueError-tol == -1.0, must be > 0.-PoissonRegressor] [32mPASSED[0m[32m [ 27%][0m
test_glm.py::test_glm_scalar_argument[params7-ValueError-tol == -1.0, must be > 0.-GammaRegressor] [32mPASSED[0m[32m [ 28%][0m
test_glm.py::test_glm_scalar_argument[params7-ValueError-tol == -1.0, must be > 0.-TweedieRegressor] [32mPASSED[0m[32m [ 28%][0m
test_glm.py::test_glm_scalar_argument[params8-ValueError-tol == 0.0, must be > 0.0-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 29%][0m
test_glm.py::test_glm_scalar_argument[params8-ValueError-tol == 0.0, must be > 0.0-PoissonRegressor] [32mPASSED[0m[32m [ 30%][0m
test_glm.py::test_glm_scalar_argument[params8-ValueError-tol == 0.0, must be > 0.0-GammaRegressor] [32mPASSED[0m[32m [ 30%][0m
test_glm.py::test_glm_scalar_argument[params8-ValueError-tol == 0.0, must be > 0.0-TweedieRegressor] [32mPASSED[0m[32m [ 31%][0m
test_glm.py::test_glm_scalar_argument[params9-ValueError-tol == 0, must be > 0.0-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 32%][0m
test_glm.py::test_glm_scalar_argument[params9-ValueError-tol == 0, must be > 0.0-PoissonRegressor] [32mPASSED[0m[32m [ 33%][0m
test_glm.py::test_glm_scalar_argument[params9-ValueError-tol == 0, must be > 0.0-GammaRegressor] [32mPASSED[0m[32m [ 33%][0m
test_glm.py::test_glm_scalar_argument[params9-ValueError-tol == 0, must be > 0.0-TweedieRegressor] [32mPASSED[0m[32m [ 34%][0m
test_glm.py::test_glm_scalar_argument[params10-TypeError-tol must be an instance of float, not str-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 35%][0m
test_glm.py::test_glm_scalar_argument[params10-TypeError-tol must be an instance of float, not str-PoissonRegressor] [32mPASSED[0m[32m [ 35%][0m
test_glm.py::test_glm_scalar_argument[params10-TypeError-tol must be an instance of float, not str-GammaRegressor] [32mPASSED[0m[32m [ 36%][0m
test_glm.py::test_glm_scalar_argument[params10-TypeError-tol must be an instance of float, not str-TweedieRegressor] [32mPASSED[0m[32m [ 37%][0m
test_glm.py::test_glm_scalar_argument[params11-TypeError-tol must be an instance of float, not list-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 38%][0m
test_glm.py::test_glm_scalar_argument[params11-TypeError-tol must be an instance of float, not list-PoissonRegressor] [32mPASSED[0m[32m [ 38%][0m
test_glm.py::test_glm_scalar_argument[params11-TypeError-tol must be an instance of float, not list-GammaRegressor] [32mPASSED[0m[32m [ 39%][0m
test_glm.py::test_glm_scalar_argument[params11-TypeError-tol must be an instance of float, not list-TweedieRegressor] [32mPASSED[0m[32m [ 40%][0m
test_glm.py::test_glm_scalar_argument[params12-ValueError-verbose == -1, must be >= 0.-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 41%][0m
test_glm.py::test_glm_scalar_argument[params12-ValueError-verbose == -1, must be >= 0.-PoissonRegressor] [32mPASSED[0m[32m [ 41%][0m
test_glm.py::test_glm_scalar_argument[params12-ValueError-verbose == -1, must be >= 0.-GammaRegressor] [32mPASSED[0m[32m [ 42%][0m
test_glm.py::test_glm_scalar_argument[params12-ValueError-verbose == -1, must be >= 0.-TweedieRegressor] [32mPASSED[0m[32m [ 43%][0m
test_glm.py::test_glm_scalar_argument[params13-TypeError-verbose must be an instance of int, not str-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 43%][0m
test_glm.py::test_glm_scalar_argument[params13-TypeError-verbose must be an instance of int, not str-PoissonRegressor] [32mPASSED[0m[32m [ 44%][0m
test_glm.py::test_glm_scalar_argument[params13-TypeError-verbose must be an instance of int, not str-GammaRegressor] [32mPASSED[0m[32m [ 45%][0m
test_glm.py::test_glm_scalar_argument[params13-TypeError-verbose must be an instance of int, not str-TweedieRegressor] [32mPASSED[0m[32m [ 46%][0m
test_glm.py::test_glm_scalar_argument[params14-TypeError-verbose must be an instance of int, not float-_GeneralizedLinearRegressor] [32mPASSED[0m[32m [ 46%][0m
test_glm.py::test_glm_scalar_argument[params14-TypeError-verbose must be an instance of int, not float-PoissonRegressor] [32mPASSED[0m[32m [ 47%][0m
test_glm.py::test_glm_scalar_argument[params14-TypeError-verbose must be an instance of int, not float-GammaRegressor] [32mPASSED[0m[32m [ 48%][0m
test_glm.py::test_glm_scalar_argument[params14-TypeError-verbose must be an instance of int, not float-TweedieRegressor] [32mPASSED[0m[32m [ 48%][0m
test_glm.py::test_glm_warm_start_argument[not bool] [32mPASSED[0m[32m               [ 49%][0m
test_glm.py::test_glm_warm_start_argument[1] [32mPASSED[0m[32m                      [ 50%][0m
test_glm.py::test_glm_warm_start_argument[0] [32mPASSED[0m[32m                      [ 51%][0m
test_glm.py::test_glm_warm_start_argument[warm_start3] [32mPASSED[0m[32m            [ 51%][0m
test_glm.py::test_glm_wrong_y_range[glm0] [32mPASSED[0m[32m                         [ 52%][0m
test_glm.py::test_glm_wrong_y_range[glm1] [32mPASSED[0m[32m                         [ 53%][0m
test_glm.py::test_glm_wrong_y_range[glm2] [32mPASSED[0m[32m                         [ 53%][0m
test_glm.py::test_glm_wrong_y_range[glm3] [32mPASSED[0m[32m                         [ 54%][0m
test_glm.py::test_glm_identity_regression[False] [32mPASSED[0m[32m                  [ 55%][0m
test_glm.py::test_glm_identity_regression[True] [32mPASSED[0m[32m                   [ 56%][0m
test_glm.py::test_glm_sample_weight_consistency[_GeneralizedLinearRegressor-0.0-False] [32mPASSED[0m[32m [ 56%][0m
test_glm.py::test_glm_sample_weight_consistency[_GeneralizedLinearRegressor-0.0-True] [32mPASSED[0m[32m [ 57%][0m
test_glm.py::test_glm_sample_weight_consistency[_GeneralizedLinearRegressor-1.0-False] [32mPASSED[0m[32m [ 58%][0m
test_glm.py::test_glm_sample_weight_consistency[_GeneralizedLinearRegressor-1.0-True] [32mPASSED[0m[32m [ 58%][0m
test_glm.py::test_glm_sample_weight_consistency[PoissonRegressor-0.0-False] [32mPASSED[0m[32m [ 59%][0m
test_glm.py::test_glm_sample_weight_consistency[PoissonRegressor-0.0-True] [32mPASSED[0m[32m [ 60%][0m
test_glm.py::test_glm_sample_weight_consistency[PoissonRegressor-1.0-False] [32mPASSED[0m[32m [ 61%][0m
test_glm.py::test_glm_sample_weight_consistency[PoissonRegressor-1.0-True] [32mPASSED[0m[32m [ 61%][0m
test_glm.py::test_glm_sample_weight_consistency[GammaRegressor-0.0-False] [32mPASSED[0m[32m [ 62%][0m
test_glm.py::test_glm_sample_weight_consistency[GammaRegressor-0.0-True] [32mPASSED[0m[32m [ 63%][0m
test_glm.py::test_glm_sample_weight_consistency[GammaRegressor-1.0-False] [32mPASSED[0m[32m [ 64%][0m
test_glm.py::test_glm_sample_weight_consistency[GammaRegressor-1.0-True] [32mPASSED[0m[32m [ 64%][0m
test_glm.py::test_glm_log_regression[estimator0-True] [32mPASSED[0m[32m             [ 65%][0m
test_glm.py::test_glm_log_regression[estimator0-False] [32mPASSED[0m[32m            [ 66%][0m
test_glm.py::test_glm_log_regression[estimator1-True] [32mPASSED[0m[32m             [ 66%][0m
test_glm.py::test_glm_log_regression[estimator1-False] [32mPASSED[0m[32m            [ 67%][0m
test_glm.py::test_glm_log_regression[estimator2-True] [32mPASSED[0m[32m             [ 68%][0m
test_glm.py::test_glm_log_regression[estimator2-False] [32mPASSED[0m[32m            [ 69%][0m
test_glm.py::test_glm_log_regression[estimator3-True] [32mPASSED[0m[32m             [ 69%][0m
test_glm.py::test_glm_log_regression[estimator3-False] [32mPASSED[0m[32m            [ 70%][0m
test_glm.py::test_glm_log_regression[estimator4-True] [32mPASSED[0m[32m             [ 71%][0m
test_glm.py::test_glm_log_regression[estimator4-False] [32mPASSED[0m[32m            [ 71%][0m
test_glm.py::test_glm_log_regression[estimator5-True] [32mPASSED[0m[32m             [ 72%][0m
test_glm.py::test_glm_log_regression[estimator5-False] [32mPASSED[0m[32m            [ 73%][0m
test_glm.py::test_warm_start[True] [32mPASSED[0m[32m                                [ 74%][0m
test_glm.py::test_warm_start[False] [32mPASSED[0m[32m                               [ 74%][0m
test_glm.py::test_normal_ridge_comparison[None-True-100-10] [32mPASSED[0m[32m       [ 75%][0m
test_glm.py::test_normal_ridge_comparison[None-True-10-100] [32mPASSED[0m[32m       [ 76%][0m
test_glm.py::test_normal_ridge_comparison[None-False-100-10] [32mPASSED[0m[32m      [ 76%][0m
test_glm.py::test_normal_ridge_comparison[None-False-10-100] [32mPASSED[0m[32m      [ 77%][0m
test_glm.py::test_normal_ridge_comparison[True-True-100-10] [32mPASSED[0m[32m       [ 78%][0m
test_glm.py::test_normal_ridge_comparison[True-True-10-100] [32mPASSED[0m[32m       [ 79%][0m
test_glm.py::test_normal_ridge_comparison[True-False-100-10] [32mPASSED[0m[32m      [ 79%][0m
test_glm.py::test_normal_ridge_comparison[True-False-10-100] [32mPASSED[0m[32m      [ 80%][0m
test_glm.py::test_poisson_glmnet [32mPASSED[0m[32m                                  [ 81%][0m
test_glm.py::test_convergence_warning [32mPASSED[0m[32m                             [ 82%][0m
test_glm.py::test_tweedie_link_argument[identity-IdentityLink] [32mPASSED[0m[32m    [ 82%][0m
test_glm.py::test_tweedie_link_argument[log-LogLink] [32mPASSED[0m[32m              [ 83%][0m
test_glm.py::test_tweedie_link_auto[0-IdentityLink] [32mPASSED[0m[32m               [ 84%][0m
test_glm.py::test_tweedie_link_auto[1-LogLink] [32mPASSED[0m[32m                    [ 84%][0m
test_glm.py::test_tweedie_link_auto[2-LogLink] [32mPASSED[0m[32m                    [ 85%][0m
test_glm.py::test_tweedie_link_auto[3-LogLink] [32mPASSED[0m[32m                    [ 86%][0m
test_glm.py::test_tweedie_score[log-0] [32mPASSED[0m[32m                            [ 87%][0m
test_glm.py::test_tweedie_score[log-1] [32mPASSED[0m[32m                            [ 87%][0m
test_glm.py::test_tweedie_score[log-1.5] [32mPASSED[0m[32m                          [ 88%][0m
test_glm.py::test_tweedie_score[log-2] [32mPASSED[0m[32m                            [ 89%][0m
test_glm.py::test_tweedie_score[log-3] [32mPASSED[0m[32m                            [ 89%][0m
test_glm.py::test_tweedie_score[identity-0] [32mPASSED[0m[32m                       [ 90%][0m
test_glm.py::test_tweedie_score[identity-1] [32mPASSED[0m[32m                       [ 91%][0m
test_glm.py::test_tweedie_score[identity-1.5] [32mPASSED[0m[32m                     [ 92%][0m
test_glm.py::test_tweedie_score[identity-2] [32mPASSED[0m[32m                       [ 92%][0m
test_glm.py::test_tweedie_score[identity-3] [32mPASSED[0m[32m                       [ 93%][0m
test_glm.py::test_tags[estimator0-True] [32mPASSED[0m[32m                           [ 94%][0m
test_glm.py::test_tags[estimator1-True] [32mPASSED[0m[32m                           [ 94%][0m
test_glm.py::test_tags[estimator2-True] [32mPASSED[0m[32m                           [ 95%][0m
test_glm.py::test_tags[estimator3-False] [32mPASSED[0m[32m                          [ 96%][0m
test_glm.py::test_family_deprecation[est0-poisson] [32mPASSED[0m[32m                [ 97%][0m
test_glm.py::test_family_deprecation[est1-gamma] [32mPASSED[0m[32m                  [ 97%][0m
test_glm.py::test_family_deprecation[est2-family2] [32mPASSED[0m[32m                [ 98%][0m
test_glm.py::test_family_deprecation[est3-family3] [32mPASSED[0m[32m                [ 99%][0m
test_glm.py::test_family_deprecation[est4-family4] [32mPASSED[0m[32m                [100%][0m

[32m============================= [32m[1m139 passed[0m[32m in 2.50s[0m[32m ==============================[0m
