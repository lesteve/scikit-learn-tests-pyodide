(node:412477) ExperimentalWarning: Fetch is an experimental feature. This feature could change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
warning: no blob constructor, cannot create blobs with mimetypes
warning: no BlobBuilder
Loading distutils
Loaded distutils
Python initialization complete
(node:412477) ExperimentalWarning: buffer.Blob is an experimental feature. This feature could change at any time
distutils already loaded from default channel
Loading micropip, pyparsing, packaging
Loaded micropip, pyparsing, packaging
distutils already loaded from default channel
Loading scikit-learn, scipy, numpy, joblib, threadpoolctl, clapack
Loaded clapack, joblib, threadpoolctl, numpy, scikit-learn, scipy
distutils already loaded from default channel
pyparsing already loaded from default channel
Loading pytest, atomicwrites, attrs, six, more-itertools, pluggy, py, setuptools, iniconfig
Loaded atomicwrites, pytest, attrs, six, more-itertools, pluggy, py, iniconfig, setuptools
Loading tomli
Loaded tomli
pytest command: pytest.main("--pyargs sklearn.neighbors.tests -v".split())
[1m============================= test session starts ==============================[0m
platform emscripten -- Python 3.10.2, pytest-7.1.2, pluggy-1.0.0 -- 
cachedir: .pytest_cache
rootdir: /home/pyodide
[1mcollecting ... [0m[1mcollecting 0 items                                                             [0m[1mcollecting 345 items                                                           [0m[1mcollecting 1143 items                                                          [0m[1mcollected 1607 items                                                           [0m

test_ball_tree.py::test_ball_tree_query_metrics[list-matching] [32mPASSED[0m[32m    [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-jaccard] [32mPASSED[0m[32m     [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-dice] [32mPASSED[0m[32m        [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-kulsinski] [32mPASSED[0m[32m   [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-rogerstanimoto] [32mPASSED[0m[32m [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-russellrao] [32mPASSED[0m[32m  [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-sokalmichener] [32mPASSED[0m[32m [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-sokalsneath] [32mPASSED[0m[32m [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-hamming] [32mPASSED[0m[32m     [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-canberra] [32mPASSED[0m[32m    [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[list-braycurtis] [32mPASSED[0m[32m  [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-matching] [32mPASSED[0m[32m   [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-jaccard] [32mPASSED[0m[32m    [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-dice] [32mPASSED[0m[32m       [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-kulsinski] [32mPASSED[0m[32m  [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-rogerstanimoto] [32mPASSED[0m[32m [  0%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-russellrao] [32mPASSED[0m[32m [  1%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-sokalmichener] [32mPASSED[0m[32m [  1%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-sokalsneath] [32mPASSED[0m[32m [  1%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-hamming] [32mPASSED[0m[32m    [  1%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-canberra] [32mPASSED[0m[32m   [  1%][0m
test_ball_tree.py::test_ball_tree_query_metrics[array-braycurtis] [32mPASSED[0m[32m [  1%][0m
test_ball_tree.py::test_query_haversine [32mPASSED[0m[32m                           [  1%][0m
test_ball_tree.py::test_array_object_type [32mPASSED[0m[32m                         [  1%][0m
test_ball_tree.py::test_bad_pyfunc_metric [32mPASSED[0m[32m                         [  1%][0m
test_graph.py::test_transformer_result [32mPASSED[0m[32m                            [  1%][0m
test_graph.py::test_explicit_diagonal [32mPASSED[0m[32m                             [  1%][0m
test_graph.py::test_graph_feature_names_out[KNeighborsTransformer] [32mPASSED[0m[32m [  1%][0m
test_graph.py::test_graph_feature_names_out[RadiusNeighborsTransformer] [32mPASSED[0m[32m [  1%][0m
test_kd_tree.py::test_array_object_type [32mPASSED[0m[32m                           [  1%][0m
test_kd_tree.py::test_kdtree_picklable_with_joblib [32mPASSED[0m[32m                [  1%][0m
test_kde.py::test_kernel_density[0.01-gaussian] [32mPASSED[0m[32m                   [  1%][0m
test_kde.py::test_kernel_density[0.01-tophat] [32mPASSED[0m[32m                     [  2%][0m
test_kde.py::test_kernel_density[0.01-epanechnikov] [32mPASSED[0m[32m               [  2%][0m
test_kde.py::test_kernel_density[0.01-exponential] [32mPASSED[0m[32m                [  2%][0m
test_kde.py::test_kernel_density[0.01-linear] [32mPASSED[0m[32m                     [  2%][0m
test_kde.py::test_kernel_density[0.01-cosine] [32mPASSED[0m[32m                     [  2%][0m
test_kde.py::test_kernel_density[0.1-gaussian] [32mPASSED[0m[32m                    [  2%][0m
test_kde.py::test_kernel_density[0.1-tophat] [32mPASSED[0m[32m                      [  2%][0m
test_kde.py::test_kernel_density[0.1-epanechnikov] [32mPASSED[0m[32m                [  2%][0m
test_kde.py::test_kernel_density[0.1-exponential] [32mPASSED[0m[32m                 [  2%][0m
test_kde.py::test_kernel_density[0.1-linear] [32mPASSED[0m[32m                      [  2%][0m
test_kde.py::test_kernel_density[0.1-cosine] [32mPASSED[0m[32m                      [  2%][0m
test_kde.py::test_kernel_density[1-gaussian] [32mPASSED[0m[32m                      [  2%][0m
test_kde.py::test_kernel_density[1-tophat] [32mPASSED[0m[32m                        [  2%][0m
test_kde.py::test_kernel_density[1-epanechnikov] [32mPASSED[0m[32m                  [  2%][0m
test_kde.py::test_kernel_density[1-exponential] [32mPASSED[0m[32m                   [  2%][0m
test_kde.py::test_kernel_density[1-linear] [32mPASSED[0m[32m                        [  2%][0m
test_kde.py::test_kernel_density[1-cosine] [32mPASSED[0m[32m                        [  3%][0m
test_kde.py::test_kernel_density_sampling [32mPASSED[0m[32m                         [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[euclidean-auto] [32mPASSED[0m[32m     [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[euclidean-ball_tree] [32mPASSED[0m[32m [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[euclidean-kd_tree] [32mPASSED[0m[32m  [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[minkowski-auto] [32mPASSED[0m[32m     [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[minkowski-ball_tree] [32mPASSED[0m[32m [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[minkowski-kd_tree] [32mPASSED[0m[32m  [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[manhattan-auto] [32mPASSED[0m[32m     [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[manhattan-ball_tree] [32mPASSED[0m[32m [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[manhattan-kd_tree] [32mPASSED[0m[32m  [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[chebyshev-auto] [32mPASSED[0m[32m     [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[chebyshev-ball_tree] [32mPASSED[0m[32m [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[chebyshev-kd_tree] [32mPASSED[0m[32m  [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[haversine-auto] [32mPASSED[0m[32m     [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[haversine-ball_tree] [32mPASSED[0m[32m [  3%][0m
test_kde.py::test_kde_algorithm_metric_choice[haversine-kd_tree] [32mPASSED[0m[32m  [  4%][0m
test_kde.py::test_kde_score [32mPASSED[0m[32m                                       [  4%][0m
test_kde.py::test_kde_badargs [32mPASSED[0m[32m                                     [  4%][0m
test_kde.py::test_kde_pipeline_gridsearch [32mPASSED[0m[32m                         [  4%][0m
test_kde.py::test_kde_sample_weights [32mPASSED[0m[32m                              [  4%][0m
test_kde.py::test_sample_weight_invalid [32mPASSED[0m[32m                           [  4%][0m
test_kde.py::test_pickling[None] [32mPASSED[0m[32m                                  [  4%][0m
test_kde.py::test_pickling[sample_weight1] [32mPASSED[0m[32m                        [  4%][0m
test_kde.py::test_check_is_fitted[score_samples] [32mPASSED[0m[32m                  [  4%][0m
test_kde.py::test_check_is_fitted[sample] [32mPASSED[0m[32m                         [  4%][0m
test_lof.py::test_lof [32mPASSED[0m[32m                                             [  4%][0m
test_lof.py::test_lof_performance [32mPASSED[0m[32m                                 [  4%][0m
test_lof.py::test_lof_values [32mPASSED[0m[32m                                      [  4%][0m
test_lof.py::test_lof_precomputed [32mPASSED[0m[32m                                 [  4%][0m
test_lof.py::test_n_neighbors_attribute [32mPASSED[0m[32m                           [  4%][0m
test_lof.py::test_score_samples [32mPASSED[0m[33m                                   [  4%][0m
test_lof.py::test_contamination [32mPASSED[0m[33m                                   [  5%][0m
test_lof.py::test_novelty_errors [32mPASSED[0m[33m                                  [  5%][0m
test_lof.py::test_novelty_training_scores [32mPASSED[0m[33m                         [  5%][0m
test_lof.py::test_hasattr_prediction [32mPASSED[0m[33m                              [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_no_attributes_set_in_init] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_dtypes] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit_score_takes_y] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_fit_returns_self] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_fit_returns_self(readonly_memmap=True)] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_complex_data] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_dtype_object] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_empty_data_messages] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_pipeline_consistency] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_nan_inf] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_overwrite_params] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimator_sparse_data] [32mPASSED[0m[33m [  5%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_pickle] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimator_get_tags_default_keys] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_outliers_train] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_outliers_train(readonly_memmap=True)] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_classifier_data_not_an_array] [33mSKIPPED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_unfitted] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_non_transformer_estimators_n_iter] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_parameters_default_constructible] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_methods_sample_order_invariance] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_methods_subset_invariance] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit2d_1sample] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit2d_1feature] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_get_params_invariance] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_set_params] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_dict_unchanged] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_dont_overwrite_parameters] [32mPASSED[0m[33m [  6%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit_idempotent] [32mPASSED[0m[33m [  7%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit_check_is_fitted] [32mPASSED[0m[33m [  7%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_n_features_in] [32mPASSED[0m[33m [  7%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit1d] [32mPASSED[0m[33m [  7%][0m
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_fit2d_predict1d] [32mPASSED[0m[33m [  7%][0m
test_lof.py::test_predicted_outlier_number[30] [32mPASSED[0m[33m                    [  7%][0m
test_lof.py::test_predicted_outlier_number[53] [32mPASSED[0m[33m                    [  7%][0m
test_nca.py::test_simple_example [32mPASSED[0m[33m                                  [  7%][0m
test_nca.py::test_toy_example_collapse_points [32mPASSED[0m[33m                     [  7%][0m
test_nca.py::test_finite_differences [32mPASSED[0m[33m                              [  7%][0m
test_nca.py::test_params_validation [32mPASSED[0m[33m                               [  7%][0m
test_nca.py::test_transformation_dimensions [32mPASSED[0m[33m                       [  7%][0m
test_nca.py::test_n_components [32mPASSED[0m[33m                                    [  7%][0m
test_nca.py::test_init_transformation [32mPASSED[0m[33m                             [  7%][0m
test_nca.py::test_auto_init[3-5-3-3] [32mPASSED[0m[33m                              [  7%][0m
test_nca.py::test_auto_init[3-5-3-5] [32mPASSED[0m[33m                              [  7%][0m
test_nca.py::test_auto_init[3-5-3-7] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-3-11] [32mPASSED[0m[33m                             [  8%][0m
test_nca.py::test_auto_init[3-5-5-3] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-5-5] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-5-7] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-5-11] [32mPASSED[0m[33m                             [  8%][0m
test_nca.py::test_auto_init[3-5-7-3] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-7-5] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-7-7] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-5-7-11] [32mPASSED[0m[33m                             [  8%][0m
test_nca.py::test_auto_init[3-5-11-3] [32mPASSED[0m[33m                             [  8%][0m
test_nca.py::test_auto_init[3-5-11-5] [32mPASSED[0m[33m                             [  8%][0m
test_nca.py::test_auto_init[3-5-11-7] [32mPASSED[0m[33m                             [  8%][0m
test_nca.py::test_auto_init[3-5-11-11] [32mPASSED[0m[33m                            [  8%][0m
test_nca.py::test_auto_init[3-7-3-3] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-7-3-5] [32mPASSED[0m[33m                              [  8%][0m
test_nca.py::test_auto_init[3-7-3-7] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-3-11] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-7-5-3] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-5-5] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-5-7] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-5-11] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-7-7-3] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-7-5] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-7-7] [32mPASSED[0m[33m                              [  9%][0m
test_nca.py::test_auto_init[3-7-7-11] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-7-11-3] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-7-11-5] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-7-11-7] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-7-11-11] [32mPASSED[0m[33m                            [  9%][0m
test_nca.py::test_auto_init[3-11-3-3] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-11-3-5] [32mPASSED[0m[33m                             [  9%][0m
test_nca.py::test_auto_init[3-11-3-7] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-3-11] [32mPASSED[0m[33m                            [ 10%][0m
test_nca.py::test_auto_init[3-11-5-3] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-5-5] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-5-7] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-5-11] [32mPASSED[0m[33m                            [ 10%][0m
test_nca.py::test_auto_init[3-11-7-3] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-7-5] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-7-7] [32mPASSED[0m[33m                             [ 10%][0m
test_nca.py::test_auto_init[3-11-7-11] [32mPASSED[0m[33m                            [ 10%][0m
test_nca.py::test_auto_init[3-11-11-3] [32mPASSED[0m[33m                            [ 10%][0m
test_nca.py::test_auto_init[3-11-11-5] [32mPASSED[0m[33m                            [ 10%][0m
test_nca.py::test_auto_init[3-11-11-7] [32mPASSED[0m[33m                            [ 10%][0m
test_nca.py::test_auto_init[3-11-11-11] [32mPASSED[0m[33m                           [ 10%][0m
test_nca.py::test_auto_init[5-5-3-3] [32mPASSED[0m[33m                              [ 10%][0m
test_nca.py::test_auto_init[5-5-3-5] [32mPASSED[0m[33m                              [ 10%][0m
test_nca.py::test_auto_init[5-5-3-7] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-3-11] [32mPASSED[0m[33m                             [ 11%][0m
test_nca.py::test_auto_init[5-5-5-3] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-5-5] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-5-7] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-5-11] [32mPASSED[0m[33m                             [ 11%][0m
test_nca.py::test_auto_init[5-5-7-3] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-7-5] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-7-7] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-5-7-11] [32mPASSED[0m[33m                             [ 11%][0m
test_nca.py::test_auto_init[5-5-11-3] [32mPASSED[0m[33m                             [ 11%][0m
test_nca.py::test_auto_init[5-5-11-5] [32mPASSED[0m[33m                             [ 11%][0m
test_nca.py::test_auto_init[5-5-11-7] [32mPASSED[0m[33m                             [ 11%][0m
test_nca.py::test_auto_init[5-5-11-11] [32mPASSED[0m[33m                            [ 11%][0m
test_nca.py::test_auto_init[5-7-3-3] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-7-3-5] [32mPASSED[0m[33m                              [ 11%][0m
test_nca.py::test_auto_init[5-7-3-7] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-3-11] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-7-5-3] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-5-5] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-5-7] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-5-11] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-7-7-3] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-7-5] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-7-7] [32mPASSED[0m[33m                              [ 12%][0m
test_nca.py::test_auto_init[5-7-7-11] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-7-11-3] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-7-11-5] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-7-11-7] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-7-11-11] [32mPASSED[0m[33m                            [ 12%][0m
test_nca.py::test_auto_init[5-11-3-3] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-11-3-5] [32mPASSED[0m[33m                             [ 12%][0m
test_nca.py::test_auto_init[5-11-3-7] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-3-11] [32mPASSED[0m[33m                            [ 13%][0m
test_nca.py::test_auto_init[5-11-5-3] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-5-5] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-5-7] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-5-11] [32mPASSED[0m[33m                            [ 13%][0m
test_nca.py::test_auto_init[5-11-7-3] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-7-5] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-7-7] [32mPASSED[0m[33m                             [ 13%][0m
test_nca.py::test_auto_init[5-11-7-11] [32mPASSED[0m[33m                            [ 13%][0m
test_nca.py::test_auto_init[5-11-11-3] [32mPASSED[0m[33m                            [ 13%][0m
test_nca.py::test_auto_init[5-11-11-5] [32mPASSED[0m[33m                            [ 13%][0m
test_nca.py::test_auto_init[5-11-11-7] [32mPASSED[0m[33m                            [ 13%][0m
test_nca.py::test_auto_init[5-11-11-11] [32mPASSED[0m[33m                           [ 13%][0m
test_nca.py::test_auto_init[7-5-3-3] [32mPASSED[0m[33m                              [ 13%][0m
test_nca.py::test_auto_init[7-5-3-5] [32mPASSED[0m[33m                              [ 13%][0m
test_nca.py::test_auto_init[7-5-3-7] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-3-11] [32mPASSED[0m[33m                             [ 14%][0m
test_nca.py::test_auto_init[7-5-5-3] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-5-5] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-5-7] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-5-11] [32mPASSED[0m[33m                             [ 14%][0m
test_nca.py::test_auto_init[7-5-7-3] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-7-5] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-7-7] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-5-7-11] [32mPASSED[0m[33m                             [ 14%][0m
test_nca.py::test_auto_init[7-5-11-3] [32mPASSED[0m[33m                             [ 14%][0m
test_nca.py::test_auto_init[7-5-11-5] [32mPASSED[0m[33m                             [ 14%][0m
test_nca.py::test_auto_init[7-5-11-7] [32mPASSED[0m[33m                             [ 14%][0m
test_nca.py::test_auto_init[7-5-11-11] [32mPASSED[0m[33m                            [ 14%][0m
test_nca.py::test_auto_init[7-7-3-3] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-7-3-5] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-7-3-7] [32mPASSED[0m[33m                              [ 14%][0m
test_nca.py::test_auto_init[7-7-3-11] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-7-5-3] [32mPASSED[0m[33m                              [ 15%][0m
test_nca.py::test_auto_init[7-7-5-5] [32mPASSED[0m[33m                              [ 15%][0m
test_nca.py::test_auto_init[7-7-5-7] [32mPASSED[0m[33m                              [ 15%][0m
test_nca.py::test_auto_init[7-7-5-11] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-7-7-3] [32mPASSED[0m[33m                              [ 15%][0m
test_nca.py::test_auto_init[7-7-7-5] [32mPASSED[0m[33m                              [ 15%][0m
test_nca.py::test_auto_init[7-7-7-7] [32mPASSED[0m[33m                              [ 15%][0m
test_nca.py::test_auto_init[7-7-7-11] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-7-11-3] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-7-11-5] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-7-11-7] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-7-11-11] [32mPASSED[0m[33m                            [ 15%][0m
test_nca.py::test_auto_init[7-11-3-3] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-11-3-5] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-11-3-7] [32mPASSED[0m[33m                             [ 15%][0m
test_nca.py::test_auto_init[7-11-3-11] [32mPASSED[0m[33m                            [ 16%][0m
test_nca.py::test_auto_init[7-11-5-3] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[7-11-5-5] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[7-11-5-7] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[7-11-5-11] [32mPASSED[0m[33m                            [ 16%][0m
test_nca.py::test_auto_init[7-11-7-3] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[7-11-7-5] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[7-11-7-7] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[7-11-7-11] [32mPASSED[0m[33m                            [ 16%][0m
test_nca.py::test_auto_init[7-11-11-3] [32mPASSED[0m[33m                            [ 16%][0m
test_nca.py::test_auto_init[7-11-11-5] [32mPASSED[0m[33m                            [ 16%][0m
test_nca.py::test_auto_init[7-11-11-7] [32mPASSED[0m[33m                            [ 16%][0m
test_nca.py::test_auto_init[7-11-11-11] [32mPASSED[0m[33m                           [ 16%][0m
test_nca.py::test_auto_init[11-5-3-3] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[11-5-3-5] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[11-5-3-7] [32mPASSED[0m[33m                             [ 16%][0m
test_nca.py::test_auto_init[11-5-3-11] [32mPASSED[0m[33m                            [ 17%][0m
test_nca.py::test_auto_init[11-5-5-3] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-5-5-5] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-5-5-7] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-5-5-11] [32mPASSED[0m[33m                            [ 17%][0m
test_nca.py::test_auto_init[11-5-7-3] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-5-7-5] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-5-7-7] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-5-7-11] [32mPASSED[0m[33m                            [ 17%][0m
test_nca.py::test_auto_init[11-5-11-3] [32mPASSED[0m[33m                            [ 17%][0m
test_nca.py::test_auto_init[11-5-11-5] [32mPASSED[0m[33m                            [ 17%][0m
test_nca.py::test_auto_init[11-5-11-7] [32mPASSED[0m[33m                            [ 17%][0m
test_nca.py::test_auto_init[11-5-11-11] [32mPASSED[0m[33m                           [ 17%][0m
test_nca.py::test_auto_init[11-7-3-3] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-7-3-5] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-7-3-7] [32mPASSED[0m[33m                             [ 17%][0m
test_nca.py::test_auto_init[11-7-3-11] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-7-5-3] [32mPASSED[0m[33m                             [ 18%][0m
test_nca.py::test_auto_init[11-7-5-5] [32mPASSED[0m[33m                             [ 18%][0m
test_nca.py::test_auto_init[11-7-5-7] [32mPASSED[0m[33m                             [ 18%][0m
test_nca.py::test_auto_init[11-7-5-11] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-7-7-3] [32mPASSED[0m[33m                             [ 18%][0m
test_nca.py::test_auto_init[11-7-7-5] [32mPASSED[0m[33m                             [ 18%][0m
test_nca.py::test_auto_init[11-7-7-7] [32mPASSED[0m[33m                             [ 18%][0m
test_nca.py::test_auto_init[11-7-7-11] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-7-11-3] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-7-11-5] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-7-11-7] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-7-11-11] [32mPASSED[0m[33m                           [ 18%][0m
test_nca.py::test_auto_init[11-11-3-3] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-11-3-5] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-11-3-7] [32mPASSED[0m[33m                            [ 18%][0m
test_nca.py::test_auto_init[11-11-3-11] [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_auto_init[11-11-5-3] [32mPASSED[0m[33m                            [ 19%][0m
test_nca.py::test_auto_init[11-11-5-5] [32mPASSED[0m[33m                            [ 19%][0m
test_nca.py::test_auto_init[11-11-5-7] [32mPASSED[0m[33m                            [ 19%][0m
test_nca.py::test_auto_init[11-11-5-11] [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_auto_init[11-11-7-3] [32mPASSED[0m[33m                            [ 19%][0m
test_nca.py::test_auto_init[11-11-7-5] [32mPASSED[0m[33m                            [ 19%][0m
test_nca.py::test_auto_init[11-11-7-7] [32mPASSED[0m[33m                            [ 19%][0m
test_nca.py::test_auto_init[11-11-7-11] [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_auto_init[11-11-11-3] [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_auto_init[11-11-11-5] [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_auto_init[11-11-11-7] [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_auto_init[11-11-11-11] [32mPASSED[0m[33m                          [ 19%][0m
test_nca.py::test_warm_start_validation [32mPASSED[0m[33m                           [ 19%][0m
test_nca.py::test_warm_start_effectiveness [32mPASSED[0m[33m                        [ 19%][0m
test_nca.py::test_verbose[pca] [32mPASSED[0m[33m                                    [ 19%][0m
test_nca.py::test_verbose[lda] [32mPASSED[0m[33m                                    [ 20%][0m
test_nca.py::test_verbose[identity] [32mPASSED[0m[33m                               [ 20%][0m
test_nca.py::test_verbose[random] [32mPASSED[0m[33m                                 [ 20%][0m
test_nca.py::test_verbose[precomputed] [32mPASSED[0m[33m                            [ 20%][0m
test_nca.py::test_no_verbose [32mPASSED[0m[33m                                      [ 20%][0m
test_nca.py::test_singleton_class [32mPASSED[0m[33m                                 [ 20%][0m
test_nca.py::test_one_class [32mPASSED[0m[33m                                       [ 20%][0m
test_nca.py::test_callback [32mPASSED[0m[33m                                        [ 20%][0m
test_nca.py::test_expected_transformation_shape [32mPASSED[0m[33m                   [ 20%][0m
test_nca.py::test_convergence_warning [32mPASSED[0m[33m                             [ 20%][0m
test_nca.py::test_parameters_valid_types[n_components-value0] [32mPASSED[0m[33m     [ 20%][0m
test_nca.py::test_parameters_valid_types[max_iter-value1] [32mPASSED[0m[33m         [ 20%][0m
test_nca.py::test_parameters_valid_types[tol-value2] [32mPASSED[0m[33m              [ 20%][0m
test_nca.py::test_nca_feature_names_out [32mPASSED[0m[33m                           [ 20%][0m
test_nearest_centroid.py::test_classification_toy [32mPASSED[0m[33m                 [ 20%][0m
test_nearest_centroid.py::test_precomputed [32mPASSED[0m[33m                        [ 20%][0m
test_nearest_centroid.py::test_iris [32mPASSED[0m[33m                               [ 21%][0m
test_nearest_centroid.py::test_iris_shrinkage [32mPASSED[0m[33m                     [ 21%][0m
test_nearest_centroid.py::test_pickle [32mPASSED[0m[33m                             [ 21%][0m
test_nearest_centroid.py::test_shrinkage_correct [32mPASSED[0m[33m                  [ 21%][0m
test_nearest_centroid.py::test_shrinkage_threshold_decoded_y [32mPASSED[0m[33m      [ 21%][0m
test_nearest_centroid.py::test_predict_translated_data [32mPASSED[0m[33m            [ 21%][0m
test_nearest_centroid.py::test_manhattan_metric [32mPASSED[0m[33m                   [ 21%][0m
test_nearest_centroid.py::test_features_zero_var [32mPASSED[0m[33m                  [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-chebyshev-False-100-100-10-100] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-chebyshev-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-chebyshev-True-100-100-10-100] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-chebyshev-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-cityblock-False-100-100-10-100] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-cityblock-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-cityblock-True-100-100-10-100] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-cityblock-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 21%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-euclidean-False-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-euclidean-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-euclidean-True-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-euclidean-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l1-False-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l1-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l1-True-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l1-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l2-False-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l2-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l2-True-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-l2-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-manhattan-False-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-manhattan-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-manhattan-True-100-100-10-100] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-manhattan-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 22%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-minkowski-False-100-100-10-100] [33mSKIPPED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-minkowski-False-1000-5-100-1] [33mSKIPPED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-minkowski-True-100-100-10-100] [33mSKIPPED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float32-minkowski-True-1000-5-100-1] [33mSKIPPED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-chebyshev-False-100-100-10-100] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-chebyshev-False-1000-5-100-1] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-chebyshev-True-100-100-10-100] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-chebyshev-True-1000-5-100-1] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-cityblock-False-100-100-10-100] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-cityblock-False-1000-5-100-1] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-cityblock-True-100-100-10-100] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-cityblock-True-1000-5-100-1] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-euclidean-False-100-100-10-100] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-euclidean-False-1000-5-100-1] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-euclidean-True-100-100-10-100] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-euclidean-True-1000-5-100-1] [32mPASSED[0m[33m [ 23%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l1-False-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l1-False-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l1-True-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l1-True-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l2-False-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l2-False-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l2-True-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-l2-True-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-manhattan-False-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-manhattan-False-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-manhattan-True-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-manhattan-True-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-minkowski-False-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-minkowski-False-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-minkowski-True-100-100-10-100] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_unsupervised_kneighbors[float64-minkowski-True-1000-5-100-1] [32mPASSED[0m[33m [ 24%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-l1-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-l1-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-l2-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-l2-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-1-100-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 25%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-l1-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-l1-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-l2-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-l2-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-50-500-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 26%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-l1-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-l1-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-l2-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-l2-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsClassifier-100-1000-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 27%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-l1-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-l1-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-l2-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-l2-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-1-100-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-l1-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-l1-1000-5-100] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-l2-100-100-10] [33mSKIPPED[0m[33m [ 28%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-l2-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-50-500-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-l1-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-l1-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-l2-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-l2-1000-5-100] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 29%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-KNeighborsRegressor-100-1000-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-l1-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-l1-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-l2-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-l2-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 30%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-1-100-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-l1-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-l1-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-l2-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-l2-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-50-500-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 31%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-l1-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-l1-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-l2-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-l2-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsClassifier-100-1000-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 32%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-l1-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-l1-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-l2-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-l2-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-1-100-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 33%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-l1-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-l1-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-l2-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-l2-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-50-500-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-chebyshev-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-chebyshev-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-cityblock-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-cityblock-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-euclidean-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-euclidean-1000-5-100] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-l1-100-100-10] [33mSKIPPED[0m[33m [ 34%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-l1-1000-5-100] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-l2-100-100-10] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-l2-1000-5-100] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-manhattan-100-100-10] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-manhattan-1000-5-100] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-minkowski-100-100-10] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float32-RadiusNeighborsRegressor-100-1000-minkowski-1000-5-100] [33mSKIPPED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-chebyshev-100-100-10] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-cityblock-100-100-10] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-cityblock-1000-5-100] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-euclidean-100-100-10] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-euclidean-1000-5-100] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-l1-100-100-10] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-l1-1000-5-100] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-l2-100-100-10] [32mPASSED[0m[33m [ 35%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-l2-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-manhattan-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-manhattan-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-minkowski-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-1-100-minkowski-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-chebyshev-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-cityblock-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-cityblock-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-euclidean-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-euclidean-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-l1-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-l1-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-l2-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-l2-1000-5-100] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-manhattan-100-100-10] [32mPASSED[0m[33m [ 36%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-manhattan-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-minkowski-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-50-500-minkowski-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-chebyshev-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-cityblock-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-cityblock-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-euclidean-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-euclidean-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-l1-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-l1-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-l2-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-l2-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-manhattan-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-manhattan-1000-5-100] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-minkowski-100-100-10] [32mPASSED[0m[33m [ 37%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsClassifier-100-1000-minkowski-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-chebyshev-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-cityblock-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-cityblock-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-euclidean-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-euclidean-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-l1-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-l1-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-l2-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-l2-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-manhattan-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-manhattan-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-minkowski-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-1-100-minkowski-1000-5-100] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-chebyshev-100-100-10] [32mPASSED[0m[33m [ 38%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-cityblock-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-cityblock-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-euclidean-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-euclidean-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-l1-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-l1-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-l2-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-l2-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-manhattan-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-manhattan-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-minkowski-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-50-500-minkowski-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-chebyshev-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-cityblock-100-100-10] [32mPASSED[0m[33m [ 39%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-cityblock-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-euclidean-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-euclidean-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-l1-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-l1-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-l2-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-l2-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-manhattan-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-manhattan-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-minkowski-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-KNeighborsRegressor-100-1000-minkowski-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-chebyshev-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-cityblock-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-cityblock-1000-5-100] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-euclidean-100-100-10] [32mPASSED[0m[33m [ 40%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-euclidean-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-l1-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-l1-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-l2-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-l2-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-manhattan-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-manhattan-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-minkowski-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-1-100-minkowski-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-chebyshev-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-cityblock-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-cityblock-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-euclidean-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-euclidean-1000-5-100] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-l1-100-100-10] [32mPASSED[0m[33m [ 41%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-l1-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-l2-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-l2-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-manhattan-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-manhattan-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-minkowski-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-50-500-minkowski-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-chebyshev-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-cityblock-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-cityblock-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-euclidean-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-euclidean-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-l1-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-l1-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-l2-100-100-10] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-l2-1000-5-100] [32mPASSED[0m[33m [ 42%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-manhattan-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-manhattan-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-minkowski-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsClassifier-100-1000-minkowski-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-chebyshev-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-cityblock-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-cityblock-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-euclidean-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-euclidean-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-l1-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-l1-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-l2-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-l2-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-manhattan-100-100-10] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-manhattan-1000-5-100] [32mPASSED[0m[33m [ 43%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-minkowski-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-1-100-minkowski-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-chebyshev-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-cityblock-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-cityblock-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-euclidean-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-euclidean-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-l1-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-l1-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-l2-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-l2-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-manhattan-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-manhattan-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-minkowski-100-100-10] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-50-500-minkowski-1000-5-100] [32mPASSED[0m[33m [ 44%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-chebyshev-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-chebyshev-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-cityblock-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-cityblock-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-euclidean-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-euclidean-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-l1-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-l1-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-l2-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-l2-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-manhattan-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-manhattan-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-minkowski-100-100-10] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_neigh_predictions_algorithm_agnosticity[float64-RadiusNeighborsRegressor-100-1000-minkowski-1000-5-100] [32mPASSED[0m[33m [ 45%][0m
test_neighbors.py::test_unsupervised_inputs[float32-KNeighborsClassifier] [33mSKIPPED[0m[33m [ 45%][0m
test_neighbors.py::test_unsupervised_inputs[float32-KNeighborsRegressor] [33mSKIPPED[0m[33m [ 45%][0m
test_neighbors.py::test_unsupervised_inputs[float32-NearestNeighbors] [33mSKIPPED[0m[33m [ 46%][0m
test_neighbors.py::test_unsupervised_inputs[float64-KNeighborsClassifier] [32mPASSED[0m[33m [ 46%][0m
test_neighbors.py::test_unsupervised_inputs[float64-KNeighborsRegressor] [32mPASSED[0m[33m [ 46%][0m
test_neighbors.py::test_unsupervised_inputs[float64-NearestNeighbors] [32mPASSED[0m[33m [ 46%][0m
test_neighbors.py::test_n_neighbors_datatype [32mPASSED[0m[33m                      [ 46%][0m
test_neighbors.py::test_not_fitted_error_gets_raised [32mPASSED[0m[33m              [ 46%][0m
test_neighbors.py::test_precomputed_dense [32mPASSED[0m[33m                         [ 46%][0m
test_neighbors.py::test_precomputed_sparse_knn[csr] [32mPASSED[0m[33m               [ 46%][0m
test_neighbors.py::test_precomputed_sparse_knn[lil] [32mPASSED[0m[33m               [ 46%][0m
test_neighbors.py::test_precomputed_sparse_radius[csr] [32mPASSED[0m[33m            [ 46%][0m
test_neighbors.py::test_precomputed_sparse_radius[lil] [32mPASSED[0m[33m            [ 46%][0m
test_neighbors.py::test_is_sorted_by_data [32mPASSED[0m[33m                         [ 46%][0m
test_neighbors.py::test_check_precomputed [32mPASSED[0m[33m                         [ 46%][0m
test_neighbors.py::test_precomputed_sparse_invalid [32mPASSED[0m[33m                [ 46%][0m
test_neighbors.py::test_precomputed_cross_validation [32mPASSED[0m[33m              [ 46%][0m
test_neighbors.py::test_unsupervised_radius_neighbors[float32] [33mSKIPPED[0m[33m   [ 46%][0m
test_neighbors.py::test_unsupervised_radius_neighbors[float64] [32mPASSED[0m[33m    [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-uniform-ball_tree] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-uniform-brute] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-uniform-kd_tree] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-uniform-auto] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-distance-ball_tree] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-distance-brute] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-distance-kd_tree] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-distance-auto] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-_weight_func-ball_tree] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-_weight_func-brute] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-_weight_func-kd_tree] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float32-_weight_func-auto] [33mSKIPPED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float64-uniform-ball_tree] [32mPASSED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float64-uniform-brute] [32mPASSED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float64-uniform-kd_tree] [32mPASSED[0m[33m [ 47%][0m
test_neighbors.py::test_kneighbors_classifier[float64-uniform-auto] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-distance-ball_tree] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-distance-brute] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-distance-kd_tree] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-distance-auto] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-_weight_func-ball_tree] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-_weight_func-brute] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-_weight_func-kd_tree] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier[float64-_weight_func-auto] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier_float_labels[float32] [33mSKIPPED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier_float_labels[float64] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier_predict_proba[float32] [33mSKIPPED[0m[33m [ 48%][0m
test_neighbors.py::test_kneighbors_classifier_predict_proba[float64] [32mPASSED[0m[33m [ 48%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-uniform-ball_tree] [33mSKIPPED[0m[33m [ 48%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-uniform-brute] [33mSKIPPED[0m[33m [ 48%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-uniform-kd_tree] [33mSKIPPED[0m[33m [ 48%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-uniform-auto] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-distance-ball_tree] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-distance-brute] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-distance-kd_tree] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-distance-auto] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-_weight_func-ball_tree] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-_weight_func-brute] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-_weight_func-kd_tree] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float32-_weight_func-auto] [33mSKIPPED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-uniform-ball_tree] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-uniform-brute] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-uniform-kd_tree] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-uniform-auto] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-distance-ball_tree] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-distance-brute] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-distance-kd_tree] [32mPASSED[0m[33m [ 49%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-distance-auto] [32mPASSED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-_weight_func-ball_tree] [32mPASSED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-_weight_func-brute] [32mPASSED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-_weight_func-kd_tree] [32mPASSED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier[float64-_weight_func-auto] [32mPASSED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_kwargs_is_deprecated [32mPASSED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-uniform-ball_tree] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-uniform-brute] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-uniform-kd_tree] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-uniform-auto] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-distance-ball_tree] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-distance-brute] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-distance-kd_tree] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-distance-auto] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-_weight_func-ball_tree] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-_weight_func-brute] [33mSKIPPED[0m[33m [ 50%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-_weight_func-kd_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-0-_weight_func-auto] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-uniform-ball_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-uniform-brute] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-uniform-kd_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-uniform-auto] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-distance-ball_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-distance-brute] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-distance-kd_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-distance-auto] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-_weight_func-ball_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-_weight_func-brute] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-_weight_func-kd_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32--1-_weight_func-auto] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-uniform-ball_tree] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-uniform-brute] [33mSKIPPED[0m[33m [ 51%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-uniform-kd_tree] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-uniform-auto] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-distance-ball_tree] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-distance-brute] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-distance-kd_tree] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-distance-auto] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-_weight_func-ball_tree] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-_weight_func-brute] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-_weight_func-kd_tree] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float32-None-_weight_func-auto] [33mSKIPPED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-uniform-ball_tree] [32mPASSED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-uniform-brute] [32mPASSED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-uniform-kd_tree] [32mPASSED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-uniform-auto] [32mPASSED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-distance-ball_tree] [32mPASSED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-distance-brute] [32mPASSED[0m[33m [ 52%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-distance-kd_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-distance-auto] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-_weight_func-ball_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-_weight_func-brute] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-_weight_func-kd_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-0-_weight_func-auto] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-uniform-ball_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-uniform-brute] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-uniform-kd_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-uniform-auto] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-distance-ball_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-distance-brute] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-distance-kd_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-distance-auto] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-_weight_func-ball_tree] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-_weight_func-brute] [32mPASSED[0m[33m [ 53%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-_weight_func-kd_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64--1-_weight_func-auto] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-uniform-ball_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-uniform-brute] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-uniform-kd_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-uniform-auto] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-distance-ball_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-distance-brute] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-distance-kd_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-distance-auto] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-_weight_func-ball_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-_weight_func-brute] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-_weight_func-kd_tree] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_when_no_neighbors[float64-None-_weight_func-auto] [32mPASSED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-uniform-ball_tree] [33mSKIPPED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-uniform-brute] [33mSKIPPED[0m[33m [ 54%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-uniform-kd_tree] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-uniform-auto] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-distance-ball_tree] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-distance-brute] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-distance-kd_tree] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-distance-auto] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-_weight_func-ball_tree] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-_weight_func-brute] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-_weight_func-kd_tree] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float32-_weight_func-auto] [33mSKIPPED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-uniform-ball_tree] [32mPASSED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-uniform-brute] [32mPASSED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-uniform-kd_tree] [32mPASSED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-uniform-auto] [32mPASSED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-distance-ball_tree] [32mPASSED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-distance-brute] [32mPASSED[0m[33m [ 55%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-distance-kd_tree] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-distance-auto] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-_weight_func-ball_tree] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-_weight_func-brute] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-_weight_func-kd_tree] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_classifier_outlier_labeling[float64-_weight_func-auto] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_classifier_zero_distance [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_neighbors_regressors_zero_distance [32mPASSED[0m[33m        [ 56%][0m
test_neighbors.py::test_radius_neighbors_boundary_handling [32mPASSED[0m[33m        [ 56%][0m
test_neighbors.py::test_radius_neighbors_returns_array_of_objects [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_query_equidistant_kth_nn[ball_tree] [32mPASSED[0m[33m       [ 56%][0m
test_neighbors.py::test_query_equidistant_kth_nn[kd_tree] [32mPASSED[0m[33m         [ 56%][0m
test_neighbors.py::test_query_equidistant_kth_nn[brute] [32mPASSED[0m[33m           [ 56%][0m
test_neighbors.py::test_radius_neighbors_sort_results[ball_tree-euclidean] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_sort_results[kd_tree-euclidean] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_sort_results[brute-euclidean] [32mPASSED[0m[33m [ 56%][0m
test_neighbors.py::test_radius_neighbors_sort_results[brute-precomputed] [32mPASSED[0m[33m [ 57%][0m
test_neighbors.py::test_RadiusNeighborsClassifier_multioutput [32mPASSED[0m[33m     [ 57%][0m
test_neighbors.py::test_kneighbors_classifier_sparse [32mPASSED[0m[33m              [ 57%][0m
test_neighbors.py::test_KNeighborsClassifier_multioutput [32mPASSED[0m[33m          [ 57%][0m
test_neighbors.py::test_kneighbors_regressor [32mPASSED[0m[33m                      [ 57%][0m
test_neighbors.py::test_KNeighborsRegressor_multioutput_uniform_weight [32mPASSED[0m[33m [ 57%][0m
test_neighbors.py::test_kneighbors_regressor_multioutput [32mPASSED[0m[33m          [ 57%][0m
test_neighbors.py::test_radius_neighbors_regressor [32mPASSED[0m[33m                [ 57%][0m
test_neighbors.py::test_RadiusNeighborsRegressor_multioutput_with_uniform_weight [32mPASSED[0m[33m [ 57%][0m
test_neighbors.py::test_RadiusNeighborsRegressor_multioutput [32mPASSED[0m[33m      [ 57%][0m
test_neighbors.py::test_kneighbors_regressor_sparse [32mPASSED[0m[33m               [ 57%][0m
test_neighbors.py::test_neighbors_iris [32mPASSED[0m[33m                            [ 57%][0m
test_neighbors.py::test_neighbors_digits [32mPASSED[0m[33m                          [ 57%][0m
test_neighbors.py::test_kneighbors_graph [32mPASSED[0m[33m                          [ 57%][0m
test_neighbors.py::test_kneighbors_graph_sparse[connectivity-1] [32mPASSED[0m[33m   [ 57%][0m
test_neighbors.py::test_kneighbors_graph_sparse[connectivity-2] [32mPASSED[0m[33m   [ 57%][0m
test_neighbors.py::test_kneighbors_graph_sparse[connectivity-3] [32mPASSED[0m[33m   [ 57%][0m
test_neighbors.py::test_kneighbors_graph_sparse[distance-1] [32mPASSED[0m[33m       [ 58%][0m
test_neighbors.py::test_kneighbors_graph_sparse[distance-2] [32mPASSED[0m[33m       [ 58%][0m
test_neighbors.py::test_kneighbors_graph_sparse[distance-3] [32mPASSED[0m[33m       [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph [32mPASSED[0m[33m                    [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph_sparse[connectivity-1] [32mPASSED[0m[33m [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph_sparse[connectivity-2] [32mPASSED[0m[33m [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph_sparse[connectivity-3] [32mPASSED[0m[33m [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph_sparse[distance-1] [32mPASSED[0m[33m [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph_sparse[distance-2] [32mPASSED[0m[33m [ 58%][0m
test_neighbors.py::test_radius_neighbors_graph_sparse[distance-3] [32mPASSED[0m[33m [ 58%][0m
test_neighbors.py::test_neighbors_badargs [32mPASSED[0m[33m                         [ 58%][0m
test_neighbors.py::test_neighbors_metrics[float32-braycurtis] [33mSKIPPED[0m[33m    [ 58%][0m
test_neighbors.py::test_neighbors_metrics[float32-canberra] [33mSKIPPED[0m[33m      [ 58%][0m
test_neighbors.py::test_neighbors_metrics[float32-chebyshev] [33mSKIPPED[0m[33m     [ 58%][0m
test_neighbors.py::test_neighbors_metrics[float32-cityblock] [33mSKIPPED[0m[33m     [ 58%][0m
test_neighbors.py::test_neighbors_metrics[float32-euclidean] [33mSKIPPED[0m[33m     [ 58%][0m
test_neighbors.py::test_neighbors_metrics[float32-haversine] [33mSKIPPED[0m[33m     [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float32-l1] [33mSKIPPED[0m (Set S...)[33m [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float32-l2] [33mSKIPPED[0m (Set S...)[33m [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float32-mahalanobis] [33mSKIPPED[0m[33m   [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float32-manhattan] [33mSKIPPED[0m[33m     [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float32-minkowski] [33mSKIPPED[0m[33m     [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float32-seuclidean] [33mSKIPPED[0m[33m    [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-braycurtis] [32mPASSED[0m[33m     [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-canberra] [32mPASSED[0m[33m       [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-chebyshev] [32mPASSED[0m[33m      [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-cityblock] [32mPASSED[0m[33m      [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-euclidean] [32mPASSED[0m[33m      [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-haversine] [32mPASSED[0m[33m      [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-l1] [32mPASSED[0m[33m             [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-l2] [32mPASSED[0m[33m             [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-mahalanobis] [32mPASSED[0m[33m    [ 59%][0m
test_neighbors.py::test_neighbors_metrics[float64-manhattan] [32mPASSED[0m[33m      [ 60%][0m
test_neighbors.py::test_neighbors_metrics[float64-minkowski] [32mPASSED[0m[33m      [ 60%][0m
test_neighbors.py::test_neighbors_metrics[float64-seuclidean] [32mPASSED[0m[33m     [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-braycurtis] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-canberra] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-chebyshev] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-cityblock] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-correlation] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-cosine] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-dice] [33mSKIPPED[0m[33m   [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-euclidean] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-hamming] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-haversine] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-jaccard] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-kulsinski] [33mSKIPPED[0m[33m [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-l1] [33mSKIPPED[0m[33m     [ 60%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-l2] [33mSKIPPED[0m[33m     [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-mahalanobis] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-manhattan] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-matching] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-minkowski] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-nan_euclidean] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-rogerstanimoto] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-russellrao] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-seuclidean] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-sokalmichener] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-sokalsneath] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-sqeuclidean] [33mSKIPPED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float32-yule] [33mSKIPPED[0m[33m   [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-braycurtis] [32mPASSED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-canberra] [32mPASSED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-chebyshev] [32mPASSED[0m[33m [ 61%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-cityblock] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-correlation] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-cosine] [32mPASSED[0m[33m  [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-dice] [32mPASSED[0m[33m    [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-euclidean] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-hamming] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-haversine] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-jaccard] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-kulsinski] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-l1] [32mPASSED[0m[33m      [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-l2] [32mPASSED[0m[33m      [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-mahalanobis] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-manhattan] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-matching] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-minkowski] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-nan_euclidean] [32mPASSED[0m[33m [ 62%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-rogerstanimoto] [32mPASSED[0m[33m [ 63%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-russellrao] [32mPASSED[0m[33m [ 63%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-seuclidean] [32mPASSED[0m[33m [ 63%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-sokalmichener] [32mPASSED[0m[33m [ 63%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-sokalsneath] [32mPASSED[0m[33m [ 63%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-sqeuclidean] [32mPASSED[0m[33m [ 63%][0m
test_neighbors.py::test_kneighbors_brute_backend[float64-yule] [32mPASSED[0m[33m    [ 63%][0m
test_neighbors.py::test_callable_metric [32mPASSED[0m[33m                           [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-braycurtis] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-canberra] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-chebyshev] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-cityblock] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-correlation] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-cosine] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-dice] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-euclidean] [33mSKIPPED[0m[33m [ 63%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-hamming] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-haversine] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-jaccard] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-kulsinski] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-l1] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-l2] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-mahalanobis] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-manhattan] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-matching] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-minkowski] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-nan_euclidean] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-precomputed] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-rogerstanimoto] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-russellrao] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-seuclidean] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-sokalmichener] [33mSKIPPED[0m[33m [ 64%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-sokalsneath] [33mSKIPPED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-sqeuclidean] [33mSKIPPED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float32-yule] [33mSKIPPED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-braycurtis] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-canberra] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-chebyshev] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-cityblock] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-correlation] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-cosine] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-dice] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-euclidean] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-hamming] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-haversine] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-jaccard] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-kulsinski] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-l1] [32mPASSED[0m[33m [ 65%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-l2] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-mahalanobis] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-manhattan] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-matching] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-minkowski] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-nan_euclidean] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-precomputed] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-rogerstanimoto] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-russellrao] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-seuclidean] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-sokalmichener] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-sokalsneath] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-sqeuclidean] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-yule] [32mPASSED[0m[33m [ 66%][0m
test_neighbors.py::test_metric_params_interface [32mPASSED[0m[33m                   [ 66%][0m
test_neighbors.py::test_predict_sparse_ball_kd_tree [32mPASSED[0m[33m               [ 66%][0m
test_neighbors.py::test_non_euclidean_kneighbors [32mPASSED[0m[33m                  [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_train_is_not_query [32mPASSED[0m[33m [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_X_None[ball_tree] [32mPASSED[0m[33m  [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_X_None[brute] [32mPASSED[0m[33m      [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_X_None[kd_tree] [32mPASSED[0m[33m    [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_X_None[auto] [32mPASSED[0m[33m       [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_duplicates[ball_tree] [32mPASSED[0m[33m [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_duplicates[brute] [32mPASSED[0m[33m  [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_duplicates[kd_tree] [32mPASSED[0m[33m [ 67%][0m
test_neighbors.py::test_k_and_radius_neighbors_duplicates[auto] [32mPASSED[0m[33m   [ 67%][0m
test_neighbors.py::test_include_self_neighbors_graph [32mPASSED[0m[33m              [ 67%][0m
test_neighbors.py::test_same_knn_parallel[ball_tree] [32mPASSED[0m[33m              [ 67%][0m
test_neighbors.py::test_same_knn_parallel[brute] [32mPASSED[0m[33m                  [ 67%][0m
test_neighbors.py::test_same_knn_parallel[kd_tree] [32mPASSED[0m[33m                [ 67%][0m
test_neighbors.py::test_same_knn_parallel[auto] [32mPASSED[0m[33m                   [ 67%][0m
test_neighbors.py::test_same_radius_neighbors_parallel[ball_tree] [32mPASSED[0m[33m [ 67%][0m
test_neighbors.py::test_same_radius_neighbors_parallel[brute] [32mPASSED[0m[33m     [ 68%][0m
test_neighbors.py::test_same_radius_neighbors_parallel[kd_tree] [32mPASSED[0m[33m   [ 68%][0m
test_neighbors.py::test_same_radius_neighbors_parallel[auto] [32mPASSED[0m[33m      [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[ball_tree-threading] [32mPASSED[0m[33m  [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[ball_tree-sequential] [32mPASSED[0m[33m [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[brute-threading] [32mPASSED[0m[33m      [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[brute-sequential] [32mPASSED[0m[33m     [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[kd_tree-threading] [32mPASSED[0m[33m    [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[kd_tree-sequential] [32mPASSED[0m[33m   [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[auto-threading] [32mPASSED[0m[33m       [ 68%][0m
test_neighbors.py::test_knn_forcing_backend[auto-sequential] [32mPASSED[0m[33m      [ 68%][0m
test_neighbors.py::test_dtype_convert [32mPASSED[0m[33m                             [ 68%][0m
test_neighbors.py::test_sparse_metric_callable [32mPASSED[0m[33m                    [ 68%][0m
test_neighbors.py::test_pairwise_boolean_distance [32mPASSED[0m[33m                 [ 68%][0m
test_neighbors.py::test_radius_neighbors_predict_proba [32mPASSED[0m[33m            [ 68%][0m
test_neighbors.py::test_pipeline_with_nearest_neighbors_transformer [32mPASSED[0m[33m [ 68%][0m
test_neighbors.py::test_auto_algorithm[X0-precomputed-None-brute] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_auto_algorithm[X1-euclidean-None-brute] [32mPASSED[0m[33m   [ 69%][0m
test_neighbors.py::test_auto_algorithm[X2-euclidean-None-brute] [32mPASSED[0m[33m   [ 69%][0m
test_neighbors.py::test_auto_algorithm[X3-euclidean-None-kd_tree] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_auto_algorithm[X4-seuclidean-metric_params4-ball_tree] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_auto_algorithm[X5-correlation-None-brute] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_neighbors_distance_metric_deprecation [32mPASSED[0m[33m     [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[braycurtis] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[canberra] [32mPASSED[0m[33m  [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[chebyshev] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[cityblock] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[correlation] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[cosine] [32mPASSED[0m[33m    [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[dice] [32mPASSED[0m[33m      [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[euclidean] [32mPASSED[0m[33m [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[hamming] [32mPASSED[0m[33m   [ 69%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[haversine] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[jaccard] [32mPASSED[0m[33m   [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[kulsinski] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[l1] [32mPASSED[0m[33m        [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[l2] [32mPASSED[0m[33m        [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[mahalanobis] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[manhattan] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[matching] [32mPASSED[0m[33m  [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[minkowski] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[nan_euclidean] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[rogerstanimoto] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[russellrao] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[seuclidean] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[sokalmichener] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[sokalsneath] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[sqeuclidean] [32mPASSED[0m[33m [ 70%][0m
test_neighbors.py::test_radius_neighbors_brute_backend[yule] [32mPASSED[0m[33m      [ 71%][0m
test_neighbors.py::test_valid_metrics_has_no_duplicate [32mPASSED[0m[33m            [ 71%][0m
test_neighbors.py::test_regressor_predict_on_arraylikes [32mPASSED[0m[33m           [ 71%][0m
test_neighbors_pipeline.py::test_spectral_clustering [32mPASSED[0m[33m              [ 71%][0m
test_neighbors_pipeline.py::test_spectral_embedding [32mPASSED[0m[33m               [ 71%][0m
test_neighbors_pipeline.py::test_dbscan [32mPASSED[0m[33m                           [ 71%][0m
test_neighbors_pipeline.py::test_isomap [32mPASSED[0m[33m                           [ 71%][0m
test_neighbors_pipeline.py::test_tsne [32mPASSED[0m[33m                             [ 71%][0m
test_neighbors_pipeline.py::test_lof_novelty_false [32mPASSED[0m[33m                [ 71%][0m
test_neighbors_pipeline.py::test_lof_novelty_true [32mPASSED[0m[33m                 [ 71%][0m
test_neighbors_pipeline.py::test_kneighbors_regressor [32mPASSED[0m[33m             [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 71%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-linear-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-linear-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-linear-KDTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-linear-BallTree] [32mPASSED[0m[33m [ 72%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-gaussian-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-gaussian-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-tophat-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-tophat-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-exponential-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-exponential-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-linear-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-linear-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-cosine-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-0-1-cosine-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 73%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-linear-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-linear-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 74%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-linear-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-linear-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-gaussian-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-gaussian-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-tophat-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-tophat-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-exponential-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-exponential-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-linear-KDTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-linear-BallTree] [32mPASSED[0m[33m [ 75%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-cosine-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-1e-06-1e-05-1-cosine-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-linear-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-linear-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 76%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-linear-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-linear-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-gaussian-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-gaussian-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-tophat-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-tophat-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 77%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-exponential-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-exponential-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-linear-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-linear-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-cosine-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-0-1-cosine-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-linear-KDTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-linear-BallTree] [32mPASSED[0m[33m [ 78%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-linear-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-linear-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-gaussian-KDTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-gaussian-BallTree] [32mPASSED[0m[33m [ 79%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-tophat-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-tophat-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-exponential-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-exponential-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-linear-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-linear-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-cosine-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[True-0.01-1e-05-1-cosine-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 80%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-linear-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-linear-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-linear-KDTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-linear-BallTree] [32mPASSED[0m[33m [ 81%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-gaussian-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-gaussian-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-tophat-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-tophat-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-exponential-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-exponential-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-linear-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-linear-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-cosine-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-0-1-cosine-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 82%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-linear-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-linear-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 83%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-linear-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-linear-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-gaussian-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-gaussian-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-tophat-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-tophat-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-exponential-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-exponential-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-linear-KDTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-linear-BallTree] [32mPASSED[0m[33m [ 84%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-cosine-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-1e-06-1e-05-1-cosine-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-linear-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-linear-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 85%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-linear-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-linear-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-gaussian-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-gaussian-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-tophat-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-tophat-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-exponential-KDTree] [32mPASSED[0m[33m [ 86%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-exponential-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-linear-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-linear-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-cosine-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-0-1-cosine-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-gaussian-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-gaussian-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-tophat-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-tophat-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-epanechnikov-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-epanechnikov-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-exponential-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-exponential-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-linear-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-linear-BallTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-cosine-KDTree] [32mPASSED[0m[33m [ 87%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.01-cosine-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-gaussian-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-gaussian-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-tophat-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-tophat-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-exponential-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-exponential-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-linear-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-linear-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-cosine-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-0.1-cosine-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-gaussian-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-gaussian-BallTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-tophat-KDTree] [32mPASSED[0m[33m [ 88%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-tophat-BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-epanechnikov-KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-epanechnikov-BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-exponential-KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-exponential-BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-linear-KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-linear-BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-cosine-KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_kernel_density[False-0.01-1e-05-1-cosine-BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_query_radius[KDTree] [32mPASSED[0m[33m   [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_query_radius[BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_query_radius_distance[KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_query_radius_distance[BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_two_point[True-KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_two_point[True-BallTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_two_point[False-KDTree] [32mPASSED[0m[33m [ 89%][0m
test_neighbors_tree.py::test_neighbor_tree_two_point[False-BallTree] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_neighbors_heap[NeighborsHeap0] [32mPASSED[0m[33m       [ 90%][0m
test_neighbors_tree.py::test_neighbors_heap[NeighborsHeap1] [32mPASSED[0m[33m       [ 90%][0m
test_neighbors_tree.py::test_node_heap[nodeheap_sort0] [32mPASSED[0m[33m            [ 90%][0m
test_neighbors_tree.py::test_node_heap[nodeheap_sort1] [32mPASSED[0m[33m            [ 90%][0m
test_neighbors_tree.py::test_simultaneous_sort[simultaneous_sort0] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_simultaneous_sort[simultaneous_sort1] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_gaussian_kde[KDTree] [32mPASSED[0m[33m                 [ 90%][0m
test_neighbors_tree.py::test_gaussian_kde[BallTree] [32mPASSED[0m[33m               [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-KDTree-euclidean] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-KDTree-manhattan] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-KDTree-chebyshev] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-KDTree-minkowski] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-euclidean] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-manhattan] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-minkowski] [32mPASSED[0m[33m [ 90%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-chebyshev] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-seuclidean] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-wminkowski] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-1-BallTree-mahalanobis] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-KDTree-euclidean] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-KDTree-manhattan] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-KDTree-chebyshev] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-KDTree-minkowski] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-euclidean] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-manhattan] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-minkowski] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-chebyshev] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-seuclidean] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-wminkowski] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-3-BallTree-mahalanobis] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-KDTree-euclidean] [32mPASSED[0m[33m [ 91%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-KDTree-manhattan] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-KDTree-chebyshev] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-KDTree-minkowski] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-euclidean] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-manhattan] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-minkowski] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-chebyshev] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-seuclidean] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-wminkowski] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-True-5-BallTree-mahalanobis] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-KDTree-euclidean] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-KDTree-manhattan] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-KDTree-chebyshev] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-KDTree-minkowski] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-euclidean] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-manhattan] [32mPASSED[0m[33m [ 92%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-minkowski] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-chebyshev] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-seuclidean] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-wminkowski] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-1-BallTree-mahalanobis] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-KDTree-euclidean] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-KDTree-manhattan] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-KDTree-chebyshev] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-KDTree-minkowski] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-euclidean] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-manhattan] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-minkowski] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-chebyshev] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-seuclidean] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-wminkowski] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-3-BallTree-mahalanobis] [32mPASSED[0m[33m [ 93%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-KDTree-euclidean] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-KDTree-manhattan] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-KDTree-chebyshev] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-KDTree-minkowski] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-euclidean] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-manhattan] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-minkowski] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-chebyshev] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-seuclidean] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-wminkowski] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[True-False-5-BallTree-mahalanobis] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-KDTree-euclidean] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-KDTree-manhattan] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-KDTree-chebyshev] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-KDTree-minkowski] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-euclidean] [32mPASSED[0m[33m [ 94%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-manhattan] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-minkowski] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-chebyshev] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-seuclidean] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-wminkowski] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-1-BallTree-mahalanobis] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-KDTree-euclidean] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-KDTree-manhattan] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-KDTree-chebyshev] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-KDTree-minkowski] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-euclidean] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-manhattan] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-minkowski] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-chebyshev] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-seuclidean] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-wminkowski] [32mPASSED[0m[33m [ 95%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-3-BallTree-mahalanobis] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-KDTree-euclidean] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-KDTree-manhattan] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-KDTree-chebyshev] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-KDTree-minkowski] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-euclidean] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-manhattan] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-minkowski] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-chebyshev] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-seuclidean] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-wminkowski] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-True-5-BallTree-mahalanobis] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-KDTree-euclidean] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-KDTree-manhattan] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-KDTree-chebyshev] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-KDTree-minkowski] [32mPASSED[0m[33m [ 96%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-euclidean] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-manhattan] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-minkowski] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-chebyshev] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-seuclidean] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-wminkowski] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-1-BallTree-mahalanobis] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-KDTree-euclidean] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-KDTree-manhattan] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-KDTree-chebyshev] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-KDTree-minkowski] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-euclidean] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-manhattan] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-minkowski] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-chebyshev] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-seuclidean] [32mPASSED[0m[33m [ 97%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-wminkowski] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-3-BallTree-mahalanobis] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-KDTree-euclidean] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-KDTree-manhattan] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-KDTree-chebyshev] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-KDTree-minkowski] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-euclidean] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-manhattan] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-minkowski] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-chebyshev] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-seuclidean] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-wminkowski] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_nn_tree_query[False-False-5-BallTree-mahalanobis] [32mPASSED[0m[33m [ 98%][0m
test_neighbors_tree.py::test_pickle[0-KDTree-euclidean] [32mPASSED[0m[33m           [ 98%][0m
test_neighbors_tree.py::test_pickle[0-BallTree-euclidean] [32mPASSED[0m[33m         [ 98%][0m
test_neighbors_tree.py::test_pickle[0-BallTree-dist_func] [32mPASSED[0m[33m         [ 98%][0m
test_neighbors_tree.py::test_pickle[1-KDTree-euclidean] [32mPASSED[0m[33m           [ 99%][0m
test_neighbors_tree.py::test_pickle[1-BallTree-euclidean] [32mPASSED[0m[33m         [ 99%][0m
test_neighbors_tree.py::test_pickle[1-BallTree-dist_func] [32mPASSED[0m[33m         [ 99%][0m
test_neighbors_tree.py::test_pickle[2-KDTree-euclidean] [32mPASSED[0m[33m           [ 99%][0m
test_neighbors_tree.py::test_pickle[2-BallTree-euclidean] [32mPASSED[0m[33m         [ 99%][0m
test_neighbors_tree.py::test_pickle[2-BallTree-dist_func] [32mPASSED[0m[33m         [ 99%][0m
test_quad_tree.py::test_quadtree_boundary_computation [32mPASSED[0m[33m             [ 99%][0m
test_quad_tree.py::test_quadtree_similar_point [32mPASSED[0m[33m                    [ 99%][0m
test_quad_tree.py::test_quad_tree_pickle[0-2] [32mPASSED[0m[33m                     [ 99%][0m
test_quad_tree.py::test_quad_tree_pickle[0-3] [32mPASSED[0m[33m                     [ 99%][0m
test_quad_tree.py::test_quad_tree_pickle[1-2] [32mPASSED[0m[33m                     [ 99%][0m
test_quad_tree.py::test_quad_tree_pickle[1-3] [32mPASSED[0m[33m                     [ 99%][0m
test_quad_tree.py::test_quad_tree_pickle[2-2] [32mPASSED[0m[33m                     [ 99%][0m
test_quad_tree.py::test_quad_tree_pickle[2-3] [32mPASSED[0m[33m                     [ 99%][0m
test_quad_tree.py::test_qt_insert_duplicate[2] [32mPASSED[0m[33m                    [ 99%][0m
test_quad_tree.py::test_qt_insert_duplicate[3] [32mPASSED[0m[33m                    [ 99%][0m
test_quad_tree.py::test_summarize [32mPASSED[0m[33m                                 [100%][0m

[33m=============================== warnings summary ===============================[0m
test_lof.py::test_n_neighbors_attribute
  /lib/python3.10/site-packages/sklearn/neighbors/_lof.py:285: UserWarning: n_neighbors (500) is greater than the total number of samples (150). n_neighbors will be set to (n_samples - 1) for estimation.
    warnings.warn(

test_lof.py::test_hasattr_prediction
test_lof.py::test_hasattr_prediction
  /lib/python3.10/site-packages/sklearn/neighbors/_lof.py:285: UserWarning: n_neighbors (20) is greater than the total number of samples (3). n_neighbors will be set to (n_samples - 1) for estimation.
    warnings.warn(

test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_nan_inf]
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_estimators_nan_inf]
  /lib/python3.10/site-packages/sklearn/neighbors/_lof.py:285: UserWarning: n_neighbors (20) is greater than the total number of samples (10). n_neighbors will be set to (n_samples - 1) for estimation.
    warnings.warn(

test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_classifier_data_not_an_array]
test_lof.py::test_novelty_true_common_tests[LocalOutlierFactor(novelty=True)-check_classifier_data_not_an_array]
  /lib/python3.10/site-packages/sklearn/neighbors/_lof.py:285: UserWarning: n_neighbors (20) is greater than the total number of samples (12). n_neighbors will be set to (n_samples - 1) for estimation.
    warnings.warn(

test_nearest_centroid.py::test_iris
test_nearest_centroid.py::test_iris_shrinkage
test_nearest_centroid.py::test_iris_shrinkage
test_nearest_centroid.py::test_iris_shrinkage
  /lib/python3.10/site-packages/sklearn/neighbors/_nearest_centroid.py:163: UserWarning: Averaging for metrics other than euclidean and manhattan not supported. The average is set to be the mean.
    warnings.warn(

test_neighbors.py::test_radius_neighbors_returns_array_of_objects
test_neighbors.py::test_radius_neighbors_sort_results[brute-precomputed]
  /lib/python3.10/site-packages/sklearn/neighbors/_base.py:206: EfficiencyWarning: Precomputed sparse input was not sorted by data.
    warnings.warn(

test_neighbors.py::test_neighbors_badargs
test_neighbors.py::test_neighbors_badargs
test_neighbors.py::test_neighbors_badargs
test_neighbors.py::test_neighbors_badargs
  /lib/python3.10/site-packages/sklearn/neighbors/_base.py:513: UserWarning: cannot use tree with sparse input: using brute force
    warnings.warn("cannot use tree with sparse input: using brute force")

test_neighbors.py::test_kneighbors_brute_backend[float64-dice]
test_neighbors.py::test_kneighbors_brute_backend[float64-dice]
test_neighbors.py::test_radius_neighbors_brute_backend[dice]
test_neighbors.py::test_radius_neighbors_brute_backend[dice]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric dice
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-jaccard]
test_neighbors.py::test_kneighbors_brute_backend[float64-jaccard]
test_neighbors.py::test_radius_neighbors_brute_backend[jaccard]
test_neighbors.py::test_radius_neighbors_brute_backend[jaccard]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric jaccard
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-kulsinski]
test_neighbors.py::test_kneighbors_brute_backend[float64-kulsinski]
test_neighbors.py::test_radius_neighbors_brute_backend[kulsinski]
test_neighbors.py::test_radius_neighbors_brute_backend[kulsinski]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric kulsinski
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-matching]
test_neighbors.py::test_kneighbors_brute_backend[float64-matching]
test_neighbors.py::test_radius_neighbors_brute_backend[matching]
test_neighbors.py::test_radius_neighbors_brute_backend[matching]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric matching
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-rogerstanimoto]
test_neighbors.py::test_kneighbors_brute_backend[float64-rogerstanimoto]
test_neighbors.py::test_radius_neighbors_brute_backend[rogerstanimoto]
test_neighbors.py::test_radius_neighbors_brute_backend[rogerstanimoto]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric rogerstanimoto
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-russellrao]
test_neighbors.py::test_kneighbors_brute_backend[float64-russellrao]
test_neighbors.py::test_radius_neighbors_brute_backend[russellrao]
test_neighbors.py::test_radius_neighbors_brute_backend[russellrao]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric russellrao
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-sokalmichener]
test_neighbors.py::test_kneighbors_brute_backend[float64-sokalmichener]
test_neighbors.py::test_radius_neighbors_brute_backend[sokalmichener]
test_neighbors.py::test_radius_neighbors_brute_backend[sokalmichener]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric sokalmichener
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-sokalsneath]
test_neighbors.py::test_kneighbors_brute_backend[float64-sokalsneath]
test_neighbors.py::test_radius_neighbors_brute_backend[sokalsneath]
test_neighbors.py::test_radius_neighbors_brute_backend[sokalsneath]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric sokalsneath
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_kneighbors_brute_backend[float64-yule]
test_neighbors.py::test_kneighbors_brute_backend[float64-yule]
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-yule]
test_neighbors.py::test_radius_neighbors_brute_backend[yule]
test_neighbors.py::test_radius_neighbors_brute_backend[yule]
  /lib/python3.10/site-packages/sklearn/metrics/pairwise.py:1975: DataConversionWarning: Data was converted to boolean for metric yule
    warnings.warn(msg, DataConversionWarning)

test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-minkowski]
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-minkowski]
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-minkowski]
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-minkowski]
test_neighbors.py::test_valid_brute_metric_for_auto_algorithm[float64-minkowski]
  /lib/python3.10/site-packages/sklearn/neighbors/_unsupervised.py:168: SyntaxWarning: Parameter p is found in metric_params. The corresponding parameter from __init__ is ignored.
    return self._fit(X)

test_neighbors.py::test_radius_neighbors_predict_proba
test_neighbors.py::test_radius_neighbors_predict_proba
  /lib/python3.10/site-packages/sklearn/neighbors/_classification.py:680: UserWarning: Outlier label -1 is not in training classes. All class probabilities of outliers will be assigned with 0.
    warnings.warn(

test_neighbors_pipeline.py::test_spectral_clustering
test_neighbors_pipeline.py::test_spectral_embedding
  /lib/python3.10/site-packages/sklearn/manifold/_spectral_embedding.py:233: UserWarning: Array is not symmetric, and will be converted to symmetric by average with its transpose.
    adjacency = check_symmetric(adjacency)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
[33m=============== [32m1267 passed[0m, [33m[1m340 skipped[0m, [33m[1m63 warnings[0m[33m in 23.94s[0m[33m ================[0m
